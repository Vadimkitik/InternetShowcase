{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main-page/main-page.component.ts","webpack:///src/app/main-page/main-page.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/product-page/dialog-overviewform/dialog-overviewform.component.ts","webpack:///src/app/product-page/dialog-overviewform/dialog-overviewform.component.html","webpack:///src/app/product-page/product-list/product-list.component.ts","webpack:///src/app/product-page/product-list/product-list.component.html","webpack:///src/app/product-page/product-view/product-view.component.ts","webpack:///src/app/product-page/product-view/product-view.component.html","webpack:///src/app/product-page/products-routing.module.ts","webpack:///src/app/product-page/products.module.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/menu-nav/accordion/accordion-item/accordion-item.component.ts","webpack:///src/app/shared/components/menu-nav/accordion/accordion-item/accordion-item.component.html","webpack:///src/app/shared/components/menu-nav/accordion/accordion.component.ts","webpack:///src/app/shared/components/menu-nav/accordion/accordion.component.html","webpack:///src/app/shared/components/menu-nav/menu-nav.component.ts","webpack:///src/app/shared/components/menu-nav/menu-nav.component.html","webpack:///src/app/shared/components/not-found/not-found.component.ts","webpack:///src/app/shared/components/not-found/not-found.component.html","webpack:///src/app/shared/models/feedbackForm.model.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/category.service.ts","webpack:///src/app/shared/services/email.service.ts","webpack:///src/app/shared/services/guards/admin-guard.service.ts","webpack:///src/app/shared/services/guards/auth-guard.service.ts","webpack:///src/app/shared/services/guards/manager-guard.service.ts","webpack:///src/app/shared/services/intersepters/error-intersepter.service.ts","webpack:///src/app/shared/services/intersepters/token-intersepter.service.ts","webpack:///src/app/shared/services/product.service.ts","webpack:///src/app/shared/services/roles.service.ts","webpack:///src/app/shared/services/tree.service.ts","webpack:///src/app/shared/services/upload.service.ts","webpack:///src/app/shared/services/userValidate.service.ts","webpack:///src/app/shared/services/users.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shop/shop.component.ts","webpack:///src/app/shop/shop.component.html","webpack:///src/app/test-page/test-page.component.ts","webpack:///src/app/test-page/test-page.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","loadChildren","m","AdminPanelModule","AuthModule","redirectTo","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","AppModule","config","whitelistedDomains","blacklistedRoutes","declarations","bootstrap","MainPageComponent","MaterialComponents","MaterialModule","DialogOverviewformComponent","dialogRef","feedbackForm","close","onNoClick","ProductListComponent","categoryService","route","treeService","loaded","isAuth","params","subscribe","categoryLine","snapshot","getCategory","category","categoryName","name","products","length","loaderAndMessage","getProducts","children","error","load","mess","errorMsg","ProductViewComponent","productService","activeRoute","dialog","emailService","toastrService","oldPrice","productLine","open","width","data","productName","product","imageUrl","productPrice","price","checkAvailability","checkPrice","telephone","email","afterClosed","result","SendYourselfEmail","res","success","title","getProduct","productsRoutes","ProductsRoutingModule","forChild","ProductsModule","FooterComponent","HeaderComponent","getCategories","categories","list_to_tree","AccordionItemComponent","router","closeDrawerEvent","showBody","value","line","emit","navigate","toggle","closeDrawer","height","overflow","opacity","visibility","transform","animations","AccordionComponent","MenuNavComponent","showFiller","console","log","NotFoundComponent","FeedbackForm","message","TOKEN_KEY","TOKEN_FORGOTPASSWORD","USER_KEY","AuthService","http","urlLogin","apiUrl","urlRegister","urlForgotPassword","urlResetPassword","urlconfirmEmail","post","forgotUserPassword","resetUserPassword","token","window","removeItem","setItem","userName","roles","profile","JSON","stringify","parse","clear","CategoryService","url","get","pipe","handleError","put","EmailService","sendYourselfUrl","AdminGuard","authService","user","getUser","includes","warning","AuthGuard","jwtHelper","getToken","isTokenExpired","ManagerGuard","ErrorIntersepterService","request","next","handle","err","status","providedIn","TokenIntersepterService","clone","setHeaders","Authorization","ProductService","RolesService","userId","userRoles","TreeService","list","map","node","roots","i","parent_Id","push","findProducts","forEach","element","UploadService","formData","reportProgress","observe","imageName","UserValidateService","hasError","password","UsersService","SharedModule","provide","useClass","multi","providers","ShopComponent","TestPageComponent","environment","production","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\n\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { NotFoundComponent } from './shared/components/not-found/not-found.component';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { TestPageComponent } from './test-page/test-page.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: MainPageComponent },\r\n    { path: 'testpage', component: TestPageComponent },\r\n    { \r\n        path: 'admin-panel',\r\n        loadChildren: () => import('./adminPanel/adminPanel.module').then(m => m.AdminPanelModule)\r\n    },\r\n    { \r\n         path: 'auth',\r\n         loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\r\n    },\r\n    { path: 'shop', component: ShopComponent },\r\n    { path: 'not-found', component: NotFoundComponent },\r\n    { path: '**', redirectTo: '/not-found' },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes, {\r\n        preloadingStrategy: PreloadAllModules\r\n    })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent { }","<menu-nav>\r\n    <wfm-header></wfm-header>\r\n    <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"footer\">\r\n        <wfm-footer></wfm-footer>\r\n    </div>\r\n</menu-nav>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\n\r\nimport { MaterialModule } from './material/material.module';\r\nimport { AppComponent } from './app.component';\r\nimport  {AppRoutingModule} from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { HeaderComponent } from './shared/components/header/header.component';\r\nimport { FooterComponent } from './shared/components/footer/footer.component';\r\nimport { MenuNavComponent } from './shared/components/menu-nav/menu-nav.component';\r\nimport { ProductsModule } from './product-page/products.module';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { ToastrModule } from 'ngx-toastr/';;\r\nimport { TestPageComponent } from './test-page/test-page.component'\r\nimport { AccordionComponent } from './shared/components/menu-nav/accordion/accordion.component';\r\nimport { AccordionItemComponent } from './shared/components/menu-nav/accordion/accordion-item/accordion-item.component';\r\n\r\nexport function tokenGetter(){\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule,\r\n        ToastrModule.forRoot(),\r\n        SharedModule,\r\n        ProductsModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        JwtModule.forRoot({\r\n           config: {\r\n               tokenGetter: tokenGetter,\r\n               whitelistedDomains: [\"localhost:5000\"],\r\n               blacklistedRoutes: []\r\n           } \r\n        })\r\n        ],\r\n    declarations:\r\n        [\r\n            AppComponent,\r\n            ShopComponent,\r\n            MenuNavComponent,\r\n            HeaderComponent,\r\n            FooterComponent,\r\n            MainPageComponent,\r\n            TestPageComponent,\r\n            AccordionComponent, \r\n            AccordionItemComponent\r\n        ],\r\n    \r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Product } from '../shared/models/product.model';\r\nimport { Category } from '../shared/models/category.model';\r\nimport { CategoryService } from '../shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.css']\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n \r\n  @Input() categories: Category[];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"h1-line\"><span>Каталог товаров</span></h1>\r\n<!--BLOG-->\r\n<div class=\"container section\">\r\n    <!--BLOG POST-->\r\n    <div class=\"row\">\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'buketi']\" ><img src=\"assets/img/mainPage/buketi.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'buketi']\"  class=\"blog__read-more\">Букеты</a>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'cveti']\" ><img src=\"assets/img/mainPage/cveti.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'cveti']\"  class=\"blog__read-more\">Цветы</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'shari']\" ><img src=\"assets/img/mainPage/buketi.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'shari']\"  class=\"blog__read-more\">Шары</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'udobrenie']\" ><img src=\"assets/img/mainPage/udobreniya.jpg\"\r\n                            alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'udobrenie']\" class=\"blog__read-more\">Удобрение</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'gorshki']\" ><img src=\"assets/img/mainPage/gorshki.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'gorshki']\" class=\"blog__read-more\">Горшки</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'izdelia_iz_dereva']\" ><img src=\"assets/img/mainPage/izdeliya.jpg\"\r\n                            alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'izdelia_iz_dereva']\" class=\"blog__read-more \">Изделия из\r\n                        дерева ручной работы</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\n\r\nimport {TextFieldModule} from '@angular/cdk/text-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\nconst MaterialComponents =[\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatSelectModule,\r\n  MatRadioModule,\r\n  TextFieldModule,\r\n  MatCheckboxModule,\r\n  MatMenuModule,\r\n  MatDialogModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatToolbarModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [MaterialComponents],\r\n  exports: [MaterialComponents]\r\n})\r\nexport class MaterialModule { }\r\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FeedbackForm } from 'src/app/shared/models/feedbackForm.model';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'dialog-overviewform',\n  templateUrl: './dialog-overviewform.component.html',\n  styleUrls: ['./dialog-overviewform.component.css']\n})\nexport class DialogOverviewformComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewformComponent>,\n    @Inject(MAT_DIALOG_DATA) public feedbackForm: FeedbackForm) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"modal-text-cont\">\n  <div class=\"cover-collection\">\n    <div class=\"cover-img\">\n      <img src=\"{{feedbackForm.imageUrl}}\">\n    </div>\n    <h2 class=\"cover-title\">\n      {{ feedbackForm.productName }}\n    </h2>\n  </div>\n</div>\n<div class=\"info-form\">\n  <h2 mat-dialog-title>Уточнить наличие</h2>\n  <div mat-dialog-content>\n    <mat-form-field>\n      <mat-label>Имя</mat-label>\n      <input matInput [(ngModel)]=\"feedbackForm.name\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Телефон</mat-label>\n      <input matInput required [(ngModel)]=\"feedbackForm.telephone\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input matInput [(ngModel)]=\"feedbackForm.email\">\n    </mat-form-field>\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"feedbackForm.checkAvailability\" #roleCheck>Запросить наличие</mat-checkbox>\n    </section>\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"feedbackForm.checkPrice\" #roleCheck>Запросить цену</mat-checkbox>\n    </section>\n    <mat-form-field [style.fontSize]=\"16\" class=\"\">\n      <mat-label>Поле для примичания, вы можете задать вопрос</mat-label>\n      <textarea matInput\n                [(ngModel)]=\"feedbackForm.message\"\n                cdkTextareaAutosize\n                #autosize=\"cdkTextareaAutosize\"\n                cdkAutosizeMinRows=\"1\"\n                cdkAutosizeMaxRows=\"5\"></textarea>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-stroked-button (click)=\"onNoClick()\" color=\"warn\">Закрыть</button>\n    <button mat-stroked-button [mat-dialog-close]=\"feedbackForm\" color=\"primary\" cdkFocusInitial>Отправить</button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Product } from '../../shared/models/product.model';\r\nimport { CategoryService } from '../../shared/services/category.service';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { TreeService } from 'src/app/shared/services/tree.service';\r\n\r\n@Component({\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n    products: Product[];\r\n    categoryLine: string;\r\n    categoryName: string;\r\n    loaded: boolean = false;\r\n    isAuth: boolean = false;\r\n    public errorMsg;\r\n    cata: string;\r\n\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private route: ActivatedRoute,\r\n        private treeService: TreeService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params: Params) => {\r\n            this.categoryLine = this.route.snapshot.params['categoryLine'];\r\n            this.categoryService.getCategory(this.categoryLine).subscribe((category: Category) => {\r\n\r\n                this.categoryName = category.name;\r\n                \r\n                if (category.products.length != 0) {\r\n                    this.loaderAndMessage(true, \"\");\r\n                    this.products = category.products;\r\n                }\r\n                else {\r\n                    this.products = this.treeService.getProducts(category.children);\r\n                    if(this.products.length == 0) {\r\n                        this.loaderAndMessage(false, \"В этой категории нет товаров.\");\r\n                    }\r\n                    else {\r\n                        this.loaderAndMessage(true, \"\");\r\n                    }                    \r\n                }\r\n            }, error => {\r\n                this.categoryName = \"Error\";\r\n                this.loaderAndMessage(false, error);\r\n            });\r\n        });\r\n    }\r\n\r\n    private loaderAndMessage(load: boolean, mess: string){\r\n        this.loaded = load;\r\n        this.errorMsg = mess;\r\n    }\r\n}","<h1 class=\"h1-line\" *ngIf=\"categoryName\"><span>{{categoryName}}</span></h1>\r\n<div class=\"errorOrNot\" *ngIf=\"errorMsg\">\r\n    <h1>{{ errorMsg }}</h1>\r\n    <button [routerLink]=\"'/'\" class=\"button-outline\">продолжить</button>\r\n</div>\r\n<div class=\"section\" *ngIf=\"loaded\">\r\n    <div class=\"container\">\r\n        <!--ROW-->\r\n        <div class=\"row\">\r\n            <!--col-md-3-->\r\n            <div class=\"col-md-3\" *ngFor=\"let product of products\">\r\n                <div class=\"card\">\r\n                    <div class=\"card__image\">\r\n                        <img [src]=\"product.imageUrl\" alt=\"\">\r\n                        <a [routerLink]=\"['/product', product.productLine]\" class=\"card__hover\">\r\n                            <div>\r\n                                Подробнее\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <a class=\"card__title\">\r\n                        <div>{{ product.name}}</div>\r\n                    </a>\r\n                    <div class=\"card__price\">\r\n                        <span *ngIf=\"product.oldPrice\">{{ product.oldPrice}} BYN</span>\r\n                        {{ product.price}} BYN\r\n                    </div>\r\n                    <div class=\"card__button-discription\">\r\n                        <a [routerLink]=\"['/product', product.productLine]\"\r\n                           class=\"card__button card__button_nal\"\r\n                           >Подробнее\r\n                        </a>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n            <!--//col-md-3-->\r\n        </div>\r\n        <!--ROW-->\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { FeedbackForm } from 'src/app/shared/models/feedbackForm.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { DialogOverviewformComponent } from '../dialog-overviewform/dialog-overviewform.component';\r\nimport { EmailService } from 'src/app/shared/services/email.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'product-view',\r\n  templateUrl: './product-view.component.html',\r\n  styleUrls: ['./product-view.component.css']\r\n})\r\nexport class ProductViewComponent implements OnInit {\r\n\r\n  \r\n  productLine: string;\r\n  product: Product;\r\n  loaded: boolean = false;\r\n  oldPrice: boolean = false;\r\n  public errorMsg;\r\n  feedbackForm: FeedbackForm;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private activeRoute: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private emailService: EmailService,\r\n    private toastrService: ToastrService\r\n  ) { \r\n    this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n  }\r\n  \r\n  openDialog(): void {\r\n    \r\n    const dialogRef = this.dialog.open(DialogOverviewformComponent, {\r\n      width: '780px',\r\n      data: {\r\n        productName: this.product.name,\r\n        imageUrl: this.product.imageUrl,\r\n        productPrice: this.product.price,\r\n        checkAvailability: false,\r\n        checkPrice: false,\r\n        name: \"\",\r\n        telephone: \"\",\r\n        email: \"\"\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null) {  \r\n        this.feedbackForm = result;\r\n        this.emailService.SendYourselfEmail(this.feedbackForm).subscribe(res => {\r\n          this.toastrService.success(\"Email sent!\");\r\n        }, error => this.toastrService.error(error.error.title));        \r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.productService.getProduct(this.productLine)\r\n          .subscribe((data: Product) => {\r\n            this.product = data;\r\n            if(this.product.oldPrice != null) this.oldPrice = true;\r\n            this.loaded = true;\r\n          }, error => this.errorMsg = error);\r\n  }\r\n}\r\n","<!--PRODUCT DESCRIPTION -->\r\n<section>\r\n    <div class=\"container\">\r\n        <div class=\"errorOrNot\" *ngIf=\"errorMsg\">\r\n            <h1>{{ errorMsg }}</h1>\r\n            <button [routerLink]=\"'/'\" class=\"button-outline\">продолжить</button>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"loaded\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"product-cont\">\r\n                    <div class=\"product__image\">\r\n                        <img [src]=\"product.imageUrl\" class=\"animateImg\" alt=\"\" tabindex=\"0\">\r\n                    </div>\r\n                    <div class=\"product__info-block\">\r\n                        <h1>{{ product.name }} </h1>                       \r\n                        <div class=\"product__info-price\">\r\n                            <p class=\"product-info-price\">\r\n                                <span class=\"product-info-price__title\">Цена:</span>\r\n                                <span class=\"product-info-price__val\">\r\n                                    <span class=\"product-info-price__val-old\" *ngIf=\"oldPrice\">{{ product.oldPrice}}<small> BYN </small></span>\r\n                                    <span>{{ product.price }}</span> BYN\r\n                                </span>\r\n                            </p>                            \r\n                        </div>\r\n                        <button (click)=\"openDialog()\" class=\"button-outline\">Уточнить наличие</button>\r\n                        <div class=\"product-description\">\r\n                            <div class=\"column\">{{ product.description }} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\n\r\nconst productsRoutes: Routes = [\r\n    { path: 'products/:categoryLine',  component: ProductListComponent },\r\n    { path: 'product/:productLine', component: ProductViewComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(productsRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\n\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\nimport { DialogOverviewformComponent } from './dialog-overviewform/dialog-overviewform.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProductViewComponent,\r\n        ProductListComponent,\r\n        DialogOverviewformComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ProductsRoutingModule,\r\n        MaterialModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class ProductsModule {}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wfm-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--FOOTER-->\r\n<div class=\"container\">\r\n\r\n    <div class=\"footer-info\">\r\n        В магазине Цветов Alleutina Shop Вас ждет широкий ассортимент цветов,\r\n        живые и искусствунные, грунт, химия для огорода, а также различные композиции для души. Наш эксперт по\r\n        флористике поможет Вам в создании букета, оформления интерьера.\r\n        Ждем вас в нашем магазине в Гродно!\r\n    </div>\r\n\r\n    <div class=\"footer__copyright\">© Магазин Цветов Alleutina Shop в Гродно, 2020</div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from '../../models/category.model';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport { TreeService } from '../../services/tree.service';\r\n\r\n@Component({\r\n  selector: 'wfm-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  \r\n  categories: Category[];\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private treeService: TreeService\r\n  ) { }  \r\n\r\n  ngOnInit() { \r\n   this.categoryService.getCategories().subscribe((data:Category[]) => {\r\n     this.categories = this.treeService.list_to_tree(data);\r\n   })\r\n  }  \r\n}\r\n","\r\n<!--HEADER-->\r\n<header class=\"header\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md col-sm col-xl\">\r\n                <!--NAVIGATION-->\r\n                <div class=\"navbar\">\r\n                    <nav>\r\n                        <ul class=\"nav\" id=\"sub-menu\">\r\n                            <li><span><a [routerLink]=\"'/'\">Главная</a></span></li>\r\n                            <li *ngFor=\"let category of categories\">\r\n                                <span><a [routerLink]=\"['products/', category.line]\"\r\n                                        >{{category.name}}</a></span>\r\n                                <ul class=\"nav\">\r\n                                    <li *ngFor=\"let subCategory of category.children\">\r\n                                        <span><a [routerLink]=\"['products/', subCategory.line]\"\r\n                                                >{{subCategory.name}}</a></span>\r\n                                        <ul class=\"nav\">\r\n                                            <li *ngFor=\"let underSubCategory of subCategory.children\">\r\n                                                <span><a [routerLink]=\"['products/', underSubCategory.line]\"\r\n                                                        >{{underSubCategory.name}}\r\n                                                    </a>\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><span><a [routerLink]=\"'/shop'\">Магазин</a></span></li>\r\n                        </ul>                        \r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"logo-container\">\r\n        <div class=\"logo\">\r\n            <div class=\"logo_text\">\r\n                <a [routerLink]=\"'/'\">\r\n                    <h1>Alleutina Shop</h1>\r\n                    <h2>HAND MADE</h2>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <img src=\"assets/img/bg/bg-main1.jpg\" alt=\"\" class=\"header_img\">\r\n</header>","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router, RouterState } from '@angular/router';\n\n@Component({\n  selector: 'app-accordion-item',\n  templateUrl: './accordion-item.component.html',\n  styleUrls: ['./accordion-item.component.css'],\n  animations: [\n    trigger('smoothCollapse', [\n      state('initial', style({\n        height: '0',\n        overflow: 'hidden',\n        opacity: '0',\n        visibility: 'hidden'\n      })),\n      state('final', style({\n        overflow: 'hidden'\n      })),\n      transition('initial<=>final', animate('250ms'))\n    ]),\n    trigger('rotatedState', [\n      state('default', style({ transform: 'rotate(0)'})),\n      state('rotated', style({ transform: 'rotate(180deg)'})),\n      transition('default <=> rotated', animate('250ms'))\n    ])\n  ]\n})\nexport class AccordionItemComponent implements OnInit {\n\n  @Output() closeDrawerEvent = new EventEmitter<boolean>();\n  @Input() data:\n    {\n      name: string,\n      line: string,\n      children: []\n    };\n  showBody = false;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void { }\n\n  closeDrawer(value: boolean, line: string) {\n    this.closeDrawerEvent.emit(value);\n    this.router.navigate(['products/', line]);\n    if (this.showBody == true) {\n      this.toggle();\n    }\n  }\n\n  toggle() {\n    this.showBody = !this.showBody;\n  }\n}\n","<mat-list-item>\n    <div class=\"headerTitle\" (click)=\"closeDrawer(true, data.line)\">\n        <a>{{ data.name }}</a>\n    </div>\n    <div class=\"arrow\" [@rotatedState]=\"!showBody? 'default' : 'rotated'\">\n        <mat-icon class=\"menu-caret\" (click)=\"toggle()\">arrow_drop_down</mat-icon>\n    </div>\n</mat-list-item>\n<mat-nav-list [@smoothCollapse]=\"!showBody? 'initial' : 'final'\">\n    <a mat-list-item\n       *ngFor=\"let subCategory of data.children\"\n       (click)=\"closeDrawer(true, subCategory.line)\">\n        <div class=\"acc-body\">\n            {{ subCategory.name }}\n        </div>\n    </a>\n</mat-nav-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.css']\n})\nexport class AccordionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-content select='app-accordion-item'></ng-content>    \r\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../../models/category.model';\nimport { CategoryService } from '../../services/category.service';\nimport { TreeService } from '../../services/tree.service';\n\n@Component({\n  selector: 'menu-nav',\n  templateUrl: './menu-nav.component.html',\n  styleUrls: ['./menu-nav.component.css']\n})\nexport class MenuNavComponent implements OnInit{\n\n  showFiller = false;\n  categories: Category[];\n\n  constructor(\n    private categoryService: CategoryService,\n    private treeService: TreeService\n  ) {}\n\n  ngOnInit() { \n    this.categoryService.getCategories().subscribe((data:Category[]) => {\n      this.categories = this.treeService.list_to_tree(data);\n      console.log(this.categories);\n    })\n   }\n}\n","<mat-drawer-container class=\"example-container\" autosize>\r\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"over\">\r\n\r\n        <mat-toolbar>\r\n            <mat-toolbar-row class=\"drawer-toolbar-header\">\r\n                <h2> Alleutina Shop </h2>\r\n                <span class=\"material-icons\" (click)=\"drawer.close()\">\r\n                    clear\r\n                </span>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n        \r\n        <mat-nav-list>\r\n            <a mat-list-item\r\n              (click)=\"drawer.close()\"\r\n              [routerLink]=\"['/']\"\r\n              >Главная\r\n            </a>            \r\n            <app-accordion *ngFor=\"let category of categories\" >\r\n                <app-accordion-item  (closeDrawerEvent)=\"$event? drawer.close(): ''\"\r\n                    [data]=\"{name:category.name, line:category.line, children:category.children}\"\r\n                    >\r\n                </app-accordion-item>\r\n            </app-accordion>\r\n            <a mat-list-item \r\n               (click)=\"drawer.close()\" \r\n               [routerLink]=\"['/shop']\"\r\n               >Магазин\r\n            </a>\r\n        </mat-nav-list>\r\n\r\n    </mat-drawer>\r\n    <!--SOCIAL-->\r\n    <div class=\"page\">\r\n        <div class=\"social\">\r\n            <div class=\"container\">\r\n                <div class=\"row clearfix\">\r\n                    <div class=\"header-social-left\">\r\n                        <button type=\"button\" mat-button (click)=\"drawer.toggle()\" class=\"menu-navbar-mobile\">\r\n                            <span class=\"material-icons\">menu</span>\r\n                        </button>\r\n                        <div class=\"header-phone\">\r\n                            <div class=\"header-phone-cont\">\r\n                                <a class=\"header-phone-item mts\" href=\"tel:+375 29 893 72 41\">+375(29)-893-72-41</a>\r\n                                <button [routerLink]=\"'auth/login'\" mat-flat-button color=\"accent\"\r\n                                    >Login</button>\r\n                                <button [routerLink]=\"'/admin-panel'\" mat-flat-button color=\"accent\"\r\n                                    >Admin-panel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"header-social\">\r\n                        <div class=\"header-social_networks\">\r\n                            <h6>Мы в соц сетях:</h6>\r\n                            <a href=\"https://www.instagram.com/alleutina_shop/\" target=\"_blank\"><i\r\n                                    class=\"fab fa-instagram\"></i></a>\r\n                            <a href=\"viber://chat?number=%2B375291233211\" target=\"_blank\"\r\n                                title=\"Должен быть установлен Viber для ПК\"><i class=\"fab fa-viber\"></i></a>\r\n                            <a href=\"https://t.me/NickName\" target=\"_blank\"><i class=\"fab fa-telegram\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"errorOrNot\">\r\n    <h1>Page Not Found</h1>\r\n    <button [routerLink]=\"'/'\" class=\"button-outline\">продолжить</button>\r\n</div>","export class FeedbackForm {\r\n    constructor(\r\n        public name?: string,\r\n        public telephone?: string,\r\n        public email?: string,\r\n        public imageUrl?: string,\r\n        public productName?: string,\r\n        public productPrice?: string,\r\n        public message?: string,\r\n        public checkAvailability?: boolean,\r\n        public checkPrice?: boolean        \r\n    ) {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ResetUserPassword } from '../models/auth/resetUserPassword.model';\r\nimport { ForgotUserPassword } from '../models/auth/forgotUserPassword.model';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst TOKEN_FORGOTPASSWORD = 'token-forgotpassword';\r\nconst USER_KEY = 'user-profile';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    private urlLogin = environment.apiUrl + \"identity/login\";\r\n    private urlRegister = environment.apiUrl + \"identity/register\";\r\n    private urlForgotPassword = environment.apiUrl + \"identity/forgotpassword\";\r\n    private urlResetPassword = environment.apiUrl + \"identity/resetpassword\";\r\n    private urlconfirmEmail = environment.apiUrl + \"identity/confirmEmail\";\r\n\r\n    login(data): Observable<any> {\r\n\r\n        return this.http.post(this.urlLogin, data);\r\n    }\r\n\r\n    register(data): Observable<any> {\r\n        return this.http.post(this.urlRegister, data);\r\n    }\r\n\r\n    confirmEmail(data): Observable<any> {\r\n        return this.http.post(this.urlconfirmEmail, data);\r\n    }\r\n\r\n    forgotPassword(forgotUserPassword: ForgotUserPassword): Observable<any> {\r\n        return this.http.post(this.urlForgotPassword, forgotUserPassword);\r\n    }\r\n\r\n    resetPassword(resetUserPassword: ResetUserPassword): Observable<any> {\r\n        return this.http.post(this.urlResetPassword, resetUserPassword);\r\n    }\r\n\r\n    public saveToken(token: string) {\r\n        window.localStorage.removeItem(TOKEN_KEY);\r\n        window.localStorage.setItem(TOKEN_KEY, token);\r\n    }\r\n    public saveForgotPasswordToken(token: string) {\r\n        window.localStorage.removeItem(TOKEN_FORGOTPASSWORD);\r\n        window.localStorage.setItem(TOKEN_FORGOTPASSWORD, token);\r\n    }\r\n\r\n    public getToken(): string {\r\n        return localStorage.getItem(TOKEN_KEY);\r\n    }\r\n\r\n    public getForgotPasswordToken(): string {\r\n        return localStorage.getItem(TOKEN_FORGOTPASSWORD);\r\n    }\r\n\r\n    public saveUser(userName: string, email: string, roles: Array<string>) {\r\n        let profile = {\r\n            \"userName\": userName,\r\n            \"email\": email,\r\n            \"roles\" : roles\r\n        };\r\n        window.localStorage.removeItem(USER_KEY);\r\n        window.localStorage.setItem(USER_KEY, JSON.stringify(profile));\r\n    }\r\n\r\n    public getUser() {\r\n        return JSON.parse(localStorage.getItem(USER_KEY));\r\n    }\r\n    \r\n    logout() {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Category } from '../models/category.model';\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n\r\n    private url = environment.apiUrl + \"categories\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCategories() {\r\n        return this.http.get(this.url).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    getCategory(categoryLine: string) {\r\n        return this.http.get(this.url + '/' + categoryLine).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    createCategory(category: Category) {\r\n        return this.http.post(this.url, category).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    updateCategory(category: Category) {\r\n        return this.http.put(this.url, category).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    deleteCategory(id: number) {\r\n        return this.http.delete(this.url + '/' + id).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable  } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { FeedbackForm } from '../models/feedbackForm.model';\r\n\r\n@Injectable()\r\nexport class EmailService {\r\n\r\n    private sendYourselfUrl = environment.apiUrl + 'SendEmails/SendYourselfEmail';\r\n\r\n    constructor(private http: HttpClient) {}\r\n    \r\n    public SendYourselfEmail(feedbackForm: FeedbackForm): Observable<any>{\r\n        return this.http.post(this.sendYourselfUrl, feedbackForm);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,    \r\n    private toastrService: ToastrService\r\n    ) { }\r\n\r\n    canActivate() {\r\n        let user = this.authService.getUser();\r\n       \r\n        if (user.roles.includes('admin')){\r\n          return true;\r\n        }\r\n        this.toastrService.warning(\"Нужны права администратора\");\r\n        return false;\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private toastrService: ToastrService\r\n    ) { }\r\n\r\n  canActivate() {\r\n    const token = this.authService.getToken();\r\n \r\n    if (token && !this.jwtHelper.isTokenExpired(token)){\r\n      return true;\r\n    }\r\n    this.toastrService.warning(\"Нужно войти в систему\");\r\n    this.router.navigate([\"auth/login\"]);\r\n    return false;\r\n  }\r\n\r\n  isAdminActivate() {\r\n    const token = this.authService.getToken();\r\n    let user = this.authService.getUser();\r\n   \r\n    if (token && !this.jwtHelper.isTokenExpired(token) && user.roles.includes('admin')){\r\n      return true;\r\n    }\r\n    this.router.navigate([\"auth/login\"]);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class ManagerGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private toastrService: ToastrService\r\n    ) { }\r\n\r\n    canActivate() {\r\n        let user = this.authService.getUser();\r\n       \r\n        if ((user.roles.includes('manager') || user.roles.includes('admin'))){\r\n          return true;\r\n        }\r\n        this.toastrService.warning(\"Нужны права менеджера или администратора\");\r\n        return false;\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorIntersepterService implements HttpInterceptor {\n\n  constructor(\n    private toastrService: ToastrService\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    return next.handle(request).pipe(\n      retry(0),\n      catchError((err) => {\n        let message = \"\";\n        if(err.status === 401) {\n          message = \"Unauthorized\";\n        }\n        else if (err.status === 403) {\n          message = \"Forbidden\";\n        }\n        else if (err.status === 404) {\n          message = \"Not Found\";\n        }\n        else if (err.status === 400) {\n          message = \"Bad Request\";\n        }\n        else if (err.status === 500) {\n          message = \"Internal Server Error \";\n        }\n        else {\n          message = \"Unexpected error\";\n        }\n        this.toastrService.error(`${message} ${err.status}`);\n        return throwError(err);\n      })\n    )\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenIntersepterService implements HttpInterceptor {\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.authService.getToken()}`\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    private url = environment.apiUrl + \"products\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProducts() {\r\n        return this.http.get(this.url).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n  \r\n    getProduct(productLine: string) {\r\n        return this.http.get(`${this.url}/${productLine}`).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    createProduct(product: Product) {\r\n        return this.http.post(this.url, product).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    updateProduct(product: Product) {\r\n        return this.http.put(this.url, product).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    deleteProduct(id: number) {\r\n        return this.http.delete(this.url + '/' + id).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable  } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserWithRoles } from '../models/user-role/userWithRoles.model';\r\nimport { UserRoles } from '../models/user-role/userRoles.model';\r\n\r\n@Injectable()\r\nexport class RolesService {\r\n\r\n    private url = environment.apiUrl + 'roles';\r\n\r\n    constructor(private http: HttpClient) {}\r\n    \r\n    public GetUserWithRoles(userId: string): Observable<UserWithRoles>{\r\n        return this.http.get(this.url + `/${userId}`);\r\n    }\r\n\r\n    public GetAllRoles(): Observable<any>{\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    public EditUserRoles(userRoles: UserRoles): Observable<any>{\r\n        return this.http.put(this.url, userRoles);\r\n    }\r\n}","export class TreeService {\r\n    \r\n    public list_to_tree(list) {\r\n        let map = {}, node, roots = [], i;\r\n        \r\n        for (i = 0; i < list.length; i += 1) {\r\n          map[list[i].id] = i; // initialize the map\r\n          list[i].children = []; // initialize the children\r\n        }\r\n        for (i = 0; i < list.length; i += 1) {\r\n          node = list[i];\r\n          \r\n          if (node.parent_Id != 0) {\r\n            // if you have dangling branches check that map[node.parentId] exists\r\n            list[map[node.parent_Id]].children.push(node);\r\n          } else {\r\n            roots.push(node);\r\n          }\r\n        }\r\n        return roots;\r\n      }\r\n\r\n      public getProducts(list) {\r\n        let products = [], i;\r\n        this.findProducts(list, products);\r\n\r\n        return products;\r\n      }\r\n      private findProducts(list, products){\r\n        for (let i = 0; i < list.length; i += 1) {\r\n          \r\n          if (list[i].children.length == 0) {\r\n            \r\n            list[i].products.forEach(element => {\r\n              products.push(element);\r\n            });\r\n          }\r\n          else {\r\n            this.findProducts(list[i].children, products);\r\n          }\r\n        }\r\n      }\r\n      \r\n      public last_level_of_tree(list) {\r\n        let roots = [], i;\r\n\r\n        for (i = 0; i < list.length; i += 1) {\r\n          \r\n          if (list[i].children == 0) {\r\n            roots.push(list[i]);\r\n          }\r\n        }        \r\n        return roots;\r\n      }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n\r\n    private url = environment.apiUrl + 'upload';\r\n     \r\n     constructor(private http: HttpClient) {}\r\n \r\n     UploadFile(formData: FormData) : Observable<any> {\r\n         return this.http.post(this.url, formData, { reportProgress: true, observe: 'events'}).pipe(\r\n            catchError(this.handleError));        \r\n     }\r\n    // this.http.delete(this.url + '/' + id)\r\n     DeleteFile(imageName: string) : Observable<any> {\r\n        return this.http.delete(this.url + '/' + imageName).pipe(\r\n           catchError(this.handleError));        \r\n    }\r\n\r\n     private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","export class UserValidateService {\r\n    \r\n    getErrorMessageName(userName) {\r\n        if (userName.hasError('required')) {\r\n          return 'You must enter a value';\r\n        }\r\n      }\r\n    \r\n      getErrorMessageEmail(email) {\r\n        if (email.hasError('required')) {\r\n          return 'You must enter a value';\r\n        }\r\n        return email.hasError('email') ? 'Not a valid email' : '';\r\n      }\r\n      getErrorMessagePassw(password) {\r\n        if (password.hasError('required')) {\r\n          return 'Не оставлять пустым!';\r\n        }\r\n        return password.hasError('minlength') ? 'Пароль должен быть больше 5 символов' : '';\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { User } from '../models/user-role/user.model';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n   private url = environment.apiUrl + 'users';\r\n    \r\n    constructor(private http: HttpClient) {}\r\n\r\n    getUserByEmail(email: string) : Observable<User> {\r\n        return this.http.get(this.url + `/${email}`).pipe(\r\n            catchError(this.handleError));        \r\n    }\r\n    \r\n    createUser(user: User) : Observable<User> {\r\n        return this.http.post(this.url, user).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n    \r\n    changePassword(user) : Observable<any> {\r\n        return this.http.post(this.url + '/changePassword', user).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    getUsers() {\r\n        return this.http.get(this.url).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n   \r\n    updateUser(user: User) {\r\n        return this.http.put(this.url, user).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete(this.url + '/' + id).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ProductService } from './services/product.service';\r\nimport { UsersService } from './services/users.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './services/guards/auth-guard.service';\r\nimport { AdminGuard } from './services/guards/admin-guard.service';\r\nimport { ManagerGuard } from './services/guards/manager-guard.service';\r\nimport { CategoryService } from './services/category.service';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { UploadService } from './services/upload.service';\r\nimport { TreeService} from './services/tree.service';\r\nimport { RolesService} from './services/roles.service';\r\nimport { TokenIntersepterService } from './services/intersepters/token-intersepter.service';\r\nimport { ErrorIntersepterService } from './services/intersepters/error-intersepter.service';\r\nimport { UserValidateService } from './services/userValidate.service';\r\nimport { EmailService } from './services/email.service';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        RouterModule\r\n    ],\r\n    providers: [\r\n        ProductService, \r\n        UsersService,\r\n        AuthService,\r\n        EmailService,\r\n        AuthGuard,\r\n        AdminGuard,\r\n        ManagerGuard,\r\n        CategoryService,\r\n        UploadService,\r\n        RolesService,\r\n        UserValidateService,\r\n        TreeService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: TokenIntersepterService,\r\n            multi: true\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorIntersepterService,\r\n            multi: true\r\n        }        \r\n    ],\r\n    declarations: [NotFoundComponent],\r\n    exports: [ReactiveFormsModule, FormsModule]\r\n})\r\nexport class SharedModule {}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wfm-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"h1-line\"><span>Магазин</span></h1>\r\n<section>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 content\">\r\n                <div class=\"contact\">\r\n                    <div class=\"itemBody\">\r\n                        <div class=\"shop-info\">\r\n                            <div class=\"page-header\">\r\n                                <h2>\"Alleutina Shop\" в Гродно:</h2>\r\n                                <p>Покупайте цветы на ваш выбор, живые либо искусственные. Интересует грунт для\r\n                                    огорода? Химия от вредителей?\r\n                                    А может горшки для цветов? Приходи и выбирай! Лучшие изделия из двересины\r\n                                    украсят ваш сад.\r\n                                    Стоит ли брать шарики, придать подарку праздничное настроение? Конечно стоит и\r\n                                    только у нас!\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"contact-address-cont\">\r\n                                <div class=\"contact-address-item\">\r\n                                    <div class=\"contact-address-text under-footer-address-item\">\r\n                                        <p class=\"under-footer-address-text\">\r\n                                            Город Гродно, улица Рогачевского 25\r\n                                        </p>\r\n                                        <p class=\"under-footer-address-text\">\r\n                                            мтс +375(29)-893-72-41\r\n                                        </p>\r\n                                        <p class=\"under-footer-address-text\">\r\n                                            Вторник-Суббота: с 9:00 до 19:00\r\n                                            <br>Воскресенье: с 9:00 до 16:00\r\n                                            <br> <small>Понедельник выходной</small>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"contact-address-item\">\r\n                                    <div class=\"contact-address-item__map\">\r\n                                        <iframe\r\n                                            src=\"https://yandex.ru/map-widget/v1/?um=constructor%3A1af245c1f85b3aa26633dbb7b1909d90947287baa829aeecbcb7f9392a0459b4&amp;source=constructor\"\r\n                                            width=\"600\" height=\"300\" frameborder=\"0\"></iframe>\r\n                                    </div>\r\n                                    <div class=\"contact-address-item__info\">\r\n                                        гр. Гродно, посёлок Южный, ул. Рогачевского 25.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'test-page',\n  templateUrl: './test-page.component.html',\n  styleUrls: ['./test-page.component.css']\n})\nexport class TestPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mail-container\">\n    <div class=\"mail-card\">\n      <header>\n        <h1>\n          Вас приветствует Alleutina Shop!\n        </h1>\n      </header>\n      <div class=\"mail-main\">\n        <p>Перейдите по ссылке:  <a href=\"\">//localhost:4200/auth/resetpassword?\n          userId=4e993245-140a-404f-b9f6-4b35bfca1e56&code=CfDJ8M7x3AjRAtJIlLb\n          6KfOuvZEzv2BpBPtlq6g%2BNVIKnBPPDfA%2F5Iv12Lc%2BqnL2BciueKhhYDnr\n          ucBPd8Hg%2FEFhdMbeoT3Rcj0N4FhQLphV8GxgmKRNiZvtkohdyCcc%2FNeEEe\n          AaFOfwQ3buzQt60A7BqZSeKBbbcEZ3y20xAHFxxtelhLOiZgVpl6%2FrlWBGMiSbAlnAewn0\n          7VuJY%2BluUsSqibYxSMX6BYrVQ1h%2FCUcqMSKw</a>\n        </p>\n      </div>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:5000/api/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport 'hammerjs';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}