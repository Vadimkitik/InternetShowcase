{"version":3,"sources":["webpack:///src/app/shared/services/email.service.ts","webpack:///src/app/main-page/main-page.component.ts","webpack:///src/app/main-page/main-page.component.html","webpack:///src/app/shared/components/not-found/not-found.component.ts","webpack:///src/app/shared/components/not-found/not-found.component.html","webpack:///src/app/shared/components/menu-nav/menu-nav.component.ts","webpack:///src/app/shared/components/menu-nav/menu-nav.component.html","webpack:///src/app/shared/services/guards/auth-guard.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shared/services/upload.service.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/app/shared/services/userValidate.service.ts","webpack:///src/app/shared/services/intersepters/token-intersepter.service.ts","webpack:///src/app/test-page/test-page.component.ts","webpack:///src/app/test-page/test-page.component.html","webpack:///src/app/shared/components/menu-nav/accordion/accordion-item/accordion-item.component.ts","webpack:///src/app/shared/components/menu-nav/accordion/accordion-item/accordion-item.component.html","webpack:///src/app/shared/components/menu-nav/accordion/accordion.component.ts","webpack:///src/app/shared/components/menu-nav/accordion/accordion.component.html","webpack:///src/app/product-page/product-view/product-view.component.ts","webpack:///src/app/product-page/product-view/product-view.component.html","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/roles.service.ts","webpack:///src/app/product-page/product-list/product-list.component.ts","webpack:///src/app/product-page/product-list/product-list.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/services/intersepters/error-intersepter.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shop/shop.component.ts","webpack:///src/app/shop/shop.component.html","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/product-page/dialog-overviewform/dialog-overviewform.component.ts","webpack:///src/app/product-page/dialog-overviewform/dialog-overviewform.component.html","webpack:///src/app/shared/services/users.service.ts","webpack:///src/app/shared/services/guards/manager-guard.service.ts","webpack:///src/app/shared/services/tree.service.ts","webpack:///src/app/shared/services/guards/admin-guard.service.ts","webpack:///src/app/shared/services/category.service.ts","webpack:///src/app/material/material.module.ts","webpack:///src/app/product-page/products.module.ts","webpack:///src/app/shared/models/feedbackForm.model.ts","webpack:///src/app/shared/services/product.service.ts","webpack:///src/app/spinner/spinner.service.ts","webpack:///src/app/shared/services/guards/loggedIn-guard.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/product-page/products-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["EmailService","http","sendYourselfUrl","apiUrl","feedbackForm","post","MainPageComponent","selector","templateUrl","styleUrls","NotFoundComponent","MenuNavComponent","categoryService","treeService","showFiller","getCategories","subscribe","data","categories","list_to_tree","AuthGuard","jwtHelper","router","authService","toastrService","token","getToken","isTokenExpired","warning","navigate","environment","production","UploadService","url","formData","reportProgress","observe","pipe","handleError","imageName","error","message","SpinnerComponent","spinnerService","cdRef","showSpinner","init","getSpinnerObserver","status","detectChanges","UserValidateService","userName","hasError","email","password","TokenIntersepterService","request","next","clone","setHeaders","Authorization","handle","providedIn","TestPageComponent","AccordionItemComponent","closeDrawerEvent","showBody","value","line","emit","toggle","closeDrawer","height","overflow","opacity","visibility","transform","animations","AccordionComponent","ProductViewComponent","productService","activeRoute","dialog","emailService","loaded","oldPrice","productLine","snapshot","params","dialogRef","open","width","productName","product","name","imageUrl","productPrice","price","productOldPrice","checkAvailability","checkPrice","telephone","afterClosed","result","SendYourselfEmail","res","success","loadProduct","getProduct","errorMsg","TOKEN_KEY","TOKEN_FORGOTPASSWORD","USER_KEY","AuthService","urlLogin","urlRegister","urlForgotPassword","urlResetPassword","urlconfirmEmail","forgotUserPassword","resetUserPassword","window","localStorage","removeItem","setItem","getItem","roles","profile","JSON","stringify","parse","clear","RolesService","userId","get","userRoles","put","ProductListComponent","route","isAuth","loadProducts","categoryLine","getCategory","category","categoryName","productsInspection","loaderAndMessage","products","length","getProducts","children","load","mess","SharedModule","provide","useClass","multi","imports","providers","declarations","exports","ErrorIntersepterService","requestStarted","handler","event","requestEnded","resetSpinner","toString","AppComponent","tokenGetter","AppModule","forRoot","config","whitelistedDomains","blacklistedRoutes","bootstrap","ShopComponent","FooterComponent","HeaderComponent","DialogOverviewformComponent","close","onNoClick","UsersService","user","id","ManagerGuard","getUser","includes","TreeService","list","map","node","roots","i","parent_Id","push","findProducts","forEach","element","AdminGuard","CategoryService","MaterialComponents","MaterialModule","ProductsModule","FeedbackForm","ProductService","SpinnerService","count","spinner$","asObservable","LoggedInGuard","appRoutes","path","component","loadChildren","then","m","AdminPanelModule","AuthModule","redirectTo","AppRoutingModule","preloadingStrategy","productsRoutes","ProductsRoutingModule","forChild","platform","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable  } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { FeedbackForm } from '../models/feedbackForm.model';\r\n\r\n@Injectable()\r\nexport class EmailService {\r\n\r\n    private sendYourselfUrl = environment.apiUrl + 'SendEmails/SendYourselfEmail';\r\n\r\n    constructor(private http: HttpClient) {}\r\n    \r\n    public SendYourselfEmail(feedbackForm: FeedbackForm): Observable<any>{\r\n        return this.http.post(this.sendYourselfUrl, feedbackForm);\r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.css']\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"h1-line\"><span>Каталог товаров</span></h1>\r\n<!--BLOG-->\r\n<div class=\"container section\">\r\n    <!--BLOG POST-->\r\n    <div class=\"row\">\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'buketi']\" ><img src=\"assets/img/mainPage/buketi.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'buketi']\"  class=\"blog__read-more\">Букеты</a>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'cveti']\" ><img src=\"assets/img/mainPage/cveti.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'cveti']\"  class=\"blog__read-more\">Цветы</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'shari']\" ><img src=\"assets/img/mainPage/buketi.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'shari']\"  class=\"blog__read-more\">Шары</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'udobrenie']\" ><img src=\"assets/img/mainPage/udobreniya.jpg\"\r\n                            alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'udobrenie']\" class=\"blog__read-more\">Удобрение</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'gorshki']\" ><img src=\"assets/img/mainPage/gorshki.jpg\" alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'gorshki']\" class=\"blog__read-more\">Горшки</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"blog col-md-4\">\r\n            <div class=\"row\">\r\n                <div class=\"blog__title\">\r\n                    <a [routerLink]=\"['products/', 'izdelia_iz_dereva']\" ><img src=\"assets/img/mainPage/izdeliya.jpg\"\r\n                            alt=\"\"></a>\r\n                    <a [routerLink]=\"['products/', 'izdelia_iz_dereva']\" class=\"blog__read-more \">Изделия из\r\n                        дерева ручной работы</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"errorOrNot\">\r\n    <h1>Page Not Found</h1>\r\n    <button [routerLink]=\"'/'\" class=\"button-outline\">продолжить</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../../models/category.model';\nimport { CategoryService } from '../../services/category.service';\nimport { TreeService } from '../../services/tree.service';\n\n@Component({\n  selector: 'menu-nav',\n  templateUrl: './menu-nav.component.html',\n  styleUrls: ['./menu-nav.component.css']\n})\nexport class MenuNavComponent implements OnInit{\n\n  showFiller = false;\n  categories: Category[];\n\n  constructor(\n    private categoryService: CategoryService,\n    private treeService: TreeService\n  ) {}\n\n  ngOnInit() { \n    this.categoryService.getCategories().subscribe((data:Category[]) => {\n      this.categories = this.treeService.list_to_tree(data);\n    })\n   }\n}\n","<mat-drawer-container class=\"example-container\" autosize>\r\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"over\">\r\n\r\n        <mat-toolbar>\r\n            <mat-toolbar-row class=\"drawer-toolbar-header\">\r\n                <h2> Alleutina Shop </h2>\r\n                <span class=\"material-icons\" (click)=\"drawer.close()\">\r\n                    clear\r\n                </span>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n        \r\n        <mat-nav-list>\r\n            <a mat-list-item\r\n              (click)=\"drawer.close()\"\r\n              [routerLink]=\"['/']\"\r\n              >Главная\r\n            </a>            \r\n            <app-accordion *ngFor=\"let category of categories\" >\r\n                <app-accordion-item  (closeDrawerEvent)=\"$event? drawer.close(): ''\"\r\n                    [data]=\"{name:category.name, line:category.line, children:category.children}\"\r\n                    >\r\n                </app-accordion-item>\r\n            </app-accordion>\r\n            <a mat-list-item \r\n               (click)=\"drawer.close()\" \r\n               [routerLink]=\"['/shop']\"\r\n               >Магазин\r\n            </a>\r\n        </mat-nav-list>\r\n\r\n    </mat-drawer>\r\n    <!--SOCIAL-->\r\n    <div class=\"page\">\r\n        <div class=\"social\">\r\n            <div class=\"container\">\r\n                <div class=\"row clearfix\">\r\n                    <div class=\"header-social-left\">\r\n                        <button type=\"button\" mat-button (click)=\"drawer.toggle()\" class=\"menu-navbar-mobile\">\r\n                            <span class=\"material-icons\">menu</span>\r\n                        </button>\r\n                        <div class=\"header-phone\">\r\n                            <div class=\"header-phone-cont\">\r\n                                <a class=\"header-phone-item mts\" href=\"tel:+375 29 893 72 41\">+375(29)-893-72-41</a>\r\n                            </div>                            \r\n                        </div>\r\n                        <button [routerLink]=\"'auth/login'\"\r\n                            mat-flat-button color=\"accent\" \r\n                            class=\"header-login-button\"\r\n                            >Login\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"header-social\">\r\n                        <div class=\"header-social_networks\">\r\n                            <h6>Мы в соц сетях:</h6>\r\n                            <a href=\"https://www.instagram.com/alleutina_shop/\" target=\"_blank\"><i\r\n                                    class=\"fab fa-instagram\"></i></a>\r\n                            <a href=\"viber://chat?number=%2B375291233211\" target=\"_blank\"\r\n                                title=\"Должен быть установлен Viber для ПК\"><i class=\"fab fa-viber\"></i></a>\r\n                            <a href=\"https://t.me/NickName\" target=\"_blank\"><i class=\"fab fa-telegram\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</mat-drawer-container>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private toastrService: ToastrService\r\n    ) { }\r\n\r\n  canActivate() {\r\n    const token = this.authService.getToken();\r\n \r\n    if (token && !this.jwtHelper.isTokenExpired(token)){\r\n      return true;\r\n    }\r\n    this.toastrService.warning(\"Нужно войти в систему\");\r\n    this.router.navigate([\"auth/login\"]);\r\n    return false;\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"/api/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n\r\n    private url = environment.apiUrl + 'upload';\r\n     \r\n     constructor(private http: HttpClient) {}\r\n \r\n     UploadFile(formData: FormData) : Observable<any> {\r\n         return this.http.post(this.url, formData, { reportProgress: true, observe: 'events'}).pipe(\r\n            catchError(this.handleError));        \r\n     }\r\n    // this.http.delete(this.url + '/' + id)\r\n     DeleteFile(imageName: string) : Observable<any> {\r\n        return this.http.delete(this.url + '/' + imageName).pipe(\r\n           catchError(this.handleError));        \r\n    }\r\n\r\n     private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { SpinnerService } from './spinner.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  showSpinner = false\n  constructor(\n    private spinnerService: SpinnerService,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  init() {\n    this.spinnerService.getSpinnerObserver().subscribe(status => {\n      this.showSpinner = status === 'start';\n      this.cdRef.detectChanges();\n    })\n  }\n\n}\n","<div class=\"page-overlay-wrapper\" *ngIf=\"showSpinner\">\n    <mat-spinner class=\"mat-custom-spinner\"></mat-spinner>\n</div>","import { Injectable } from \"@angular/core\";\n@Injectable()\nexport class UserValidateService {\r\n    \r\n    getErrorMessageName(userName) {\r\n        if (userName.hasError('required')) {\r\n          return 'You must enter a value';\r\n        }\r\n      }\r\n    \r\n      getErrorMessageEmail(email) {\r\n        if (email.hasError('required')) {\r\n          return 'You must enter a value';\r\n        }\r\n        return email.hasError('email') ? 'Not a valid email' : '';\r\n      }\r\n      getErrorMessagePassw(password) {\r\n        if (password.hasError('required')) {\r\n          return 'Не оставлять пустым!';\r\n        }\r\n        return password.hasError('minlength') ? 'Пароль должен быть больше 5 символов' : '';\r\n      }\r\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenIntersepterService implements HttpInterceptor {\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.authService.getToken()}`\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'test-page',\n  templateUrl: './test-page.component.html',\n  styleUrls: ['./test-page.component.css']\n})\nexport class TestPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mail-container\">\n    <div class=\"mail-card\">\n      <header>\n        <h1>\n          Вас приветствует Alleutina Shop!\n        </h1>\n      </header>\n      <div class=\"mail-main\">\n        <p>Перейдите по ссылке:  <a href=\"\">//localhost:4200/auth/resetpassword?\n          userId=4e993245-140a-404f-b9f6-4b35bfca1e56&code=CfDJ8M7x3AjRAtJIlLb\n          6KfOuvZEzv2BpBPtlq6g%2BNVIKnBPPDfA%2F5Iv12Lc%2BqnL2BciueKhhYDnr\n          ucBPd8Hg%2FEFhdMbeoT3Rcj0N4FhQLphV8GxgmKRNiZvtkohdyCcc%2FNeEEe\n          AaFOfwQ3buzQt60A7BqZSeKBbbcEZ3y20xAHFxxtelhLOiZgVpl6%2FrlWBGMiSbAlnAewn0\n          7VuJY%2BluUsSqibYxSMX6BYrVQ1h%2FCUcqMSKw</a>\n        </p>\n      </div>\n    </div>\n  </div>","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router, RouterState } from '@angular/router';\n\n@Component({\n  selector: 'app-accordion-item',\n  templateUrl: './accordion-item.component.html',\n  styleUrls: ['./accordion-item.component.css'],\n  animations: [\n    trigger('smoothCollapse', [\n      state('initial', style({\n        height: '0',\n        overflow: 'hidden',\n        opacity: '0',\n        visibility: 'hidden'\n      })),\n      state('final', style({\n        overflow: 'hidden'\n      })),\n      transition('initial<=>final', animate('250ms'))\n    ]),\n    trigger('rotatedState', [\n      state('default', style({ transform: 'rotate(0)'})),\n      state('rotated', style({ transform: 'rotate(180deg)'})),\n      transition('default <=> rotated', animate('250ms'))\n    ])\n  ]\n})\nexport class AccordionItemComponent implements OnInit {\n\n  @Output() closeDrawerEvent = new EventEmitter<boolean>();\n  @Input() data:\n    {\n      name: string,\n      line: string,\n      children: []\n    };\n  showBody = false;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void { }\n\n  closeDrawer(value: boolean, line: string) {\n    this.closeDrawerEvent.emit(value);\n    this.router.navigate(['products/', line]);\n    if (this.showBody == true) {\n      this.toggle();\n    }\n  }\n\n  toggle() {\n    this.showBody = !this.showBody;\n  }\n}\n","<mat-list-item>\n    <div class=\"headerTitle\" (click)=\"closeDrawer(true, data.line)\">\n        <a>{{ data.name }}</a>\n    </div>\n    <div class=\"arrow\" [@rotatedState]=\"!showBody? 'default' : 'rotated'\">\n        <mat-icon class=\"menu-caret\" (click)=\"toggle()\">arrow_drop_down</mat-icon>\n    </div>\n</mat-list-item>\n<mat-nav-list [@smoothCollapse]=\"!showBody? 'initial' : 'final'\">\n    <a mat-list-item\n       *ngFor=\"let subCategory of data.children\"\n       (click)=\"closeDrawer(true, subCategory.line)\">\n        <div class=\"acc-body\">\n            {{ subCategory.name }}\n        </div>\n    </a>\n</mat-nav-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.css']\n})\nexport class AccordionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-content select='app-accordion-item'></ng-content>    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { FeedbackForm } from 'src/app/shared/models/feedbackForm.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { DialogOverviewformComponent } from '../dialog-overviewform/dialog-overviewform.component';\r\nimport { EmailService } from 'src/app/shared/services/email.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'product-view',\r\n  templateUrl: './product-view.component.html',\r\n  styleUrls: ['./product-view.component.css']\r\n})\r\nexport class ProductViewComponent implements OnInit {\r\n\r\n\r\n  productLine: string;\r\n  product: Product;\r\n  loaded: boolean = false;\r\n  oldPrice: boolean = false;\r\n  public errorMsg;\r\n  feedbackForm: FeedbackForm;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private activeRoute: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private emailService: EmailService,\r\n    private toastrService: ToastrService\r\n  ) {\r\n    this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n  }\r\n\r\n  openDialog(): void {\r\n\r\n    const dialogRef = this.dialog.open(DialogOverviewformComponent, {\r\n      width: '780px',\r\n      data: {\r\n        productName: this.product.name,\r\n        imageUrl: this.product.imageUrl,\r\n        productPrice: this.product.price,\r\n        productOldPrice: this.product.oldPrice,\r\n        checkAvailability: false,\r\n        checkPrice: false,\r\n        name: \"\",\r\n        telephone: \"\",\r\n        email: \"\"\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null) {\r\n        this.feedbackForm = result;\r\n        this.emailService.SendYourselfEmail(this.feedbackForm).subscribe(res => {\r\n          this.toastrService.success(\"Email sent!\");\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadProduct();\r\n  }\r\n\r\n  loadProduct() {\r\n    this.productService.getProduct(this.productLine)\r\n      .subscribe((data: Product) => {\r\n        this.product = data;\r\n        if (this.product.oldPrice != null) this.oldPrice = true;\r\n        this.loaded = true;\r\n      }, error => this.errorMsg = error);\r\n  }\r\n}\r\n","<!--PRODUCT DESCRIPTION -->\r\n<section>\r\n    <div class=\"container\">\r\n        <div class=\"errorOrNot\" *ngIf=\"errorMsg\">\r\n            <h1>{{ errorMsg }}</h1>\r\n            <button [routerLink]=\"'/'\" class=\"button-outline\">продолжить</button>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"loaded\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"product-cont\">\r\n                    <div class=\"product__image\">\r\n                        <img [src]=\"product.imageUrl\" class=\"animateImg\" alt=\"\" tabindex=\"0\">\r\n                    </div>\r\n                    <div class=\"product__info-block\">\r\n                        <h1>{{ product.name }} </h1>                       \r\n                        <div class=\"product__info-price\">\r\n                            <p class=\"product-info-price\">\r\n                                <span class=\"product-info-price__title\">Цена:</span>\r\n                                <span class=\"product-info-price__val\">\r\n                                    <span class=\"product-info-price__val-old\" *ngIf=\"oldPrice\">{{ product.oldPrice}}<small> BYN </small></span>\r\n                                    <span>{{ product.price }}</span> BYN\r\n                                </span>\r\n                            </p>                            \r\n                        </div>\r\n                        <button (click)=\"openDialog()\" class=\"button-outline\">Уточнить наличие</button>\r\n                        <div class=\"product-description\">\r\n                            <div class=\"column\">{{ product.description }} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ResetUserPassword } from '../models/auth/resetUserPassword.model';\r\nimport { ForgotUserPassword } from '../models/auth/forgotUserPassword.model';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst TOKEN_FORGOTPASSWORD = 'token-forgotpassword';\r\nconst USER_KEY = 'user-profile';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    private urlLogin = environment.apiUrl + \"identity/login\";\r\n    private urlRegister = environment.apiUrl + \"identity/register\";\r\n    private urlForgotPassword = environment.apiUrl + \"identity/forgotpassword\";\r\n    private urlResetPassword = environment.apiUrl + \"identity/resetpassword\";\r\n    private urlconfirmEmail = environment.apiUrl + \"identity/confirmEmail\";\r\n\r\n    login(data): Observable<any> {\r\n\r\n        return this.http.post(this.urlLogin, data);\r\n    }\r\n\r\n    register(data): Observable<any> {\r\n        return this.http.post(this.urlRegister, data);\r\n    }\r\n\r\n    confirmEmail(data): Observable<any> {\r\n        return this.http.post(this.urlconfirmEmail, data);\r\n    }\r\n\r\n    forgotPassword(forgotUserPassword: ForgotUserPassword): Observable<any> {\r\n        return this.http.post(this.urlForgotPassword, forgotUserPassword);\r\n    }\r\n\r\n    resetPassword(resetUserPassword: ResetUserPassword): Observable<any> {\r\n        return this.http.post(this.urlResetPassword, resetUserPassword);\r\n    }\r\n\r\n    public saveToken(token: string) {\r\n        window.localStorage.removeItem(TOKEN_KEY);\r\n        window.localStorage.setItem(TOKEN_KEY, token);\r\n    }\r\n    public saveForgotPasswordToken(token: string) {\r\n        window.localStorage.removeItem(TOKEN_FORGOTPASSWORD);\r\n        window.localStorage.setItem(TOKEN_FORGOTPASSWORD, token);\r\n    }\r\n\r\n    public getToken(): string {\r\n        return localStorage.getItem(TOKEN_KEY);\r\n    }\r\n\r\n    public getForgotPasswordToken(): string {\r\n        return localStorage.getItem(TOKEN_FORGOTPASSWORD);\r\n    }\r\n\r\n    public saveUser(userName: string, email: string, roles: Array<string>) {\r\n        let profile = {\r\n            \"userName\": userName,\r\n            \"email\": email,\r\n            \"roles\" : roles\r\n        };\r\n        window.localStorage.removeItem(USER_KEY);\r\n        window.localStorage.setItem(USER_KEY, JSON.stringify(profile));\r\n    }\r\n\r\n    public getUser() {\r\n        return JSON.parse(localStorage.getItem(USER_KEY));\r\n    }\r\n    \r\n    logout() {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable  } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserWithRoles } from '../models/user-role/userWithRoles.model';\r\nimport { UserRoles } from '../models/user-role/userRoles.model';\r\n\r\n@Injectable()\r\nexport class RolesService {\r\n\r\n    private url = environment.apiUrl + 'roles';\r\n\r\n    constructor(private http: HttpClient) {}\r\n    \r\n    public GetUserWithRoles(userId: string): Observable<UserWithRoles>{\r\n        return this.http.get(this.url + `/${userId}`);\r\n    }\r\n\r\n    public GetAllRoles(): Observable<any>{\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    public EditUserRoles(userRoles: UserRoles): Observable<any>{\r\n        return this.http.put(this.url, userRoles);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Product } from '../../shared/models/product.model';\r\nimport { CategoryService } from '../../shared/services/category.service';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { TreeService } from 'src/app/shared/services/tree.service';\r\n\r\n@Component({\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n    products: Product[];\r\n    categoryLine: string;\r\n    categoryName: string;\r\n    loaded: boolean = false;\r\n    isAuth: boolean = false;\r\n    public errorMsg;\r\n    cata: string;\r\n\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private route: ActivatedRoute,\r\n        private treeService: TreeService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loadProducts();\r\n    }\r\n\r\n    loadProducts() {\r\n        this.route.params.subscribe((params: Params) => {\r\n            this.categoryLine = this.route.snapshot.params['categoryLine'];\r\n            this.categoryService.getCategory(this.categoryLine).subscribe((category: Category) => {\r\n                this.categoryName = category.name;\r\n                this.productsInspection(category);\r\n            }, error => {\r\n                this.categoryName = \"Error\";\r\n                this.loaderAndMessage(false, error);\r\n            });\r\n        });\r\n    }\r\n    \r\n    private productsInspection(category: Category) {\r\n        if (category.products.length != 0) {\r\n            this.loaderAndMessage(true, \"\");\r\n            this.products = category.products;\r\n        }\r\n        else {\r\n            this.products = this.treeService.getProducts(category.children);\r\n            if(this.products.length == 0) {\r\n                this.loaderAndMessage(false, \"В этой категории нет товаров.\");\r\n            }\r\n            else {\r\n                this.loaderAndMessage(true, \"\");\r\n            }                    \r\n        }\r\n    }\r\n    \r\n    private loaderAndMessage(load: boolean, mess: string){\r\n        this.loaded = load;\r\n        this.errorMsg = mess;\r\n    }\r\n}","<h1 class=\"h1-line\" *ngIf=\"categoryName\"><span>{{categoryName}}</span></h1>\r\n<div class=\"errorOrNot\" *ngIf=\"errorMsg\">\r\n    <h1>{{ errorMsg }}</h1>\r\n    <button [routerLink]=\"'/'\" class=\"button-outline\">продолжить</button>\r\n</div>\r\n<div class=\"section\" *ngIf=\"loaded\">\r\n    <div class=\"container\">\r\n        <!--ROW-->\r\n        <div class=\"row\">\r\n            <!--col-md-3-->\r\n            <div class=\"col-md-3\" *ngFor=\"let product of products\">\r\n                <div class=\"card\">\r\n                    <div class=\"card__image\">\r\n                        <img [src]=\"product.imageUrl\" alt=\"\">\r\n                        <a [routerLink]=\"['/product', product.productLine]\" class=\"card__hover\">\r\n                            <div>\r\n                                Подробнее\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <a class=\"card__title\">\r\n                        <div>{{ product.name}}</div>\r\n                    </a>\r\n                    <div class=\"card__price\">\r\n                        <span *ngIf=\"product.oldPrice\">{{ product.oldPrice}} BYN</span>\r\n                        {{ product.price}} BYN\r\n                    </div>\r\n                    <div class=\"card__button-discription\">\r\n                        <a [routerLink]=\"['/product', product.productLine]\"\r\n                           class=\"card__button card__button_nal\"\r\n                           >Подробнее\r\n                        </a>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n            <!--//col-md-3-->\r\n        </div>\r\n        <!--ROW-->\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ProductService } from './services/product.service';\r\nimport { UsersService } from './services/users.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './services/guards/auth-guard.service';\r\nimport { AdminGuard } from './services/guards/admin-guard.service';\r\nimport { ManagerGuard } from './services/guards/manager-guard.service';\r\nimport { LoggedInGuard } from './services/guards/loggedIn-guard.service';\r\nimport { CategoryService } from './services/category.service';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { UploadService } from './services/upload.service';\r\nimport { TreeService} from './services/tree.service';\r\nimport { RolesService} from './services/roles.service';\r\nimport { TokenIntersepterService } from './services/intersepters/token-intersepter.service';\r\nimport { ErrorIntersepterService } from './services/intersepters/error-intersepter.service';\r\nimport { UserValidateService } from './services/userValidate.service';\r\nimport { EmailService } from './services/email.service';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        RouterModule\r\n    ],\r\n    providers: [\r\n        ProductService, \r\n        UsersService,\r\n        AuthService,\r\n        EmailService,\r\n        AuthGuard,\r\n        AdminGuard,\r\n        ManagerGuard,\r\n        CategoryService,\r\n        UploadService,\r\n        RolesService,\r\n        UserValidateService,\r\n        LoggedInGuard,\r\n        TreeService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: TokenIntersepterService,\r\n            multi: true\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorIntersepterService,\r\n            multi: true\r\n        }        \r\n    ],\r\n    declarations: [NotFoundComponent],\r\n    exports: [ReactiveFormsModule, FormsModule]\r\n})\r\nexport class SharedModule {}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, tap } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { SpinnerService } from 'src/app/spinner/spinner.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorIntersepterService implements HttpInterceptor {\n\n  constructor(\n    private toastrService: ToastrService,\n    private spinnerService: SpinnerService\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.spinnerService.requestStarted();\n    return this.handler(next, request);\n  }\n\n  handler(next, request) {\n    return next.handle(request)\n           .pipe(\n              retry(0),\n              tap(\n                (event) => {\n                  if(event instanceof HttpResponse) {\n                    this.spinnerService.requestEnded();\n                  }\n                },\n                (error: HttpErrorResponse) => {\n                  this.spinnerService.resetSpinner();\n                  if(typeof(error.error) === 'string') {\n                    this.toastrService.error(error.error.toString());\n                  }\n                  else {\n                    this.toastrService.error(error.message);\n                  }                  \n                }\n              ),\n           );\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent { }","<menu-nav>\r\n    <wfm-header></wfm-header>\r\n    <app-spinner></app-spinner>\r\n    <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"footer\">\r\n        <wfm-footer></wfm-footer>\r\n    </div>\r\n    \r\n</menu-nav>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\n\r\nimport { MaterialModule } from './material/material.module';\r\nimport { AppComponent } from './app.component';\r\nimport  {AppRoutingModule} from './app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { HeaderComponent } from './shared/components/header/header.component';\r\nimport { FooterComponent } from './shared/components/footer/footer.component';\r\nimport { MenuNavComponent } from './shared/components/menu-nav/menu-nav.component';\r\nimport { ProductsModule } from './product-page/products.module';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { ToastrModule } from 'ngx-toastr/';;\r\nimport { TestPageComponent } from './test-page/test-page.component'\r\nimport { AccordionComponent } from './shared/components/menu-nav/accordion/accordion.component';\r\nimport { AccordionItemComponent } from './shared/components/menu-nav/accordion/accordion-item/accordion-item.component';;\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { SpinnerService } from './spinner/spinner.service';\r\n\r\nexport function tokenGetter(){\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule,\r\n        ToastrModule.forRoot(),\r\n        SharedModule,\r\n        ProductsModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        JwtModule.forRoot({\r\n           config: {\r\n               tokenGetter: tokenGetter,\r\n               whitelistedDomains: [\"localhost:5000\"],\r\n               blacklistedRoutes: []\r\n           } \r\n        })\r\n        ],\r\n        providers: [\r\n            SpinnerService\r\n        ],\r\n    declarations:\r\n        [\r\n            AppComponent,\r\n            ShopComponent,\r\n            MenuNavComponent,\r\n            HeaderComponent,\r\n            FooterComponent,\r\n            MainPageComponent,\r\n            TestPageComponent,\r\n            AccordionComponent, \r\n            AccordionItemComponent, \r\n            SpinnerComponent\r\n        ],\r\n    \r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wfm-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"h1-line\"><span>Магазин</span></h1>\r\n<section>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 content\">\r\n                <div class=\"contact\">\r\n                    <div class=\"itemBody\">\r\n                        <div class=\"shop-info\">\r\n                            <div class=\"page-header\">\r\n                                <h2>\"Alleutina Shop\" в Гродно:</h2>\r\n                                <p>Покупайте цветы на ваш выбор, живые либо искусственные. Интересует грунт для\r\n                                    огорода? Химия от вредителей?\r\n                                    А может горшки для цветов? Приходи и выбирай! Лучшие изделия из двересины\r\n                                    украсят ваш сад.\r\n                                    Стоит ли брать шарики, придать подарку праздничное настроение? Конечно стоит и\r\n                                    только у нас!\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"contact-address-cont\">\r\n                                <div class=\"contact-address-item\">\r\n                                    <div class=\"contact-address-text under-footer-address-item\">\r\n                                        <p class=\"under-footer-address-text\">\r\n                                            Город Гродно, улица Рогачевского 25\r\n                                        </p>\r\n                                        <p class=\"under-footer-address-text\">\r\n                                            мтс +375(29)-893-72-41\r\n                                        </p>\r\n                                        <p class=\"under-footer-address-text\">\r\n                                            Вторник-Суббота: с 9:00 до 19:00\r\n                                            <br>Воскресенье: с 9:00 до 16:00\r\n                                            <br> <small>Понедельник выходной</small>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"contact-address-item\">\r\n                                    <div class=\"contact-address-item__map\">\r\n                                        <iframe\r\n                                            src=\"https://yandex.ru/map-widget/v1/?um=constructor%3A1af245c1f85b3aa26633dbb7b1909d90947287baa829aeecbcb7f9392a0459b4&amp;source=constructor\"\r\n                                            width=\"600\" height=\"300\" frameborder=\"0\"></iframe>\r\n                                    </div>\r\n                                    <div class=\"contact-address-item__info\">\r\n                                        гр. Гродно, посёлок Южный, ул. Рогачевского 25.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wfm-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--FOOTER-->\r\n<div class=\"container\">\r\n\r\n    <div class=\"footer-info\">\r\n        В магазине Цветов Alleutina Shop Вас ждет широкий ассортимент цветов,\r\n        живые и искусствунные, грунт, химия для огорода, а также различные композиции для души. Наш эксперт по\r\n        флористике поможет Вам в создании букета, оформления интерьера.\r\n        Ждем вас в нашем магазине в Гродно!\r\n    </div>\r\n\r\n    <div class=\"footer__copyright\">© Магазин Цветов Alleutina Shop в Гродно, 2020</div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from '../../models/category.model';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport { TreeService } from '../../services/tree.service';\r\n\r\n@Component({\r\n  selector: 'wfm-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  \r\n  categories: Category[];\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private treeService: TreeService\r\n  ) { }  \r\n\r\n  ngOnInit() { \r\n   this.categoryService.getCategories().subscribe((data:Category[]) => {\r\n     this.categories = this.treeService.list_to_tree(data);\r\n   })\r\n  }  \r\n}\r\n","\r\n<!--HEADER-->\r\n<header class=\"header\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md col-sm col-xl\">\r\n                <!--NAVIGATION-->\r\n                <div class=\"navbar\">\r\n                    <nav>\r\n                        <ul class=\"nav\" id=\"sub-menu\">\r\n                            <li><span><a [routerLink]=\"'/'\">Главная</a></span></li>\r\n                            <li *ngFor=\"let category of categories\">\r\n                                <span><a [routerLink]=\"['products/', category.line]\"\r\n                                        >{{category.name}}</a></span>\r\n                                <ul class=\"nav\">\r\n                                    <li *ngFor=\"let subCategory of category.children\">\r\n                                        <span><a [routerLink]=\"['products/', subCategory.line]\"\r\n                                                >{{subCategory.name}}</a></span>\r\n                                        <ul class=\"nav\">\r\n                                            <li *ngFor=\"let underSubCategory of subCategory.children\">\r\n                                                <span><a [routerLink]=\"['products/', underSubCategory.line]\"\r\n                                                        >{{underSubCategory.name}}\r\n                                                    </a>\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><span><a [routerLink]=\"'/shop'\">Магазин</a></span></li>\r\n                        </ul>                        \r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"logo-container\">\r\n        <div class=\"logo\">\r\n            <div class=\"logo_text\">\r\n                <a [routerLink]=\"'/'\">\r\n                    <h1>Alleutina Shop</h1>\r\n                    <h2>HAND MADE</h2>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <img src=\"assets/img/bg/bg-main1.jpg\" alt=\"\" class=\"header_img\">\r\n</header>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FeedbackForm } from 'src/app/shared/models/feedbackForm.model';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'dialog-overviewform',\n  templateUrl: './dialog-overviewform.component.html',\n  styleUrls: ['./dialog-overviewform.component.css']\n})\nexport class DialogOverviewformComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewformComponent>,\n    @Inject(MAT_DIALOG_DATA) public feedbackForm: FeedbackForm) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"modal-text-cont\">\n  <div class=\"cover-collection\">\n    <div class=\"cover-img\">\n      <img src=\"{{feedbackForm.imageUrl}}\">\n    </div>\n    <h2 class=\"cover-title\">\n      {{ feedbackForm.productName }}\n    </h2>\n  </div>\n</div>\n<div class=\"info-form\">\n  <h2 mat-dialog-title>Уточнить наличие</h2>\n  <div mat-dialog-content>\n    <mat-form-field>\n      <mat-label>Имя</mat-label>\n      <input matInput [(ngModel)]=\"feedbackForm.name\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Телефон</mat-label>\n      <input matInput required [(ngModel)]=\"feedbackForm.telephone\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input matInput [(ngModel)]=\"feedbackForm.email\">\n    </mat-form-field>\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"feedbackForm.checkAvailability\" #roleCheck>Запросить наличие</mat-checkbox>\n    </section>\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"feedbackForm.checkPrice\" #roleCheck>Запросить цену</mat-checkbox>\n    </section>\n    <mat-form-field [style.fontSize]=\"16\" class=\"\">\n      <mat-label>Поле для примичания, вы можете задать вопрос</mat-label>\n      <textarea matInput\n                [(ngModel)]=\"feedbackForm.message\"\n                cdkTextareaAutosize\n                #autosize=\"cdkTextareaAutosize\"\n                cdkAutosizeMinRows=\"1\"\n                cdkAutosizeMaxRows=\"5\"></textarea>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-stroked-button (click)=\"onNoClick()\" color=\"warn\">Закрыть</button>\n    <button mat-stroked-button [mat-dialog-close]=\"feedbackForm\" color=\"primary\" cdkFocusInitial>Отправить</button>\n  </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { User } from '../models/user-role/user.model';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n   private url = environment.apiUrl + 'users';\r\n    \r\n    constructor(private http: HttpClient) {}\r\n\r\n    getUserByEmail(email: string) : Observable<User> {\r\n        return this.http.get(this.url + `/${email}`).pipe(\r\n            catchError(this.handleError));        \r\n    }\r\n    \r\n    createUser(user: User) : Observable<User> {\r\n        return this.http.post(this.url, user).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n    \r\n    changePassword(user) : Observable<any> {\r\n        return this.http.post(this.url + '/changePassword', user).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    getUsers() {\r\n        return this.http.get(this.url).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n   \r\n    updateUser(user: User) {\r\n        return this.http.put(this.url, user).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete(this.url + '/' + id).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class ManagerGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private toastrService: ToastrService\r\n    ) { }\r\n\r\n    canActivate() {\r\n        let user = this.authService.getUser();\r\n       \r\n        if ((user.roles.includes('manager') || user.roles.includes('admin'))){\r\n          return true;\r\n        }\r\n        this.toastrService.warning(\"Нужны права менеджера или администратора\");\r\n        return false;\r\n    }\r\n    \r\n}","import { Injectable } from \"@angular/core\";\n@Injectable()\nexport class TreeService {\r\n    \r\n    public list_to_tree(list) {\r\n        let map = {}, node, roots = [], i;\r\n        \r\n        for (i = 0; i < list.length; i += 1) {\r\n          map[list[i].id] = i; // initialize the map\r\n          list[i].children = []; // initialize the children\r\n        }\r\n        for (i = 0; i < list.length; i += 1) {\r\n          node = list[i];\r\n          \r\n          if (node.parent_Id != 0) {\r\n            // if you have dangling branches check that map[node.parentId] exists\r\n            list[map[node.parent_Id]].children.push(node);\r\n          } else {\r\n            roots.push(node);\r\n          }\r\n        }\r\n        return roots;\r\n      }\r\n\r\n      public getProducts(list) {\r\n        let products = [], i;\r\n        this.findProducts(list, products);\r\n\r\n        return products;\r\n      }\r\n      private findProducts(list, products){\r\n        for (let i = 0; i < list.length; i += 1) {\r\n          \r\n          if (list[i].children.length == 0) {\r\n            \r\n            list[i].products.forEach(element => {\r\n              products.push(element);\r\n            });\r\n          }\r\n          else {\r\n            this.findProducts(list[i].children, products);\r\n          }\r\n        }\r\n      }\r\n      \r\n      public last_level_of_tree(list) {\r\n        let roots = [], i;\r\n\r\n        for (i = 0; i < list.length; i += 1) {\r\n          \r\n          if (list[i].children == 0) {\r\n            roots.push(list[i]);\r\n          }\r\n        }        \r\n        return roots;\r\n      }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,    \r\n    private toastrService: ToastrService\r\n    ) { }\r\n\r\n    canActivate() {\r\n        let user = this.authService.getUser();\r\n       \r\n        if (user.roles.includes('admin')){\r\n          return true;\r\n        }\r\n        this.toastrService.warning(\"Нужны права администратора\");\r\n        return false;\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Category } from '../models/category.model';\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n\r\n    private url = environment.apiUrl + \"categories\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCategories() {\r\n        return this.http.get(this.url).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    getCategory(categoryLine: string) {\r\n        return this.http.get(this.url + '/' + categoryLine).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    createCategory(category: Category) {\r\n        return this.http.post(this.url, category).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    updateCategory(category: Category) {\r\n        return this.http.put(this.url, category).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    deleteCategory(id: number) {\r\n        return this.http.delete(this.url + '/' + id).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport {TextFieldModule} from '@angular/cdk/text-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nconst MaterialComponents =[\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatSelectModule,\r\n  MatRadioModule,\r\n  TextFieldModule,\r\n  MatCheckboxModule,\r\n  MatMenuModule,\r\n  MatDialogModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatToolbarModule,\r\n  MatProgressSpinnerModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [MaterialComponents],\r\n  exports: [MaterialComponents]\r\n})\r\nexport class MaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\n\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DialogOverviewformComponent } from './dialog-overviewform/dialog-overviewform.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProductViewComponent,\r\n        ProductListComponent,\r\n        DialogOverviewformComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ProductsRoutingModule,\r\n        MaterialModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class ProductsModule {}","export class FeedbackForm {\r\n    constructor(\r\n        public name?: string,\r\n        public telephone?: string,\r\n        public email?: string,\r\n        public imageUrl?: string,\r\n        public productName?: string,\r\n        public productPrice?: string,\r\n        public productOldPrice?: string,\r\n        public message?: string,\r\n        public checkAvailability?: boolean,\r\n        public checkPrice?: boolean        \r\n    ) {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    private url = environment.apiUrl + \"products\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProducts() {\r\n        return this.http.get(this.url).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n  \r\n    getProduct(productLine: string) {\r\n        return this.http.get(`${this.url}/${productLine}`).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    createProduct(product: Product) {\r\n        return this.http.post(this.url, product).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    updateProduct(product: Product) {\r\n        return this.http.put(this.url, product).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    deleteProduct(id: number) {\r\n        return this.http.delete(this.url + '/' + id).pipe(\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error.message || \"Server Error\");\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n\n  private count = 0;\n  private spinner$ = new BehaviorSubject<string>('');\n\n  constructor() { }\n\n  getSpinnerObserver(): Observable<string> {\n    return this.spinner$.asObservable();\n  }\n\n  requestStarted() {\n    if (++this.count === 1) {\n      this.spinner$.next('start');\n    }\n  }\n\n  requestEnded() {\n    if (this.count === 0 || --this.count === 0) {\n      this.spinner$.next('stop');\n    }\n  }\n\n  resetSpinner() {\n    this.count = 0;\n    this.spinner$.next('stop');\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggedInGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private jwtHelper: JwtHelperService,\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private toastrService: ToastrService\r\n    ) { }\r\n\r\n    canActivate() {\r\n        const token = this.authService.getToken();\r\n\r\n        if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n            this.toastrService.warning(\"Нужно выйти из системы\");\r\n            this.router.navigate([\"admin-panel\"]);\r\n            return false;\r\n        }        \r\n        return true;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\n\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { NotFoundComponent } from './shared/components/not-found/not-found.component';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { TestPageComponent } from './test-page/test-page.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: MainPageComponent },\r\n    { path: 'testpage', component: TestPageComponent },\r\n    { \r\n        path: 'admin-panel',\r\n        loadChildren: () => import('./adminPanel/adminPanel.module').then(m => m.AdminPanelModule)\r\n    },\r\n    { \r\n         path: 'auth',\r\n         loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\r\n    },\r\n    { path: 'shop', component: ShopComponent },\r\n    { path: 'not-found', component: NotFoundComponent },\r\n    { path: '**', redirectTo: '/not-found' },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes, {\r\n        preloadingStrategy: PreloadAllModules\r\n    })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductViewComponent } from './product-view/product-view.component';\r\n\r\nconst productsRoutes: Routes = [\r\n    { path: 'products/:categoryLine',  component: ProductListComponent },\r\n    { path: 'product/:productLine', component: ProductViewComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(productsRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule {}\r\n","\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}