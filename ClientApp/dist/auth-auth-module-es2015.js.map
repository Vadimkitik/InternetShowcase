{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/registration/registration.component.ts","./src/app/auth/registration/registration.component.html","./src/app/shared/models/message.model.ts","./src/app/shared/models/user.model.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegistrationComponent } from \"./registration/registration.component\";\r\nimport { AuthComponent } from \"./auth.component\";\r\n\r\nconst authRoutes: Routes = [    \r\n    { path: '', component: AuthComponent, children: [\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'registration', component: RegistrationComponent }\r\n        ] }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(authRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'wfm-auth',\r\n    templateUrl: './auth.component.html'\r\n})\r\nexport class AuthComponent {}","<div class=\"container\">\r\n    <div class=\"auth-container\">\r\n      <div class=\"card\">\r\n        <header class=\"auth-header\">\r\n          <h1 class=\"auth-title\">\r\n            Alleutina Shop\r\n          </h1>\r\n        </header>\r\n        <div class=\"auth-content\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\n\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        RegistrationComponent,\r\n        AuthComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AuthRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AuthModule {}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute, Params} from '@angular/router';\r\n\r\nimport { Message } from 'src/app/shared/models/message.model';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { TokenStorageService } from 'src/app/shared/services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  message: Message;\r\n  name: string;\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private tokenStorage: TokenStorageService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.message = new Message('','');\r\n\r\n    this.route.queryParams\r\n      .subscribe((params: Params) => {\r\n        if(params['nowCanLoggin']) {\r\n          this.showMessage({\r\n            text:'Теперь вы можете зайти в систему',\r\n            type:'success'\r\n          });\r\n        }\r\n      });\r\n\r\n    this.form = new FormGroup({\r\n      'email': new FormControl(null, [Validators.required, Validators.email]),\r\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6)])\r\n    })\r\n  }\r\n\r\n  showMessage(message: Message) {\r\n    this.message = message;\r\n    window.setTimeout(() => {\r\n      this.message.text = '';\r\n    }, 4000);\r\n  }\r\n  \r\n  onSubmit(){\r\n    this.authService.login1(this.form.value)\r\n      .subscribe(response => {         \r\n        const token = (<any>response).token;\r\n\r\n        this.tokenStorage.saveToken(token);\r\n        this.tokenStorage.saveUser(response);\r\n        \r\n        this.authService.login()\r\n        this.name=this.tokenStorage.getUser().name;      \r\n        this.message.text = '';\r\n        console.log('Loggin successful');  \r\n\r\n       this.router.navigate(['/admin-panel']);                \r\n      }, error => {\r\n        this.showMessage({\r\n          text:'Введен не правильный логин или пароль',\r\n          type:'danger'\r\n        });\r\n      });   \r\n  }\r\n}\r\n","<p class=\"text-xs-center\">Войдите для работы</p>\r\n<div\r\n class=\"alert alert-{{message.type}}\"\r\n *ngIf=\"message.text\"> {{ message.text }}</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div\r\n    class=\"form-group\"\r\n    [ngClass]=\"{'has-error': form.get('email').invalid && form.get('email').touched}\"\r\n  >\r\n    <label for=\"email\">Email</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control underlined\"\r\n      id=\"email\"\r\n      formControlName=\"email\"\r\n      placeholder=\"Введите ваш email\"\r\n    >\r\n    <span \r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('email').invalid && form.get('email').touched\"\r\n      >\r\n      <span *ngIf=\"form.get('email')['errors']['required']\">Email не должен быть пустым.</span>\r\n      <span *ngIf=\"form.get('email')['errors']['email']\">Введите корректный email.</span>\r\n    </span>\r\n  </div>\r\n  \r\n  <div \r\n    class=\"form-group\"\r\n    [ngClass]=\"{'has-error': form.get('password').invalid && form.get('password').touched}\"\r\n  >\r\n    <label for=\"password\">Пароль</label>\r\n    <input\r\n      type=\"password\"\r\n      class=\"form-control underlined\"\r\n      id=\"password\"\r\n      formControlName=\"password\"\r\n      placeholder=\"Пароль\"\r\n    >\r\n    <span \r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\r\n     >\r\n     <span *ngIf=\"form.get('password')['errors']['required']\">Пароль не должен быть пустым.</span>\r\n      <span *ngIf=\"form.get('password')['errors']['minlength']\">\r\n        Пароль должен быть не меньше {{ form.get('password')['errors']['minlength']['requiredLength'] }} символов.\r\n      </span>\r\n    </span>\r\n  </div>\r\n  \r\n  <div class=\"form-group\">\r\n    <button \r\n      type=\"submit\" \r\n      class=\"btn btn-block btn-primary\"\r\n      [disabled]=\"form.invalid\"\r\n      >Войти\r\n    </button>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <p class=\"text-muted text-xs-center\">\r\n      Нет аккаунта? <a [routerLink]=\"'/auth/registration'\">Зарегистрироваться!</a>\r\n    </p>\r\n  </div>\r\n</form>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n    constructor(\r\n        private router: Router,\r\n        private usersService: UsersService\r\n  ) {}\r\n  \r\n\r\n  ngOnInit() {   \r\n    this.form =new FormGroup({\r\n      'email': new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails.bind(this)),\r\n      'passwords': new FormGroup({\r\n        'password': new FormControl(null, [Validators.required, Validators.minLength(6)]),\r\n        'confpassword': new FormControl(null, [Validators.required])\r\n       }, this.passwordsAreEqual()),\r\n      'name': new FormControl(null, Validators.required),\r\n      'telephone': new FormControl(null, [Validators.required, Validators.minLength(9), this.phoneValidator]),\r\n      'address': new FormControl(null, Validators.required),\r\n      'agree': new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    const { email, password, name, telephone, address, role} = this.form.value;\r\n    const user = new User\r\n    (\r\n      email, \r\n      this.form.value['passwords']['password'], \r\n      name, \r\n      \"375\" + this.form.value['telephone'], \r\n      address, \r\n      \"User\"\r\n    );\r\n\r\n      this.usersService.createUser(user)\r\n      .subscribe((user: User) => {\r\n        this.router.navigate(['/auth/login'], {\r\n          queryParams: {\r\n            nowCanLoggin: true\r\n          }\r\n        });\r\n   });\r\n  }\r\n\r\n  forbiddenEmails(control: FormControl) : Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.usersService.getUserByEmail(control.value)\r\n        .subscribe((user: User) => {\r\n          if(user) {\r\n            resolve({forbiddenEmail: true})\r\n          } else {\r\n            resolve(null)\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n  private passwordsAreEqual(): ValidatorFn {\r\n    return (group: FormGroup): { [key: string]: any } => {\r\n      if (!(group.dirty || group.touched) || group.get('password').value === group.get('confpassword').value) {\r\n        return null;\r\n      }\r\n      return {\r\n        custom: 'Passwords are not equal.'\r\n      };\r\n    };\r\n  }\r\n  private phoneValidator(): ValidatorFn {\r\n    const pattern: RegExp = /^[\\+]?[(]?(0-9){3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!(control.dirty || control.touched)) {\r\n        return null;\r\n      } else {\r\n      return pattern.test(control.value) ? null : {costom: 'Invalid phone number'}\r\n      }\r\n    };\r\n  }\r\n}\r\n","<p class=\"text-xs-center\">Регистрация для получения доступа</p>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div \r\n   class=\"form-group\"\r\n   [ngClass]=\"{'has-error': form.get('email').invalid && form.get('email').touched}\"\r\n   >\r\n    <label for=\"email\">Email</label>\r\n    <input \r\n      type=\"text\" \r\n      class=\"form-control underlined\" \r\n      id=\"email\" \r\n      formControlName='email'\r\n      placeholder=\"Введите email\"\r\n    >\r\n    <span \r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('email').invalid && form.get('email').touched\"\r\n      >\r\n      <span *ngIf=\"form.get('email')['errors']['required']\">Email не должен быть пустым.</span>\r\n      <span *ngIf=\"form.get('email')['errors']['email']\">Введите корректный email.</span>\r\n      <span *ngIf=\"form.get('email')['errors']['forbiddenEmail']\">Email уже занят.</span>\r\n    </span>\r\n  </div>\r\n \r\n  <div formGroupName=\"passwords\">\r\n  <div \r\n   class=\"form-group\"\r\n   [ngClass]=\"{'has-error': form.get('passwords').get('password').invalid && form.get('passwords').get('password').touched }\"\r\n   >\r\n    <label for=\"password\">Пароль</label>\r\n    <input \r\n      type=\"password\" \r\n      class=\"form-control underlined\" \r\n      id=\"password\"\r\n      formControlName=\"password\" \r\n      placeholder=\"Введите пароль\"\r\n      >\r\n      <span \r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('passwords').get('password').invalid && form.get('passwords').get('password').touched\"\r\n      >\r\n      <span *ngIf=\"form.get('passwords').get('password')['errors']['required']\">Пароль не должен быть пустым.</span>\r\n      <span \r\n        *ngIf=\"form.get('passwords').get('password')['errors']['minlength']\"\r\n      >Пароль должен быть не меньше {{ form.get('passwords').get('password')['errors']['minlength']['requiredLength'] }} символов.\r\n    </span>\r\n    </span>\r\n  </div>\r\n  <div \r\n   class=\"form-group\"\r\n   [ngClass]=\"{'has-error': form.get('passwords').invalid && form.get('passwords').get('confpassword').touched }\"\r\n   >\r\n    <label for=\"confpassword\">Повторите пароль</label>\r\n    <input \r\n      type=\"password\" \r\n      class=\"form-control underlined\" \r\n      id=\"confpassword\"\r\n      formControlName=\"confpassword\" \r\n      placeholder=\"Повторите пароль\"\r\n      >\r\n      <span \r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('passwords').invalid && form.get('passwords').get('confpassword').touched\"\r\n      >Пароли должны совпадать.\r\n    </span>\r\n  </div>\r\n</div>\r\n\r\n  <div \r\n    class=\"form-group\"\r\n    [ngClass]=\"{'has-error': form.get('name').invalid && form.get('name').touched}\"\r\n    >\r\n    <label for=\"name\">Имя</label>\r\n    <input \r\n      type=\"text\" \r\n      class=\"form-control underlined\" \r\n      id=\"name\"\r\n      formControlName=\"name\" \r\n      placeholder=\"Введите имя\"\r\n      >\r\n    <span\r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('name').invalid && form.get('name').touched\"\r\n      >\r\n      Введите имя.\r\n    </span>\r\n  </div>\r\n  <div\r\n   class=\"form-group\"\r\n   [ngClass]=\"{'has-error': form.get('telephone').invalid && form.get('telephone').touched}\"\r\n   >\r\n    <label for=\"telephone\">Телефон</label>\r\n    <input \r\n      type=\"text\"\r\n      pattern=\"[0-9]{9}\"\r\n      class=\"form-control underlined\" \r\n      id=\"telephone\"\r\n      formControlName=\"telephone\"\r\n      placeholder=\"Код и номер\"\r\n      maxlength=\"9\"\r\n      >\r\n      <span\r\n       class=\"form-help-text\"\r\n       *ngIf=\"form.get('telephone').invalid && form.get('telephone').touched\"\r\n       >\r\n        <span        \r\n          *ngIf=\"(form.get('telephone')['errors']['minlength'] \r\n          || form.get('telephone')['errors']['pattern'] \r\n          || form.get('telephone').invalid)  \r\n          && form.get('telephone').touched\"\r\n          >Введите номер телефона.\r\n        </span>\r\n      </span>\r\n  </div>\r\n  <div\r\n   class=\"form-group\"\r\n   [ngClass]=\"{'has-error': form.get('address').invalid && form.get('address').touched}\"\r\n   >\r\n    <label for=\"address\">Адрес</label>\r\n    <input\r\n      type=\"text\" \r\n      class=\"form-control underlined\" \r\n      id=\"address\"\r\n      formControlName=\"address\"\r\n      placeholder=\"г.Гродно, ул. Совецкая 15а, кв. 5\"\r\n      >\r\n      <span\r\n      class=\"form-help-text\"\r\n      *ngIf=\"form.get('address').invalid && form.get('address').touched\"\r\n      >\r\n      Введите адрес.\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"agree\">\r\n      <input\r\n       class=\"checkbox\" \r\n       id=\"agree\" \r\n       type=\"checkbox\"\r\n       formControlName=\"agree\"\r\n       >\r\n      <span>Согласен с правилами</span>\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <button\r\n     type=\"submit\" \r\n     class=\"btn btn-block btn-primary\"\r\n     [disabled]=\"form.invalid\"\r\n     >Зарегистрироваться</button>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <p class=\"text-muted text-xs-center\">\r\n      Уже есть аккаунт?\r\n      <a [routerLink]=\"'/auth/login'\">\r\n        Войти!\r\n      </a>\r\n    </p>\r\n  </div>\r\n</form>","export class Message {\r\n    constructor(\r\n        public type: string,\r\n        public text: string\r\n    ) {}\r\n}","export class User {\r\n    constructor(\r\n        public email?: string,\r\n        public password?: string,\r\n        public name?: string,\r\n        public telephone?: string,\r\n        public address?: string,\r\n        public role?: string,\r\n        public id?: number) { }\r\n}"],"sourceRoot":"webpack:///"}