{"version":3,"sources":["webpack:///src/app/adminPanel/adminPanel-routing.module.ts","webpack:///src/app/adminPanel/adminPanel.component.ts","webpack:///src/app/adminPanel/adminPanel.component.html","webpack:///src/app/adminPanel/adminPanel.module.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.html","webpack:///src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.html","webpack:///src/app/adminPanel/categories/categories-form/categories-form.component.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-form.component.html","webpack:///src/app/adminPanel/categories/categories.component.ts","webpack:///src/app/adminPanel/categories/categories.component.html","webpack:///src/app/adminPanel/products/panel.component.ts","webpack:///src/app/adminPanel/products/panel.component.html","webpack:///src/app/adminPanel/products/product-form/product-create/product-create.component.ts","webpack:///src/app/adminPanel/products/product-form/product-create/product-create.component.html","webpack:///src/app/adminPanel/products/product-form/product-edit/product-edit.component.ts","webpack:///src/app/adminPanel/products/product-form/product-edit/product-edit.component.html","webpack:///src/app/adminPanel/products/product-form/product-form.component.ts","webpack:///src/app/adminPanel/products/product-form/product-form.component.html","webpack:///src/app/adminPanel/products/product-form/upload/upload.component.ts","webpack:///src/app/adminPanel/products/product-form/upload/upload.component.html","webpack:///src/app/adminPanel/test-json/test-json.component.ts","webpack:///src/app/adminPanel/users/users-form/users-create/users-create.component.ts","webpack:///src/app/adminPanel/users/users-form/users-create/users-create.component.html","webpack:///src/app/adminPanel/users/users-form/users-edit/users-edit.component.ts","webpack:///src/app/adminPanel/users/users-form/users-edit/users-edit.component.html","webpack:///src/app/adminPanel/users/users-form/users-form.component.ts","webpack:///src/app/adminPanel/users/users-form/users-form.component.html","webpack:///src/app/adminPanel/users/users.component.ts","webpack:///src/app/adminPanel/users/users.component.html","webpack:///src/app/shared/models/category.model.ts","webpack:///src/app/shared/models/product.model.ts","webpack:///src/app/shared/models/user.model.ts"],"names":["adminRoutes","path","component","children","AdminPanelRoutingModule","forChild","imports","exports","AdminPanelComponent","selector","templateUrl","styleUrls","AdminPanelModule","declarations","CategoriesCreateComponent","categoryService","router","category","console","log","createCategory","subscribe","navigateByUrl","error","errorMsg","save","CategoriesEditComponent","activeRoute","loaded","categoryLine","snapshot","params","getCategory","data","updateCategory","CategoriesFormComponent","hide","name","required","line","categories","getCategories","push","id","parent_Id","products","hasError","CategoriesComponent","columnsToDisplay","load","dataSource","paginator","sort","deleteCategory","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","PanelComponent","productService","uploadService","getProducts","imageUrl","imageName","split","pop","DeleteFile","deleteProduct","height","minHeight","animations","ProductCreateComponent","product","createProduct","ProductEditComponent","productLine","getProduct","updateProduct","ProductFormComponent","catService","treeService","uploadFinished","response","dbPath","list_to_tree","last_level_of_tree","UploadComponent","formData","FormData","onUploadFinished","uploadFile","files","length","fileToUpload","append","UploadFile","type","UploadProgress","progress","Math","round","total","Response","message","emit","body","TestJsonComponent","countryList","UsersCreateComponent","usersService","user","createUser","UsersEditComponent","userService","email","getUserByEmail","updateUser","UsersFormComponent","password","minLength","role","UsersComponent","getUsers","deleteUser","Category","Product","description","price","oldPrice","isFavourite","available","categoryId","User"],"mappings":"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","file":"adminPanel-adminPanel-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { PanelComponent } from \"./products/panel.component\";\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { UsersComponent } from './users/users.component';\r\n\r\nconst adminRoutes: Routes = [\r\n    \r\n    { path: '', component: AdminPanelComponent, children: [\r\n        { path: 'product', component: PanelComponent },\r\n        { path: 'product/create', component: ProductCreateComponent },\r\n        { path: 'product/edit/:productLine', component: ProductEditComponent },\r\n        { path: 'users', component: UsersComponent },\r\n        { path: 'users/create', component: UsersCreateComponent },\r\n        { path: 'users/edit/:email', component: UsersEditComponent },\r\n        { path: 'categories', component: CategoriesComponent },\r\n        { path: 'categories/create', component: CategoriesCreateComponent },\r\n        { path: 'categories/edit/:categoryLine', component: CategoriesEditComponent }\r\n    ] },\r\n    \r\n    { path: 'test', component: TestJsonComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(adminRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './adminPanel.component.html',\r\n    styleUrls: ['./adminPanel.component.scss']\r\n})\r\nexport class AdminPanelComponent { }","<div class=\"admin-container\">\r\n  <button [routerLink]=\"['/admin-panel/product']\" class=\"createButton\" mat-raised-button>Товары</button>\r\n  <button [routerLink]=\"['/admin-panel/categories']\" class=\"createButton\" mat-raised-button >Категории</button>\r\n  <button [routerLink]=\"['/admin-panel/users']\" class=\"createButton\" mat-raised-button>Пользователи</button>\r\n</div>\r\n<router-outlet></router-outlet>","\r\n\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AdminPanelRoutingModule } from './adminPanel-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PanelComponent } from './products/panel.component';\r\nimport { UploadComponent } from './products/product-form/upload/upload.component';\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { ProductFormComponent } from './products/product-form/product-form.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { UsersFormComponent } from './users/users-form/users-form.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { CategoriesFormComponent } from './categories/categories-form/categories-form.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminPanelComponent,\r\n        PanelComponent,\r\n        ProductFormComponent,\r\n        ProductCreateComponent,\r\n        ProductEditComponent,\r\n        UploadComponent,\r\n        TestJsonComponent,\r\n        UsersComponent,\r\n        CategoriesComponent,\r\n        UsersFormComponent,\r\n        UsersCreateComponent,\r\n        UsersEditComponent,\r\n        CategoriesFormComponent,\r\n        CategoriesCreateComponent,\r\n        CategoriesEditComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AdminPanelRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AdminPanelModule {\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-create',\r\n  templateUrl: './categories-create.component.html',\r\n  styleUrls: ['./categories-create.component.css']\r\n})\r\nexport class CategoriesCreateComponent {\r\n\r\n    public errorMsg;\r\n    @Input() category: Category = new Category;    // добавляемый объект\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router) { }\r\n\r\n    save() {\r\n        console.log(this.category);\r\n        this.categoryService.createCategory(this.category).subscribe(() => {\r\n             this.router.navigateByUrl(\"/admin-panel/categories\")\r\n            }, error => this.errorMsg = error);\r\n     }\r\n\r\n}\r\n","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление новой категори</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/categories'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-edit',\r\n  templateUrl: './categories-edit.component.html',\r\n  styleUrls: ['./categories-edit.component.css']\r\n})\r\nexport class CategoriesEditComponent implements OnInit {\r\n\r\n  categoryLine: string;\r\n    @Input() category: Category;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    errorMsg: string;\r\n    message: string;\r\n\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.categoryLine = activeRoute.snapshot.params[\"categoryLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.categoryLine)\r\n            this.categoryService.getCategory(this.categoryLine)\r\n                .subscribe((data: Category) => {\r\n                    this.category = data;\r\n                    console.log(this.category);\r\n                    if (this.category != null) this.loaded = true;\r\n                }, error => this.errorMsg = error);\r\n    }\r\n\r\n    save() {\r\n       console.log(this.category);\r\n        this.categoryService.updateCategory(this.category).subscribe(() => { \r\n            this.router.navigateByUrl(\"/admin-panel/categories\")\r\n        }, error => this.errorMsg = error);\r\n    }\r\n}\r\n","<h1 class=\"h1-line\"><span>Изменение категории</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n<div *ngIf=\"loaded\">\r\n    \r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/categories'\" mat-raised-button color=\"warn\">Назад</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-form',\r\n  templateUrl: './categories-form.component.html',\r\n  styleUrls: ['./categories-form.component.css']\r\n})\r\nexport class CategoriesFormComponent implements OnInit {\r\n\r\n  @Input() category: Category;\r\n  @Input() categories: Category[];\r\n  public errorMsg;\r\n  loaded: boolean = false;\r\n  hide = true;\r\n  name = new FormControl('', [Validators.required]);\r\n  line = new FormControl('', [Validators.required]);\r\n\r\n\r\n  constructor(\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.categories)\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.categories = data;\r\n      this.categories.push({\r\n        children: null,\r\n        id: 0,\r\n        line: \"\",\r\n        name: \"Родительская категория\",\r\n        parent_Id: null,\r\n        products: null\r\n      })\r\n    });\r\n    console.log(this.categories)\r\n  }\r\n  getErrorMessage() {\r\n    if (this.name.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n}\r\n","<div class=\"product-form\" >\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path</mat-label>\r\n        <input \r\n        matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\"\r\n        type=\"text\" [(ngModel)]=\"category.line\" \r\n        [formControl]=\"line\"\r\n        />\r\n        <mat-error *ngIf=\"line.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Горшки, шары...\" \r\n        type=\"text\" [(ngModel)]=\"category.name\" \r\n        [formControl]=\"name\"\r\n        />\r\n        <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Parent_id</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"category.parent_Id\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.css']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<Category>;\r\n  columnsToDisplay = [\r\n    'id', \r\n    'line', \r\n    'name',\r\n    'parent_Id', \r\n    'button'\r\n  ];\r\n  expandedElement: Category | null;\r\n  errorMsg: string;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => this.errorMsg = error);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.categoryService.deleteCategory(id).subscribe(data => { \r\n      if(data) {\r\n        console.log(`Category with ID \"${id}\" is Deleted!`);\r\n      }\r\n      else {\r\n        this.errorMsg =`Category with ID \"${id}\" is NOT Deleted!`;\r\n      }      \r\n      console.log(data)\r\n      this.load();\r\n    }, error => this.errorMsg = error);    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  } \r\n}\r\n","<button [routerLink]=\"['/admin-panel/categories', 'create']\" class=\"createButton\" mat-raised-button>Создать Категорию</button>\r\n\r\n<h1 *ngIf=\"errorMsg\" style=\"text-align: center; color: red;\">{{errorMsg}}</h1>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\r\n  </mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let category\">\r\n            <button \r\n            [routerLink]=\"['/admin-panel/categories/edit', category.line]\" \r\n            mat-raised-button \r\n            color=\"accent\">Изменить</button>\r\n            <button (click)=\"delete(category.id)\" mat-raised-button color=\"warn\" >Удалить</button>\r\n        </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\n\r\n@Component({\r\n  selector: 'panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class PanelComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<Product>;\r\n  columnsToDisplay = [ \r\n    'name', \r\n    'productLine', \r\n    'price', \r\n    'oldPrice', \r\n    'isFavourite',\r\n    'available',\r\n    'category',\r\n    'button'\r\n  ];\r\n  expandedElement: Product | null;\r\n  errorMsg: string;  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uploadService: UploadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.productService.getProducts().subscribe((data: Product[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => this.errorMsg = error);\r\n  }\r\n\r\n  delete(id: number, imageUrl: string) {\r\n    var imageName = imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            console.log(`File ${imageName} is Deleted!`);\r\n        }, error => this.errorMsg = error );\r\n    this.productService.deleteProduct(id).subscribe(data => { \r\n      console.log(`Product with id ${id} is Deleted!`);\r\n      this.load();\r\n    }, error => this.errorMsg = error);    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button [routerLink]=\"['/admin-panel/product', 'create']\" class=\"createButton\" mat-raised-button>Добавить товар</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Роза..\" #input>\r\n  </mat-form-field>\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let product\">\r\n            <button [routerLink]=\"['/admin-panel/product/edit', product.productLine]\" mat-raised-button\r\n                color=\"accent\">Изменить</button>\r\n            <button (click)=\"delete(product.id, product.imageUrl)\" mat-raised-button color=\"warn\">Удалить</button>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n            <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"example-element-diagram\">\r\n                    <div class=\"example-element-name\">\r\n                        <img [src]=\"element.imageUrl\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"example-element-description\">\r\n                    {{element.description}}\r\n                    <span class=\"example-element-description-attribution\"></span>\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n    </tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\n\r\n@Component({\r\n    templateUrl: './product-create.component.html',\r\n    styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent {\r\n\r\n    public errorMsg;\r\n    product: Product = new Product();    // добавляемый объект\r\n    constructor(\r\n        private productService: ProductService,\r\n         private router: Router) { }\r\n\r\n    save() {\r\n        console.log(this.product);\r\n        this.productService.createProduct(this.product).subscribe(() => {\r\n             this.router.navigateByUrl(\"/admin-panel/product\")\r\n            }, error => this.errorMsg = error);\r\n     }\r\n}\r\n\r\n\r\n// assets/img/products/product-1.jpg","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление нового товара</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/product'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n    templateUrl: './product-edit.component.html',\r\n    styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n    productLine: string;\r\n    @Input() product: Product;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    errorMsg: string;\r\n    message: string;\r\n\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router, \r\n        private uploadService: UploadService,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.productLine)\r\n            this.productService.getProduct(this.productLine)\r\n                .subscribe((data: Product) => {\r\n                    this.product = data;\r\n                    console.log(this.product);\r\n                    if (this.product != null) this.loaded = true;\r\n                }, error => this.errorMsg = error);\r\n    }\r\n\r\n    save() {\r\n        console.log(this.product)\r\n        this.productService.updateProduct(this.product).subscribe(() => { \r\n            this.router.navigateByUrl(\"/admin-panel/product\")\r\n        }, error => this.errorMsg = error);\r\n    }\r\n    deleteFile() {\r\n        var imageName = this.product.imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            console.log(`File ${imageName} is Deleted!`);\r\n            this.product.imageUrl = '';\r\n        }, error => this.errorMsg = error );\r\n        \r\n    }\r\n}","<div *ngIf=\"loaded\">\r\n        <h1 class=\"h1-line\"><span>Изменение товара</span></h1>\r\n        <h1>{{errorMsg}}</h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/product'\" mat-raised-button color=\"warn\">Назад</button>\r\n        <button mat-raised-button color=\"warn\" (click)=\"deleteFile()\" *ngIf=\"product.imageUrl\">Удалить фото</button>\r\n    </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\nimport { Product } from '../../../shared/models/product.model';\r\nimport { Category } from '../../../shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\nimport { TreeService } from 'src/app/shared/services/tree.service';\r\n\r\n@Component({\r\n    selector: \"product-form\",\r\n    templateUrl: './product-form.component.html',\r\n    styleUrls: ['./product-form.component.scss'],\r\n})\r\nexport class ProductFormComponent {\r\n\r\n    @Input() response: { dbPath: '' };\r\n    categories: Category[];\r\n    @Input() product: Product;\r\n    public errorMsg;\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private catService: CategoryService,\r\n        private treeService: TreeService\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n        this.catService.getCategories().subscribe((categories: Category[]) => {\r\n            this.categories = this.treeService.list_to_tree(categories);\r\n            this.categories = this.treeService.last_level_of_tree(categories);\r\n            console.log(this.categories);\r\n            this.loaded = true;\r\n        }, error => this.errorMsg = error);\r\n        \r\n    }\r\n\r\n    uploadFinished = (event) => {\r\n        this.response = event; \r\n        this.product.imageUrl = this.response.dbPath;\r\n    }\r\n}","<div class=\"product-form\" *ngIf=\"loaded\">\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [(ngModel)]=\"product.productLine\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Розы, тюльпаны, божий одуванчик...\" type=\"text\" [(ngModel)]=\"product.name\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [style.fontSize]=\"16\" class=\"product-full-width\">\r\n        <mat-label>Описание товара</mat-label>\r\n        <textarea matInput\r\n                  [(ngModel)]=\"product.description\"\r\n                  cdkTextareaAutosize\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"1\"\r\n                  cdkAutosizeMaxRows=\"5\"></textarea>\r\n      </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Цена</mat-label>\r\n        <input matInput placeholder=\"5$\" type=\"number\" [(ngModel)]=\"product.price\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Старая цена, если нужна</mat-label>\r\n        <input matInput placeholder=\"4\" type=\"number\" [(ngModel)]=\"product.oldPrice\" />\r\n    </mat-form-field>\r\n\r\n    <app-upload (onUploadFinished)=\"uploadFinished($event)\"></app-upload> \r\n\r\n    <img style=\"width: 50%;\" src=\"{{product.imageUrl}}\" alt=\"\">\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Является ли он топом\" [(ngModel)]=\"product.isFavourite\" required>\r\n        <mat-label>Является ли он топом: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Есть ли в наличии\" [(ngModel)]=\"product.available\" >\r\n        <mat-label>Есть ли в наличии: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Категория товара</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.categoryId\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  formData = new FormData();\r\n  message: string;\r\n  progress: number;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private uploadService: UploadService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadFile = (files) => {\r\n    if(files.length === 0)\r\n      return;\r\n\r\n    let fileToUpload = <File>files[0];\r\n    \r\n    this.formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    console.log(this.formData);\r\n\r\n    this.uploadService.UploadFile(this.formData).subscribe(event => {\r\n        if(event.type === HttpEventType.UploadProgress) {\r\n            this.progress = Math.round(100 * event.loaded / event.total);\r\n        }\r\n        else if(event.type === HttpEventType.Response) {\r\n            this.message = 'Upload file success!';\r\n            this.onUploadFinished.emit(event.body);\r\n        }\r\n    }, error => this.message = error);\r\n}\r\n\r\n}\r\n","<div class=\"row\" style=\"margin-bottom:15px;\">\r\n        <div class=\"col-md-3\">\r\n            <input \r\n                type=\"file\"\r\n                #file placeholder=\"Choose file\"\r\n                (change)=\"uploadFile(file.files)\"\r\n                style=\"display:none;\"\r\n                >\r\n                <button mat-raised-button color=\"primary\" (click)=\"file.click()\">Загрузить фото</button>\r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport dataJson from '../../jsonFiles/dataJson.json';\r\n\r\n@Component({\r\n  selector: 'test-json',\r\n  templateUrl: './test-json.component.html',\r\n  styleUrls: ['./test-json.component.css']\r\n})\r\nexport class TestJsonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  public countryList: { id: number, name: string, parentId: number, children: [] }[] = dataJson;\r\n\r\n  ngOnInit(): void { \r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from 'src/app/shared/models/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'users-create',\n  templateUrl: './users-create.component.html',\n  styleUrls: ['./users-create.component.css']\n})\nexport class UsersCreateComponent {\n\n  public errorMsg;\n    @Input() user: User = new User();    // добавляемый объект\n    constructor(\n        private usersService: UsersService,\n        private router: Router) { }\n\n    save() {\n        console.log(this.user);\n        this.usersService.createUser(this.user).subscribe(() => {\n             this.router.navigateByUrl(\"/admin-panel/users\")\n            }, error => this.errorMsg = error);\n     }\n}\n","<div>\n    <h1 class=\"h1-line\"><span>Добавление нового пользователя</span></h1>\n    <h1>{{errorMsg}}</h1>\n    <users-form [(user)]=\"user\"></users-form>\n    <div class=\"form-group\">\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/users'\">Отмена</button>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'users-edit',\n  templateUrl: './users-edit.component.html',\n  styleUrls: ['./users-edit.component.css']\n})\nexport class UsersEditComponent implements OnInit {\n\n    email: string;\n    @Input() user: User;    // изменяемый объект\n    loaded: boolean = false;\n    errorMsg: string;\n    message: string;\n\n    constructor(\n        private userService: UsersService,\n        private router: Router,\n        activeRoute: ActivatedRoute\n        ) \n    {\n        this.email = activeRoute.snapshot.params[\"email\"];\n    }\n\n    ngOnInit() {\n        if (this.email)\n            this.userService.getUserByEmail(this.email)\n                .subscribe((data: User) => {\n                    this.user = data;\n                    console.log(this.user);\n                    if (this.user != null) this.loaded = true;\n                }, error => this.errorMsg = error);\n    }\n\n    save() {\n       console.log(this.user);\n        this.userService.updateUser(this.user).subscribe(() => { \n            this.router.navigateByUrl(\"/admin-panel/users\")\n        }, error => this.errorMsg = error);\n    }\n}\n","<div *ngIf=\"loaded\">\n    <h1 class=\"h1-line\"><span>Изменение пользователя</span></h1>\n    <h1>{{errorMsg}}</h1>\n<users-form [(user)]=\"user\"></users-form>\n<div class=\"form-group\">\n    <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\n    <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n</div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'users-form',\n  templateUrl: './users-form.component.html',\n  styleUrls: ['./users-form.component.css']\n})\nexport class UsersFormComponent implements OnInit {\n\n  @Input() user: User;\n  public errorMsg;\n  loaded: boolean = false;\n  hide = true;\n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.required, Validators.email]);\n  password = new FormControl('', [Validators.required, Validators.minLength(5)]);\n  role = new FormControl('', [Validators.required]);\n\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n  getErrorMessageName() {\n    if (this.name.hasError('required')) {\n      return 'You must enter a value';\n    }\n  }\n\n  getErrorMessageEmail() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n  getErrorMessagePassw() {\n    if (this.password.hasError('required')) {\n      return 'Не оставлять пустым!';\n    }\n    return this.password.hasError('minlength') ? 'Пароль должен быть больше 5 символов' : '';\n  }\n  getErrorMessageRole() {\n    if (this.role.hasError('required')) {\n      return 'You must enter a value';\n    }\n  }\n}\n","<div class=\"product-form\">\n    <mat-form-field class=\"product-full-width\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [formControl]=\"name\" [(ngModel)]=\"user.name\" />\n        <mat-error *ngIf=\"name.invalid\">{{getErrorMessageName()}}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"pat@example.com\" [(ngModel)]=\"user.email\" [formControl]=\"email\" required>\n        <mat-error *ngIf=\"email.invalid\">{{getErrorMessageEmail()}}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\n        <mat-label>Введите пароль</mat-label>\n        <input matInput [formControl]=\"password\" [(ngModel)]=\"user.password\" [type]=\"hide ? 'password' : 'text'\">\n        <mat-error *ngIf=\"password.invalid\">{{getErrorMessagePassw()}}</mat-error>\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? \"visibility_off\" : 'visibility'}}</mat-icon>\n        </button>\n    </mat-form-field>\n\n    <mat-form-field class=\"product-full-width\">\n        <mat-label>Role</mat-label>\n        <input matInput placeholder=\"5$\" type=\"text\" [formControl]=\"role\" [(ngModel)]=\"user.role\" />\n        <mat-error *ngIf=\"role.invalid\">{{getErrorMessageRole()}}</mat-error>\n    </mat-form-field>\n\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Category } from 'src/app/shared/models/category.model';\nimport { User } from 'src/app/shared/models/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'users-list',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  dataSource: MatTableDataSource<User>;\n  columnsToDisplay = [\n    'email', \n    'name', \n    'role',\n    'button'\n  ];\n  expandedElement: User | null;\n  errorMsg: string;\n  categories: Category;\n  \n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    private usersService: UsersService\n  ) { }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  load() {\n    this.usersService.getUsers().subscribe((data: User[]) => {\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, error => this.errorMsg = error);\n  }\n\n  delete(id: number) {\n    this.usersService.deleteUser(id).subscribe(data => { \n      console.log(`User with ID \"${id}\" is Deleted!`);\n      this.load();\n    }, error => this.errorMsg = error);    \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<button [routerLink]=\"['/admin-panel/users', 'create']\" class=\"createButton\" mat-raised-button>Добавить Пользователя</button>\n\n<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\n  </mat-form-field>\n\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\n    <ng-container \n        matColumnDef=\"{{column}}\"\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\n    >\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\n        <td mat-cell\n            *matCellDef=\"let element\"\n            class=\"example-element-text\"\n            > {{element[column]}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"button\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let user\">\n            <button [routerLink]=\"['/admin-panel/users/edit', user.email]\" mat-raised-button\n                color=\"accent\">Изменить</button>\n            <button (click)=\"delete(user.id)\" mat-raised-button color=\"warn\" >Удалить</button>\n        </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    constructor(\r\n        public id?: number,\r\n        public line?: string,\r\n        public name?: string,\r\n        public parent_Id?: number,\r\n        public products?: Product[],\r\n        public children?: null\r\n        ){ }\r\n}","import { Category } from './category.model';\r\n\r\nexport class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public productLine?: string,\r\n        public description?: string,\r\n        public price?: number,\r\n        public oldPrice?: number,\r\n        public imageUrl?: string,\r\n        public isFavourite?: boolean,\r\n        public available?: boolean,\r\n        public categoryId?: number,\r\n        public Category?: Category\r\n        ) { }\r\n}\r\n\r\n","export class User {\r\n    constructor(\r\n        public name?: string,\r\n        public email?: string,\r\n        public password?: string,\r\n        public role?: string,\r\n        public id?: number) { }\r\n}"]}