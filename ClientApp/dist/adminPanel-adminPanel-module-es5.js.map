{"version":3,"sources":["webpack:///src/app/adminPanel/adminPanel.component.ts","webpack:///src/app/adminPanel/adminPanel.component.html","webpack:///src/app/adminPanel/products/product-form/upload/upload.component.ts","webpack:///src/app/adminPanel/products/product-form/upload/upload.component.html","webpack:///src/app/adminPanel/adminPanel-routing.module.ts","webpack:///src/app/shared/models/product.model.ts","webpack:///src/app/adminPanel/users/users-form/users-edit/users-edit.component.ts","webpack:///src/app/adminPanel/users/users-form/users-edit/users-edit.component.html","webpack:///src/app/shared/models/user-role/userRoles.model.ts","webpack:///src/app/adminPanel/products/product-form/product-create/product-create.component.ts","webpack:///src/app/adminPanel/products/product-form/product-create/product-create.component.html","webpack:///src/app/adminPanel/categories/categories.component.ts","webpack:///src/app/adminPanel/categories/categories.component.html","webpack:///src/app/adminPanel/users/users-form/user-roles/user-roles/user-roles.component.ts","webpack:///src/app/adminPanel/users/users-form/user-roles/user-roles/user-roles.component.html","webpack:///src/app/adminPanel/categories/categories-form/categories-form.component.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-form.component.html","webpack:///src/app/adminPanel/adminPanel.module.ts","webpack:///src/app/adminPanel/users/users.component.ts","webpack:///src/app/adminPanel/users/users.component.html","webpack:///src/app/shared/models/category.model.ts","webpack:///src/app/adminPanel/users/users-form/users-create/users-create.component.ts","webpack:///src/app/adminPanel/users/users-form/users-create/users-create.component.html","webpack:///src/app/shared/models/user-role/userWithRoles.model.ts","webpack:///src/app/shared/models/user-role/user.model.ts","webpack:///src/app/adminPanel/products/product-form/product-edit/product-edit.component.ts","webpack:///src/app/adminPanel/products/product-form/product-edit/product-edit.component.html","webpack:///src/app/adminPanel/products/product-form/product-form.component.ts","webpack:///src/app/adminPanel/products/product-form/product-form.component.html","webpack:///src/app/adminPanel/users/users-form/user-resetpassword/user-resetpassword.component.ts","webpack:///src/app/adminPanel/users/users-form/user-resetpassword/user-resetpassword.component.html","webpack:///src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.html","webpack:///src/app/adminPanel/products/products.component.ts","webpack:///src/app/adminPanel/products/products.component.html","webpack:///src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.ts","webpack:///src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.html","webpack:///src/app/adminPanel/test-json/test-json.component.ts"],"names":["AdminPanelComponent","authService","router","isAdmin","date","Date","user","getUser","roles","includes","logout","navigate","onLogout","selector","templateUrl","styleUrls","UploadComponent","uploadService","formData","FormData","onUploadFinished","uploadFile","files","length","fileToUpload","append","name","UploadFile","subscribe","event","type","UploadProgress","progress","Math","round","loaded","total","Response","message","emit","body","error","adminRoutes","path","component","children","canActivate","AdminPanelRoutingModule","forChild","imports","exports","Product","id","productLine","description","price","oldPrice","imageUrl","isFavourite","available","categoryId","Category","UsersEditComponent","userService","toastrService","userValidate","activeRoute","emailLine","snapshot","params","getUserByEmail","data","form","required","email","updateUser","success","navigateByUrl","getErrorMessageName","get","getErrorMessageEmail","UserRoles","userId","ProductCreateComponent","productService","product","console","log","createProduct","save","CategoriesComponent","categoryService","accessRights","columnsToDisplay","load","getCategories","dataSource","paginator","sort","deleteCategory","res","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","UserRolesComponent","rolesService","userWithRoles","userRoles","GetUserWithRoles","checked","push","index","indexOf","splice","EditUserRoles","userEmail","CategoriesFormComponent","hide","line","categories","parent_Id","products","hasError","category","AdminPanelModule","declarations","UsersComponent","usersService","toastrSrvice","getUsers","deleteUser","UsersCreateComponent","allRoles","GetAllRoles","minLength","createUser","userName","getErrorMessagePassw","onSubmit","UserWithRoles","User","password","ProductEditComponent","getProduct","updateProduct","ProductFormComponent","catService","treeService","uploadFinished","response","dbPath","list_to_tree","last_level_of_tree","errorMsg","UserResetpasswordComponent","userWithNewPassword","newpassword","changePassword","CategoriesEditComponent","categoryLine","getCategory","updateCategory","ProductsComponent","getProducts","deleteProduct","height","minHeight","animations","CategoriesCreateComponent","createCategory","TestJsonComponent","countryList"],"mappings":"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","file":"adminPanel-adminPanel-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../shared/services/auth.service';\r\n\r\nimport { User } from '../shared/models/user-role/user.model';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './adminPanel.component.html',\r\n    styleUrls: ['./adminPanel.component.scss']\r\n})\r\nexport class AdminPanelComponent implements OnInit{\r\n\r\n    user: User;\r\n    isAdmin = false;\r\n    date: Date = new Date();\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n    ngOnInit(){\r\n        this.user = this.authService.getUser();\r\n        if (this.user == null) {\r\n            this.user = {\r\n                \"userName\": 'Guest',\r\n                \"email\": 'Example@example.com',\r\n                'roles': []\r\n            }\r\n        }\r\n        if (this.user.roles.includes('admin')){\r\n            this.isAdmin = true;\r\n        }\r\n    }\r\n    onLogout() {\r\n        this.authService.logout();\r\n        this.router.navigate(['/auth/login']);\r\n    }\r\n }","<div class=\"admin-container\">\r\n  <div class=\"admin-time\">\r\n    {{ date | date:'dd.MM.yyyy'}}\r\n  </div>\r\n  <div class=\"admin-nav\">\r\n    <button [routerLink]=\"['/admin-panel/products']\" class=\"createButton\" mat-raised-button>Товары</button>\r\n    <button [routerLink]=\"['/admin-panel/categories']\" class=\"createButton\" mat-raised-button>Категории</button>\r\n    <button [routerLink]=\"['/admin-panel/users']\"  class=\"createButton\" mat-raised-button>Пользователи</button>\r\n  </div> \r\n  <!-- *ngIf=\"isAdmin\" -->\r\n\r\n  <div class=\"admin-menu\">\r\n    <button mat-button [matMenuTriggerFor]=\"menu\">Hello, {{ user.userName }}</button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item>{{ user.email }}</button>\r\n      <button mat-menu-item (click)=\"onLogout()\">Выйти</button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  formData = new FormData();\r\n  message: string;\r\n  progress: number;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private uploadService: UploadService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadFile = (files) => {\r\n    if(files.length === 0)\r\n      return;\r\n\r\n    let fileToUpload = <File>files[0];\r\n    \r\n    this.formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    this.uploadService.UploadFile(this.formData).subscribe(event => {\r\n        if(event.type === HttpEventType.UploadProgress) {\r\n            this.progress = Math.round(100 * event.loaded / event.total);\r\n        }\r\n        else if(event.type === HttpEventType.Response) {\r\n            this.message = 'Upload file success!';\r\n            this.onUploadFinished.emit(event.body);\r\n        }\r\n    }, error => this.message = error);\r\n}\r\n\r\n}\r\n","<div class=\"row\" style=\"margin-bottom:15px;\">\r\n        <div class=\"col-md-3\">\r\n            <input \r\n                type=\"file\"\r\n                #file placeholder=\"Choose file\"\r\n                (change)=\"uploadFile(file.files)\"\r\n                style=\"display:none;\"\r\n                >\r\n                <button mat-raised-button color=\"primary\" (click)=\"file.click()\">Загрузить фото</button>\r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '../shared/services/guards/admin-guard.service';\r\nimport { AuthGuard } from '../shared/services/guards/auth-guard.service';\r\nimport { ManagerGuard } from '../shared/services/guards/manager-guard.service';\r\n\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { ProductsComponent } from \"./products/products.component\";\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { UserRolesComponent } from './users/users-form/user-roles/user-roles/user-roles.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserResetpasswordComponent } from './users/users-form/user-resetpassword/user-resetpassword.component';\r\n\r\nconst adminRoutes: Routes = [\r\n    \r\n    { path: '', component: AdminPanelComponent, children: [\r\n        { path: 'products', component: ProductsComponent },\r\n        { path: 'products/create', component: ProductCreateComponent, canActivate: [ManagerGuard] },\r\n        { path: 'products/edit/:productLine', component: ProductEditComponent, canActivate: [ManagerGuard] },\r\n        { path: 'users', component: UsersComponent, canActivate: [AdminGuard]  }, \r\n        { path: 'users/resetpassword/:email', component: UserResetpasswordComponent, canActivate: [AdminGuard] }, \r\n        { path: 'users/roles/:userId', component: UserRolesComponent, canActivate: [AdminGuard] }, \r\n        { path: 'users/create', component: UsersCreateComponent, canActivate: [AdminGuard] }, \r\n        { path: 'users/edit/:email', component: UsersEditComponent, canActivate: [AdminGuard] }, \r\n        { path: 'categories', component: CategoriesComponent },\r\n        { path: 'categories/create', component: CategoriesCreateComponent, canActivate: [ManagerGuard] },\r\n        { path: 'categories/edit/:categoryLine', component: CategoriesEditComponent, canActivate: [ManagerGuard] }\r\n    ] , canActivate: [AuthGuard]  }, \r\n    \r\n    { path: 'test', component: TestJsonComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(adminRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","import { Category } from './category.model';\r\n\r\nexport class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public productLine?: string,\r\n        public description?: string,\r\n        public price?: number,\r\n        public oldPrice?: number,\r\n        public imageUrl?: string,\r\n        public isFavourite?: boolean,\r\n        public available?: boolean,\r\n        public categoryId?: number,\r\n        public Category?: Category\r\n        ) { }\r\n}\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\nimport { UserValidateService } from '../../../../shared/services/userValidate.service';\r\n\r\n@Component({\r\n    selector: 'users-edit',\r\n    templateUrl: './users-edit.component.html',\r\n    styleUrls: ['./users-edit.component.css']\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n\r\n    emailLine: string;\r\n    @Input() user: User;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    form: FormGroup;\r\n\r\n    constructor(\r\n        private userService: UsersService,\r\n        private router: Router,\r\n        private toastrService: ToastrService,\r\n        private userValidate: UserValidateService,\r\n        activeRoute: ActivatedRoute\r\n    ) {\r\n        this.emailLine = activeRoute.snapshot.params[\"email\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.emailLine) {\r\n            this.userService.getUserByEmail(this.emailLine)\r\n                .subscribe((data: User) => {\r\n                    this.user = data;\r\n                    if (this.user != null) {\r\n                        this.form = new FormGroup({\r\n                            'userName': new FormControl('', [Validators.required]),\r\n                            'email': new FormControl('', [Validators.required, Validators.email])\r\n                        });\r\n                        this.loaded = true;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.userService.updateUser(this.user).subscribe(() => {\r\n            this.toastrService.success(`User changed`);\r\n            this.router.navigateByUrl(\"/admin-panel/users\");\r\n        });\r\n    }\r\n\r\n    getErrorMessageName() {\r\n        return this.userValidate.getErrorMessageName(this.form.get('userName'));\r\n    }\r\n\r\n    getErrorMessageEmail() {\r\n        return this.userValidate.getErrorMessageEmail(this.form.get('email'));\r\n    }\r\n}\r\n","<div *ngIf=\"loaded\">\r\n    <h1 class=\"h1-line\"><span>Изменение пользователя</span></h1>\r\n    <form class=\"product-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field class=\"product-full-width\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" formControlName=\"userName\"\r\n                [(ngModel)]=\"user.userName\" />\r\n            <mat-error *ngIf=\"form.get('userName').invalid\">{{getErrorMessageName()}}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"product-full-width\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput placeholder=\"pat@example.com\" [(ngModel)]=\"user.email\" formControlName=\"email\" required>\r\n            <mat-error *ngIf=\"form.get('email').invalid\">{{getErrorMessageEmail()}}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"form-group\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Сохранить</button>\r\n            <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"form-group_notFound\" *ngIf=\"!loaded\">\r\n    <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\r\n</div>\r\n","export class UserRoles {\r\n    constructor(\r\n        public userId?: string,\r\n        public roles?: Array<string>\r\n    ){ }\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    templateUrl: './product-create.component.html',\r\n    styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent {\r\n\r\n    product: Product = new Product();    // добавляемый объект\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router,\r\n        private toastrService: ToastrService\r\n        ) { }\r\n\r\n    save() {\r\n        console.log(this.product);\r\n        this.productService.createProduct(this.product).subscribe(() => {\r\n            this.toastrService.success(`Product ${this.product.name} Created`)\r\n             this.router.navigateByUrl(\"/admin-panel/products\")\r\n            });\r\n     }\r\n}\r\n","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление нового товара</span></h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/products'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.css']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  accessRights = false;\r\n  user: User;\r\n  dataSource: MatTableDataSource<Category>;\r\n  columnsToDisplay = [\r\n    'id', \r\n    'line', \r\n    'name',\r\n    'parent_Id', \r\n    'button'\r\n  ];\r\n  expandedElement: Category | null;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private toastrService: ToastrService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.getUser();\r\n    if(this.user.roles.includes('admin') || this.user.roles.includes('manager')){\r\n      this.accessRights = true;\r\n    }\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.categoryService.deleteCategory(id).subscribe(res => { \r\n      this.toastrService.success(`Category with ID \"${id}\" is Deleted!`);\r\n      this.load();\r\n    });    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  } \r\n}\r\n","<button \r\n    [routerLink]=\"['/admin-panel/categories', 'create']\" \r\n    class=\"createButton\" \r\n    mat-raised-button\r\n    *ngIf=\"accessRights\"\r\n    >Создать Категорию\r\n</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\r\n  </mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let category\">\r\n            <button \r\n                [routerLink]=\"['/admin-panel/categories/edit', category.line]\" \r\n                mat-raised-button \r\n                color=\"accent\"\r\n                *ngIf=\"accessRights\"\r\n                >Изменить\r\n            </button>\r\n            <button \r\n                (click)=\"delete(category.id)\" \r\n                mat-raised-button color=\"warn\"\r\n                *ngIf=\"accessRights\" \r\n                >Удалить\r\n            </button>\r\n        </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserRoles } from 'src/app/shared/models/user-role/userRoles.model';\nimport { UserWithRoles } from 'src/app/shared/models/user-role/userWithRoles.model';\nimport { RolesService } from 'src/app/shared/services/roles.service';\n\n@Component({\n  selector: 'user-roles',\n  templateUrl: './user-roles.component.html',\n  styleUrls: ['./user-roles.component.css']\n})\nexport class UserRolesComponent implements OnInit {\n\n  userId: string;\n  userWithRoles: UserWithRoles = new UserWithRoles();\n  userRoles: UserRoles = new UserRoles();   \n  loaded: boolean = false;\n  \n  constructor(\n      private router: Router,\n      private toastrService: ToastrService,\n      private rolesService: RolesService,\n      private activeRoute: ActivatedRoute\n      ) {\n        this.userId = activeRoute.snapshot.params[\"userId\"];\n       }\n\n  ngOnInit() {\n    if (this.userId) {\n      this.rolesService.GetUserWithRoles(this.userId)\n          .subscribe( res => {\n              this.userWithRoles = res;\n              if (this.userWithRoles != null) {\n                  this.loaded = true;\n                  this.userRoles = {\n                    userId: res.userId,\n                    roles: res.userRoles\n                  }\n              }              \n          });\n  }    \n}\n\nonToggle(event) {\n  if (event.checked) {\n    this.userRoles.roles.push(event.value)\n  }\n  else {\n    let index = this.userRoles.roles.indexOf(event.value);\n    if(index > -1) {\n      this.userRoles.roles.splice(index, 1);\n    }    \n  }\n}\n\nsave() {\n  this.rolesService.EditUserRoles(this.userRoles).subscribe(res => {\n    this.toastrService.success(`Roles for ${this.userWithRoles.userEmail} changed successfully!`);\n    this.router.navigate([\"/admin-panel/users\"]);\n  })\n}\n}\n","<h1 class=\"h1-line\"><span>Изменение ролей для пользователя</span></h1>\n<div *ngIf=\"loaded\">\n    <div class=\"form\">\n        <div class=\"product-form\">\n            <h3>Email: {{ userWithRoles.userEmail}}</h3>\n            <div class=\"form-group\">\n                <section class=\"example-section\" *ngFor=\"let role of userWithRoles.allRoles\">\n                    <mat-checkbox class=\"example-margin\" #roleCheck\n                        checked=\"{{userRoles.roles.includes(role.name)? 'checked': ''}}\" (change)=\"onToggle(roleCheck)\"\n                        value=\"{{role.name}}\">{{ role.name }}\n                    </mat-checkbox>\n                </section>\n            </div>\n            <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\n            <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n        </div>\n    </div>\n</div>\n<div class=\"form-group_notFound\" *ngIf=\"!loaded\">\n    <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-form',\r\n  templateUrl: './categories-form.component.html',\r\n  styleUrls: ['./categories-form.component.css']\r\n})\r\nexport class CategoriesFormComponent implements OnInit {\r\n\r\n  @Input() category: Category;\r\n  @Input() categories: Category[];\r\n  loaded: boolean = false;\r\n  hide = true;\r\n  name = new FormControl('', [Validators.required]);\r\n  line = new FormControl('', [Validators.required]);\r\n\r\n\r\n  constructor(\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.categories)\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.categories = data;\r\n      this.categories.push({\r\n        children: null,\r\n        id: 0,\r\n        line: \"\",\r\n        name: \"Родительская категория\",\r\n        parent_Id: null,\r\n        products: null\r\n      })\r\n    });\r\n  }\r\n  getErrorMessage() {\r\n    if (this.name.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n}\r\n","<div class=\"product-form\" >\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path</mat-label>\r\n        <input \r\n        matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\"\r\n        type=\"text\" [(ngModel)]=\"category.line\" \r\n        [formControl]=\"line\"\r\n        />\r\n        <mat-error *ngIf=\"line.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Горшки, шары...\" \r\n        type=\"text\" [(ngModel)]=\"category.name\" \r\n        [formControl]=\"name\"\r\n        />\r\n        <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Parent_id</mat-label>\r\n        <mat-select [(ngModel)]=\"category.parent_Id\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AdminPanelRoutingModule } from './adminPanel-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { UploadComponent } from './products/product-form/upload/upload.component';\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { ProductFormComponent } from './products/product-form/product-form.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { CategoriesFormComponent } from './categories/categories-form/categories-form.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\nimport { UserRolesComponent } from './users/users-form/user-roles/user-roles/user-roles.component';\nimport { UserResetpasswordComponent } from './users/users-form/user-resetpassword/user-resetpassword.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminPanelComponent,\r\n        ProductsComponent,\r\n        ProductFormComponent,\r\n        ProductCreateComponent,\r\n        ProductEditComponent,\r\n        UploadComponent,\r\n        TestJsonComponent,\r\n        UsersComponent,\r\n        CategoriesComponent,\r\n        UsersCreateComponent,\r\n        UsersEditComponent,\r\n        CategoriesFormComponent,\r\n        CategoriesCreateComponent,\r\n        CategoriesEditComponent,\r\n        UserRolesComponent,\r\n        UserResetpasswordComponent        \r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AdminPanelRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AdminPanelModule {\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\n\r\n@Component({\r\n  selector: 'users-list',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<User>;\r\n  columnsToDisplay = [\r\n    'email', \r\n    'userName',\r\n    'button'\r\n  ];\r\n  expandedElement: User | null;\r\n  categories: Category;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private toastrSrvice: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.usersService.getUsers().subscribe((data: User[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.usersService.deleteUser(id).subscribe(res => { \r\n      this.toastrSrvice.success(`User with ID \"${id}\" is Deleted!`);\r\n      this.load();\r\n    });    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button [routerLink]=\"['/admin-panel/users', 'create']\" class=\"createButton\" mat-raised-button>Добавить\r\n    Пользователя</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\r\n</mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"example-element-text\"> {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let user\">\r\n            <button mat-raised-button color=\"accent\" [matMenuTriggerFor]=\"menu\">Управление пользователем</button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button [routerLink]=\"['/admin-panel/users/edit', user.email]\"\r\n                    mat-menu-item \r\n                    >Изменить\r\n                </button>\r\n                <button [routerLink]=\"['/admin-panel/users/roles', user.id]\"\r\n                    mat-menu-item \r\n                    >Права доступа\r\n                </button>\r\n                <button [routerLink]=\"['/admin-panel/users/resetpassword', user.email]\"\r\n                    mat-menu-item \r\n                    >Сменить пароль\r\n                </button>\r\n                <button (click)=\"delete(user.id)\" \r\n                    mat-menu-item\r\n                    >Удалить\r\n                </button>\r\n            </mat-menu>            \r\n        </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    constructor(\r\n        public id?: number,\r\n        public line?: string,\r\n        public name?: string,\r\n        public parent_Id?: number,\r\n        public products?: Product[],\r\n        public children?: null\r\n        ){ }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { UserValidateService } from '../../../../shared/services/userValidate.service';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\nimport { UserRoles } from 'src/app/shared/models/user-role/userRoles.model';\r\nimport { RolesService } from 'src/app/shared/services/roles.service';\r\n\r\n@Component({\r\n  selector: 'users-create',\r\n  templateUrl: './users-create.component.html',\r\n  styleUrls: ['./users-create.component.css']\r\n})\r\nexport class UsersCreateComponent implements OnInit {\r\n\r\n  @Input() user: User = new User();  \r\n  loaded: boolean = false;\r\n  hide = true;\r\n  form: FormGroup;\r\n  userRoles: Array<string> = [];\r\n  allRoles: Array<string> = [];\r\n  \r\n  constructor(\r\n      private usersService: UsersService,\r\n      private router: Router,\r\n      private toastrService: ToastrService,\r\n      private userValidate: UserValidateService,\r\n      private rolesService: RolesService\r\n      ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rolesService.GetAllRoles().subscribe(res => {\r\n      this.allRoles = res;\r\n    })\r\n    this.form = new FormGroup({\r\n      'userName': new FormControl('', [Validators.required]),\r\n      'email': new FormControl('', [Validators.required, Validators.email]),\r\n      'password': new FormControl('', [Validators.required, Validators.minLength(5)])\r\n    })\r\n  }\r\n\r\n  onToggle(event) {\r\n    if (event.checked) {\r\n      this.userRoles.push(event.value)\r\n    }\r\n    else {\r\n      let index = this.userRoles.indexOf(event.value);\r\n      if(index > -1) {\r\n        this.userRoles.splice(index, 1);\r\n      }    \r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.user.roles = this.userRoles;\r\n    console.log(this.user)\r\n    this.usersService.createUser(this.user).subscribe(() => {\r\n      this.toastrService.success(`User ${this.user.userName} is Created`);\r\n      this.router.navigateByUrl(\"/admin-panel/users\")\r\n      \r\n    });\r\n  }\r\n\r\n  getErrorMessageName() {\r\n    return this.userValidate.getErrorMessageName(this.form.get('userName'));\r\n  }\r\n\r\n  getErrorMessageEmail() {\r\n    return this.userValidate.getErrorMessageEmail(this.form.get('email'));\r\n  }\r\n\r\n  getErrorMessagePassw() {\r\n    return this.userValidate.getErrorMessagePassw(this.form.get('password'));\r\n  }\r\n}\r\n","<h1 class=\"h1-line\"><span>Добавление нового пользователя</span></h1>\r\n<form class=\"product-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" formControlName=\"userName\"\r\n            [(ngModel)]=\"user.userName\" />\r\n        <mat-error *ngIf=\"form.get('userName').invalid\">{{getErrorMessageName()}}</mat-error>\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"pat@example.com\" [(ngModel)]=\"user.email\" formControlName=\"email\" required>\r\n        <mat-error *ngIf=\"form.get('email').invalid\">{{getErrorMessageEmail()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\r\n        <mat-label>Введите пароль</mat-label>\r\n        <input matInput formControlName=\"password\" [(ngModel)]=\"user.password\" [type]=\"hide ? 'password' : 'text'\">\r\n        <mat-error *ngIf=\"form.get('password').invalid\">{{getErrorMessagePassw()}}</mat-error>\r\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>{{hide ? \"visibility_off\" : 'visibility'}}</mat-icon>\r\n        </button>\r\n    </mat-form-field>\r\n\r\n    <div class=\"form-group\" >\r\n        <section class=\"example-section\" *ngFor=\"let role of allRoles\">\r\n            <mat-checkbox                   \r\n                class=\"example-margin\"\r\n                #roleCheck\r\n                checked=\"{{userRoles.includes(role.name)? 'checked': ''}}\"\r\n                (change)=\"onToggle(roleCheck)\"\r\n                value=\"{{role.name}}\"\r\n                >{{ role.name }}\r\n            </mat-checkbox>\r\n        </section>        \r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Сохранить</button>\r\n        <button mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/users'\">Отмена</button>\r\n    </div>\r\n</form>\r\n","import { Role } from './role.model';\r\n\r\nexport class UserWithRoles {\r\n    constructor(\r\n        public userId?: string,\r\n        public userEmail?: string,\r\n        public allRoles?: Array<Role>,\r\n        public userRoles?: Array<string>\r\n    ){ }\r\n}","export class User {\r\n    constructor(\r\n        public userName?: string,\r\n        public email?: string,\r\n        public password?: string,\r\n        public roles?: Array<string>,\r\n        public id?: string) { }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    templateUrl: './product-edit.component.html',\r\n    styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n    productLine: string;\r\n    @Input() product: Product;    // изменяемый объект\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router, \r\n        private uploadService: UploadService,\r\n        private activeRoute: ActivatedRoute,\r\n        private toastrService: ToastrService\r\n        ) \r\n    {\r\n        this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.productLine)\r\n            this.productService.getProduct(this.productLine)\r\n                .subscribe((data: Product) => {\r\n                    this.product = data;\r\n                    if (this.product != null) this.loaded = true;\r\n                });\r\n    }\r\n\r\n    save() {\r\n        this.productService.updateProduct(this.product).subscribe(() => {\r\n            this.toastrService.success(`Product changed`)\r\n            this.router.navigateByUrl(\"/admin-panel/products\")\r\n        });\r\n    }\r\n    // deleteFile() {\r\n    //     var imageName = this.product.imageUrl.split(\"\\\\\").pop();\r\n    //     this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n    //         this.toastrService.success(`File ${imageName} is Deleted!`);\r\n    //         this.product.imageUrl = '';\r\n    //     });\r\n        \r\n    // }\r\n}","<div *ngIf=\"loaded\">\r\n        <h1 class=\"h1-line\"><span>Изменение товара</span></h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/products'\" mat-raised-button color=\"warn\">Назад</button>\r\n        <!-- <button mat-raised-button color=\"warn\" (click)=\"deleteFile()\" *ngIf=\"product.imageUrl\">Удалить фото</button> -->\r\n    </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\nimport { Product } from '../../../shared/models/product.model';\r\nimport { Category } from '../../../shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\nimport { TreeService } from 'src/app/shared/services/tree.service';\r\n\r\n@Component({\r\n    selector: \"product-form\",\r\n    templateUrl: './product-form.component.html',\r\n    styleUrls: ['./product-form.component.scss'],\r\n})\r\nexport class ProductFormComponent {\r\n\r\n    @Input() response: { dbPath: '' };\r\n    categories: Category[];\r\n    @Input() product: Product;\r\n    public errorMsg;\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private catService: CategoryService,\r\n        private treeService: TreeService\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n        this.catService.getCategories().subscribe((categories: Category[]) => {\r\n            this.categories = this.treeService.list_to_tree(categories);\r\n            this.categories = this.treeService.last_level_of_tree(categories);\r\n            this.loaded = true;\r\n        }, error => this.errorMsg = error);\r\n        \r\n    }\r\n\r\n    uploadFinished = (event) => {\r\n        this.response = event; \r\n        this.product.imageUrl = this.response.dbPath;\r\n    }\r\n}","<div class=\"product-form\" *ngIf=\"loaded\">\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [(ngModel)]=\"product.productLine\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Розы, тюльпаны, божий одуванчик...\" type=\"text\" [(ngModel)]=\"product.name\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [style.fontSize]=\"16\" class=\"product-full-width\">\r\n        <mat-label>Описание товара</mat-label>\r\n        <textarea matInput\r\n                  [(ngModel)]=\"product.description\"\r\n                  cdkTextareaAutosize\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"1\"\r\n                  cdkAutosizeMaxRows=\"5\"></textarea>\r\n      </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Цена</mat-label>\r\n        <input matInput placeholder=\"5$\" type=\"number\" [(ngModel)]=\"product.price\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Старая цена, если нужна</mat-label>\r\n        <input matInput placeholder=\"4\" type=\"number\" [(ngModel)]=\"product.oldPrice\" />\r\n    </mat-form-field>\r\n\r\n    <app-upload (onUploadFinished)=\"uploadFinished($event)\"></app-upload> \r\n\r\n    <img style=\"width: 50%;\" src=\"{{product.imageUrl}}\" alt=\"\">\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Является ли он топом\" [(ngModel)]=\"product.isFavourite\" required>\r\n        <mat-label>Является ли он топом: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Есть ли в наличии\" [(ngModel)]=\"product.available\" >\r\n        <mat-label>Есть ли в наличии: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Категория товара</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.categoryId\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/shared/models/user-role/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\nimport { UserValidateService } from 'src/app/shared/services/userValidate.service';\n\n@Component({\n  selector: 'user-resetpassword',\n  templateUrl: './user-resetpassword.component.html',\n  styleUrls: ['./user-resetpassword.component.css']\n})\nexport class UserResetpasswordComponent implements OnInit {\n\n  emailLine: string;\n  loaded: boolean = false;\n  user: User;\n  form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private toastrService: ToastrService,\n    private userValidate: UserValidateService,\n    private activeRoute: ActivatedRoute,\n    private userService: UsersService\n  ) {\n    this.emailLine = activeRoute.snapshot.params[\"email\"];\n  }\n\n  ngOnInit(): void {\n    if (this.emailLine) {\n      this.userService.getUserByEmail(this.emailLine)\n        .subscribe((data: User) => {\n          this.user = data;\n          if (this.user != null) {\n            this.form = new FormGroup({\n              'newPassword': new FormControl('', [Validators.required, Validators.minLength(6)])\n            });\n            this.loaded = true;\n          }\n        });\n    }\n  }\n\n  onSubmit() {\n    let userWithNewPassword = {\n      id: this.user.id,\n      email: this.user.email,\n      newpassword: this.form.get('newPassword').value\n    };\n    this.userService.changePassword(userWithNewPassword).subscribe(data => {\n      this.toastrService.success(`Пароль изменен`);\n      this.router.navigate(['/admin-panel/users']);\n    });\n  }\n\n  getErrorMessagePassw() {\n    return this.userValidate.getErrorMessagePassw(this.form.get('newPassword'));\n  }\n\n}\n","<h1 class=\"h1-line\"><span>Сброс пароля</span></h1>\n<div *ngIf=\"loaded\">\n  <div class=\"form\">\n    <form class=\"product-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <h3>Email: {{ user.email}}</h3>\n      <div class=\"example-container\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Введите пароль</mat-label>\n          <input matInput formControlName=\"newPassword\" type=\"password\" required />\n          <mat-error *ngIf=\"form.get('newPassword').invalid\n                                && form.get('newPassword').touched\">{{getErrorMessagePassw()}}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Сохранить</button>\n      <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n    </form>\n  </div>\n</div>\n<div class=\"form-group_notFound\" *ngIf=\"!loaded\">\n  <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-edit',\r\n  templateUrl: './categories-edit.component.html',\r\n  styleUrls: ['./categories-edit.component.css']\r\n})\r\nexport class CategoriesEditComponent implements OnInit {\r\n\r\n  categoryLine: string;\r\n    @Input() category: Category;    // изменяемый объект\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        private toastrService: ToastrService,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.categoryLine = activeRoute.snapshot.params[\"categoryLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.categoryLine)\r\n            this.categoryService.getCategory(this.categoryLine)\r\n                .subscribe((data: Category) => {\r\n                    this.category = data;\r\n                    if (this.category != null) this.loaded = true;\r\n                });\r\n    }\r\n\r\n    save() {\r\n       console.log(this.category);\r\n        this.categoryService.updateCategory(this.category).subscribe(() => { \r\n            this.toastrService.success(`Category changed`);\r\n            this.router.navigateByUrl(\"/admin-panel/categories\")\r\n        });\r\n    }\r\n}\r\n","<h1 class=\"h1-line\"><span>Изменение категории</span></h1>\r\n<div *ngIf=\"loaded\">\r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/categories'\" mat-raised-button color=\"warn\">Назад</button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\n\r\n@Component({\r\n  selector: 'products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  accessRights = false;\r\n  user: User;\r\n  dataSource: MatTableDataSource<Product>;\r\n  columnsToDisplay = [ \r\n    'name', \r\n    'price', \r\n    'oldPrice', \r\n    'isFavourite',\r\n    'available',\r\n    'category',\r\n    'button'\r\n  ];\r\n  expandedElement: Product | null;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uploadService: UploadService,\r\n    private toastrService: ToastrService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.getUser();\r\n    if(this.user.roles.includes('admin') || this.user.roles.includes('manager')){\r\n      this.accessRights = true;\r\n    }\r\n    this.load();\r\n  }\r\n\r\n  load() {    \r\n    this.productService.getProducts().subscribe((data: Product[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.productService.deleteProduct(id).subscribe(data => { \r\n      this.toastrService.success(`Removal product with id ${id} successful`)\r\n      this.load();\r\n    });    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button \r\n    [routerLink]=\"['/admin-panel/products/', 'create']\" \r\n    *ngIf=\"accessRights\" \r\n    class=\"createButton\" \r\n    mat-raised-button\r\n    >Добавить товар\r\n</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Роза..\" #input>\r\n  </mat-form-field>\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let product\">\r\n            <button\r\n                *ngIf=\"accessRights\"\r\n                [routerLink]=\"['/admin-panel/products/edit', product.productLine]\" \r\n                mat-raised-button\r\n                color=\"accent\"\r\n                >Изменить\r\n            </button>\r\n            <button \r\n                (click)=\"delete(product.id)\"\r\n                *ngIf=\"accessRights\"\r\n                mat-raised-button color=\"warn\"\r\n                >Удалить\r\n            </button>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n            <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"example-element-diagram\">\r\n                    <div class=\"example-element-name\">\r\n                        <img [src]=\"element.imageUrl\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"example-element-description\">\r\n                    <p>\r\n                        Строка в Url: \r\n                        <span class=\"example-element-description-attribution\">\r\n                            {{ element.productLine}}.\r\n                       </span>\r\n                    </p>\r\n                    <p>\r\n                    Описание :\r\n                        <span class=\"example-element-description-attribution\">\r\n                             {{element.description}}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n    </tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-create',\r\n  templateUrl: './categories-create.component.html',\r\n  styleUrls: ['./categories-create.component.css']\r\n})\r\nexport class CategoriesCreateComponent {\r\n\r\n    @Input() category: Category = new Category;    // добавляемый объект\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        private toastrService: ToastrService) { }\r\n\r\n    save() {\r\n        console.log(this.category);\r\n        this.categoryService.createCategory(this.category).subscribe(() => {\r\n          this.toastrService.success(`Category ${this.category.name} is Created`);\r\n          this.router.navigateByUrl(\"/admin-panel/categories\")\r\n        });\r\n     }\r\n\r\n}\r\n","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление новой категори</span></h1>\r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/categories'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport dataJson from '../../jsonFiles/dataJson.json';\r\n\r\n@Component({\r\n  selector: 'test-json',\r\n  templateUrl: './test-json.component.html',\r\n  styleUrls: ['./test-json.component.css']\r\n})\r\nexport class TestJsonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  public countryList: { id: number, name: string, parentId: number, children: [] }[] = dataJson;\r\n\r\n  ngOnInit(): void { \r\n  }\r\n}\r\n"]}