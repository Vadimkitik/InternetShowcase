{"version":3,"sources":["webpack:///src/app/adminPanel/adminPanel-routing.module.ts","webpack:///src/app/adminPanel/adminPanel.module.ts","webpack:///src/app/adminPanel/panel/panel.component.ts","webpack:///src/app/adminPanel/panel/panel.component.html","webpack:///src/app/adminPanel/panel/product-form/product-create/product-create.component.ts","webpack:///src/app/adminPanel/panel/product-form/product-create/product-create.component.html","webpack:///src/app/adminPanel/panel/product-form/product-edit/product-edit.component.ts","webpack:///src/app/adminPanel/panel/product-form/product-edit/product-edit.component.html","webpack:///src/app/adminPanel/panel/product-form/product-form.component.ts","webpack:///src/app/adminPanel/panel/product-form/product-form.component.html","webpack:///src/app/adminPanel/panel/product-form/upload/upload.component.ts","webpack:///src/app/adminPanel/panel/product-form/upload/upload.component.html","webpack:///src/app/shared/models/product.model.ts"],"names":["adminRoutes","path","component","AdminPanelRoutingModule","forChild","imports","exports","AdminPanelModule","declarations","PanelComponent","productService","uploadService","categoryService","columnsToDisplay","load","getProducts","subscribe","data","console","log","dataSource","paginator","sort","error","errorMsg","id","imageUrl","imageName","split","pop","DeleteFile","event","deleteProduct","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","height","minHeight","selector","templateUrl","styleUrls","animations","ProductCreateComponent","router","product","createProduct","navigateByUrl","save","ProductEditComponent","activeRoute","loaded","productLine","snapshot","params","getProduct","updateProduct","ProductFormComponent","catService","uploadFinished","response","dbPath","getCategories","categories","index","numbCat","numbSubCat","UploadComponent","formData","FormData","onUploadFinished","uploadFile","files","length","fileToUpload","append","name","UploadFile","type","UploadProgress","progress","Math","round","total","Response","message","emit","body","Product","description","price","oldPrice","isFavourite","available","categoryId","Category","subCategoryId","SubCategory","nderSubCategoryId","UnderSubCategory"],"mappings":"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","file":"adminPanel-adminPanel-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PanelComponent } from \"./panel/panel.component\";\r\nimport { ProductCreateComponent } from './panel/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './panel/product-form/product-edit/product-edit.component';\r\n\r\nconst adminRoutes: Routes = [\r\n    { path: '', component: PanelComponent },\r\n    { path: 'create', component: ProductCreateComponent },\r\n    { path: 'edit/:productLine', component: ProductEditComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(adminRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","\r\n\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AdminPanelRoutingModule } from './adminPanel-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PanelComponent } from './panel/panel.component';\r\nimport { UploadComponent } from './panel/product-form/upload/upload.component';\r\nimport { ProductCreateComponent } from './panel/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './panel/product-form/product-edit/product-edit.component';\r\nimport { ProductFormComponent } from './panel/product-form/product-form.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PanelComponent,\r\n        ProductFormComponent,\r\n        ProductCreateComponent,\r\n        ProductEditComponent,\r\n        UploadComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AdminPanelRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AdminPanelModule {\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class PanelComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<Product>;\r\n  columnsToDisplay = [ \r\n    'name', \r\n    'productLine', \r\n    'price', \r\n    'oldPrice', \r\n    'isFavourite',\r\n    'available', \r\n    'button'\r\n  ];\r\n  expandedElement: Product | null;\r\n  errorMsg: string;\r\n  categories: Category;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uploadService: UploadService,\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.productService.getProducts().subscribe((data: Product[]) => {\r\n      console.log(data);\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => this.errorMsg = error);\r\n  }\r\n\r\n  delete(id: number, imageUrl: string) {\r\n    var imageName = imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            console.log(`File ${imageName} is Deleted!`);\r\n        }, error => this.errorMsg = error );\r\n    this.productService.deleteProduct(id).subscribe(data => { \r\n      console.log(`Product with id ${id} is Deleted!`);\r\n      this.load();\r\n    }, error => this.errorMsg = error);    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button [routerLink]=\"['/admin-panel', 'create']\" class=\"createButton\" mat-raised-button>Добавить</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Роза..\" #input>\r\n  </mat-form-field>\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let product\">\r\n            <button [routerLink]=\"['/admin-panel/edit', product.productLine]\" mat-raised-button\r\n                color=\"accent\">Изменить</button>\r\n            <button (click)=\"delete(product.id, product.imageUrl)\" mat-raised-button color=\"warn\">Удалить</button>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n            <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"example-element-diagram\">\r\n                    <div class=\"example-element-name\">\r\n                        <img [src]=\"element.imageUrl\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"example-element-description\">\r\n                    {{element.description}}\r\n                    <span class=\"example-element-description-attribution\"></span>\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n    </tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\n\r\n@Component({\r\n    templateUrl: './product-create.component.html',\r\n    styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent {\r\n\r\n    public errorMsg;\r\n    product: Product = new Product();    // добавляемый объект\r\n    constructor(\r\n        private productService: ProductService,\r\n         private router: Router) { }\r\n\r\n    save() {\r\n        console.log(this.product);\r\n        this.productService.createProduct(this.product).subscribe(() => {\r\n             this.router.navigateByUrl(\"/admin-panel\")\r\n            }, error => this.errorMsg = error);\r\n     }\r\n}\r\n\r\n\r\n// assets/img/products/product-1.jpg","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление нового товара</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n    templateUrl: './product-edit.component.html',\r\n    styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n    productLine: string;\r\n    product: Product;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    errorMsg: string;\r\n    message: string;\r\n\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router, \r\n        private uploadService: UploadService,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.productLine)\r\n            this.productService.getProduct(this.productLine)\r\n                .subscribe((data: Product) => {\r\n                    this.product = data;\r\n                    if (this.product != null) this.loaded = true;\r\n                }, error => this.errorMsg = error);\r\n    }\r\n\r\n    save() {\r\n        this.productService.updateProduct(this.product).subscribe(() => { \r\n            this.router.navigateByUrl(\"/admin-panel\")\r\n        }, error => this.errorMsg = error);\r\n    }\r\n    deleteFile() {\r\n        var imageName = this.product.imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            console.log(`File ${imageName} is Deleted!`);\r\n            this.product.imageUrl = '';\r\n        }, error => this.errorMsg = error );\r\n        \r\n    }\r\n}","<div *ngIf=\"loaded\">\r\n        <h1 class=\"h1-line\"><span>Изменение товара</span></h1>\r\n        <h1>{{errorMsg}}</h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel'\" mat-raised-button color=\"warn\">Назад</button>\r\n        <button mat-raised-button color=\"warn\" (click)=\"deleteFile()\" *ngIf=\"product.imageUrl\">Удалить фото</button>\r\n    </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\r\n\r\nimport { Product } from '../../../shared/models/product.model';\r\nimport { Category } from '../../../shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n    selector: \"product-form\",\r\n    templateUrl: './product-form.component.html',\r\n    styleUrls: ['./product-form.component.scss'],\r\n})\r\nexport class ProductFormComponent {\r\n\r\n    @Input() response: { dbPath: '' };\r\n    categories: Category[];\r\n    numbCat: number;\r\n    numbSubCat: number;\r\n    @Input() product: Product;\r\n    public errorMsg;\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private catService: CategoryService\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n        this.catService.getCategories().subscribe((categories: Category[]) => {\r\n            this.categories = categories;\r\n            this.loaded = true;\r\n            console.log(categories);\r\n        }, error => this.errorMsg = error);\r\n    }\r\n\r\n    uploadFinished = (event) => {\r\n        this.response = event; \r\n        this.product.imageUrl = this.response.dbPath;\r\n    }\r\n    SetCategory(index: number) {\r\n        this.numbCat = index;\r\n        console.log(this.numbCat);\r\n    }\r\n    SetSubCategory(index: number) {\r\n        this.numbSubCat = index;\r\n        console.log(this.numbSubCat);\r\n    }\r\n}","<div class=\"product-form\" *ngIf=\"loaded\">\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [(ngModel)]=\"product.productLine\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Розы, тюльпаны, божий одуванчик...\" type=\"text\" [(ngModel)]=\"product.name\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [style.fontSize]=\"16\" class=\"product-full-width\">\r\n        <mat-label>Описание товара</mat-label>\r\n        <textarea matInput\r\n                  [(ngModel)]=\"product.description\"\r\n                  cdkTextareaAutosize\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"1\"\r\n                  cdkAutosizeMaxRows=\"5\"></textarea>\r\n      </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Цена</mat-label>\r\n        <input matInput placeholder=\"5$\" type=\"number\" [(ngModel)]=\"product.price\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Старая цена, если нужна</mat-label>\r\n        <input matInput placeholder=\"4\" type=\"number\" [(ngModel)]=\"product.oldPrice\" />\r\n    </mat-form-field>\r\n\r\n    <app-upload (onUploadFinished)=\"uploadFinished($event)\"></app-upload> \r\n\r\n    <img src=\"{{product.imageUrl}}\" alt=\"\">\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Является ли он топом\" [(ngModel)]=\"product.isFavourite\" required>\r\n        <mat-label>Является ли он топом: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Есть ли в наличии\" [(ngModel)]=\"product.available\" >\r\n        <mat-label>Есть ли в наличии: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Категория товара</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.categoryId\">\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            (click)=\"SetCategory(i)\"\r\n            >\r\n                {{ category.categoryName }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\" *ngIf=\"product.categoryId\" >\r\n        <mat-label>Подкатегория товара</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.subCategoryId\" >\r\n            <mat-option value=\"{{subCategory.id}}\" *ngFor=\"let subCategory of categories[numbCat].subCategories; let i = index\" (click)=\"SetSubCategory(i)\">\r\n                {{ subCategory.subCategoryName }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field class=\"product-full-width\" *ngIf=\"product.subCategoryId\">\r\n        <mat-label>Подподкатегория товара :)</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.underSubCategoryId\">\r\n            <mat-option value=\"{{underSubCategory.id}}\" *ngFor=\"let underSubCategory of categories[numbCat].subCategories[numbSubCat].underSubCategories\" >\r\n                {{ underSubCategory.underSubCategoryName }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  formData = new FormData();\r\n  message: string;\r\n  progress: number;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private uploadService: UploadService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadFile = (files) => {\r\n    if(files.length === 0)\r\n      return;\r\n\r\n    let fileToUpload = <File>files[0];\r\n    \r\n    this.formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    console.log(this.formData);\r\n\r\n    this.uploadService.UploadFile(this.formData).subscribe(event => {\r\n        if(event.type === HttpEventType.UploadProgress) {\r\n            this.progress = Math.round(100 * event.loaded / event.total);\r\n        }\r\n        else if(event.type === HttpEventType.Response) {\r\n            this.message = 'Upload file success!';\r\n            this.onUploadFinished.emit(event.body);\r\n        }\r\n    }, error => this.message = error);\r\n}\r\n\r\n}\r\n","<div class=\"row\" style=\"margin-bottom:15px;\">\r\n        <div class=\"col-md-3\">\r\n            <input \r\n                type=\"file\"\r\n                #file placeholder=\"Choose file\"\r\n                (change)=\"uploadFile(file.files)\"\r\n                style=\"display:none;\"\r\n                >\r\n                <button mat-raised-button color=\"primary\" (click)=\"file.click()\">Загрузить файл</button>\r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>","import { Category } from './category.model';\r\nimport { SubCategory } from './subCategory.model';\r\nimport { UnderSubCategory } from './underSubCategory.model';\r\n\r\nexport class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public productLine?: string,\r\n        public description?: string,\r\n        public price?: number,\r\n        public oldPrice?: number,\r\n        public imageUrl?: string,\r\n        public isFavourite?: boolean,\r\n        public available?: boolean,\r\n        public categoryId?: number,\r\n        public Category?: Category,\r\n        public subCategoryId?: number,\r\n        public SubCategory?: SubCategory,\r\n        public nderSubCategoryId?: number,\r\n        public UnderSubCategory?: UnderSubCategory\r\n        ) { }\r\n}\r\n\r\n"]}