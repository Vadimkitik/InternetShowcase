{"version":3,"sources":["./src/app/adminPanel/adminPanel-routing.module.ts","./src/app/adminPanel/adminPanel.component.ts","./src/app/adminPanel/adminPanel.component.html","./src/app/adminPanel/adminPanel.module.ts","./src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.ts","./src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.html","./src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.ts","./src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.html","./src/app/adminPanel/categories/categories-form/categories-form.component.ts","./src/app/adminPanel/categories/categories-form/categories-form.component.html","./src/app/adminPanel/categories/categories.component.ts","./src/app/adminPanel/categories/categories.component.html","./src/app/adminPanel/products/panel.component.ts","./src/app/adminPanel/products/panel.component.html","./src/app/adminPanel/products/product-form/product-create/product-create.component.ts","./src/app/adminPanel/products/product-form/product-create/product-create.component.html","./src/app/adminPanel/products/product-form/product-edit/product-edit.component.ts","./src/app/adminPanel/products/product-form/product-edit/product-edit.component.html","./src/app/adminPanel/products/product-form/product-form.component.ts","./src/app/adminPanel/products/product-form/product-form.component.html","./src/app/adminPanel/products/product-form/upload/upload.component.ts","./src/app/adminPanel/products/product-form/upload/upload.component.html","./src/app/adminPanel/test-json/test-json.component.ts","./src/app/adminPanel/users/users-form/users-create/users-create.component.ts","./src/app/adminPanel/users/users-form/users-create/users-create.component.html","./src/app/adminPanel/users/users-form/users-edit/users-edit.component.ts","./src/app/adminPanel/users/users-form/users-edit/users-edit.component.html","./src/app/adminPanel/users/users-form/users-form.component.ts","./src/app/adminPanel/users/users-form/users-form.component.html","./src/app/adminPanel/users/users.component.ts","./src/app/adminPanel/users/users.component.html","./src/app/shared/models/category.model.ts","./src/app/shared/models/product.model.ts","./src/app/shared/models/user.model.ts"],"names":[],"mappings":"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","file":"adminPanel-adminPanel-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { PanelComponent } from \"./products/panel.component\";\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { UsersComponent } from './users/users.component';\r\n\r\nconst adminRoutes: Routes = [\r\n    \r\n    { path: '', component: AdminPanelComponent, children: [\r\n        { path: 'product', component: PanelComponent },\r\n        { path: 'product/create', component: ProductCreateComponent },\r\n        { path: 'product/edit/:productLine', component: ProductEditComponent },\r\n        { path: 'users', component: UsersComponent },\r\n        { path: 'users/create', component: UsersCreateComponent },\r\n        { path: 'users/edit/:email', component: UsersEditComponent },\r\n        { path: 'categories', component: CategoriesComponent },\r\n        { path: 'categories/create', component: CategoriesCreateComponent },\r\n        { path: 'categories/edit/:categoryLine', component: CategoriesEditComponent }\r\n    ] },\r\n    \r\n    { path: 'test', component: TestJsonComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(adminRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './adminPanel.component.html',\r\n    styleUrls: ['./adminPanel.component.scss']\r\n})\r\nexport class AdminPanelComponent { }","<div class=\"admin-container\">\r\n  <button [routerLink]=\"['/admin-panel/product']\" class=\"createButton\" mat-raised-button>Товары</button>\r\n  <button [routerLink]=\"['/admin-panel/categories']\" class=\"createButton\" mat-raised-button >Категории</button>\r\n  <button [routerLink]=\"['/admin-panel/users']\" class=\"createButton\" mat-raised-button>Пользователи</button>\r\n</div>\r\n<router-outlet></router-outlet>","\r\n\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AdminPanelRoutingModule } from './adminPanel-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PanelComponent } from './products/panel.component';\r\nimport { UploadComponent } from './products/product-form/upload/upload.component';\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { ProductFormComponent } from './products/product-form/product-form.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { UsersFormComponent } from './users/users-form/users-form.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { CategoriesFormComponent } from './categories/categories-form/categories-form.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminPanelComponent,\r\n        PanelComponent,\r\n        ProductFormComponent,\r\n        ProductCreateComponent,\r\n        ProductEditComponent,\r\n        UploadComponent,\r\n        TestJsonComponent,\r\n        UsersComponent,\r\n        CategoriesComponent,\r\n        UsersFormComponent,\r\n        UsersCreateComponent,\r\n        UsersEditComponent,\r\n        CategoriesFormComponent,\r\n        CategoriesCreateComponent,\r\n        CategoriesEditComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AdminPanelRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AdminPanelModule {\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-create',\r\n  templateUrl: './categories-create.component.html',\r\n  styleUrls: ['./categories-create.component.css']\r\n})\r\nexport class CategoriesCreateComponent {\r\n\r\n    public errorMsg;\r\n    @Input() category: Category = new Category;    // добавляемый объект\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router) { }\r\n\r\n    save() {\r\n        console.log(this.category);\r\n        this.categoryService.createCategory(this.category).subscribe(() => {\r\n             this.router.navigateByUrl(\"/admin-panel/categories\")\r\n            }, error => this.errorMsg = error);\r\n     }\r\n\r\n}\r\n","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление новой категори</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/categories'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-edit',\r\n  templateUrl: './categories-edit.component.html',\r\n  styleUrls: ['./categories-edit.component.css']\r\n})\r\nexport class CategoriesEditComponent implements OnInit {\r\n\r\n  categoryLine: string;\r\n    @Input() category: Category;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    errorMsg: string;\r\n    message: string;\r\n\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.categoryLine = activeRoute.snapshot.params[\"categoryLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.categoryLine)\r\n            this.categoryService.getCategory(this.categoryLine)\r\n                .subscribe((data: Category) => {\r\n                    this.category = data;\r\n                    console.log(this.category);\r\n                    if (this.category != null) this.loaded = true;\r\n                }, error => this.errorMsg = error);\r\n    }\r\n\r\n    save() {\r\n       console.log(this.category);\r\n        this.categoryService.updateCategory(this.category).subscribe(() => { \r\n            this.router.navigateByUrl(\"/admin-panel/categories\")\r\n        }, error => this.errorMsg = error);\r\n    }\r\n}\r\n","<h1 class=\"h1-line\"><span>Изменение категории</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n<div *ngIf=\"loaded\">\r\n    \r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/categories'\" mat-raised-button color=\"warn\">Назад</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-form',\r\n  templateUrl: './categories-form.component.html',\r\n  styleUrls: ['./categories-form.component.css']\r\n})\r\nexport class CategoriesFormComponent implements OnInit {\r\n\r\n  @Input() category: Category;\r\n  @Input() categories: Category[];\r\n  public errorMsg;\r\n  loaded: boolean = false;\r\n  hide = true;\r\n  name = new FormControl('', [Validators.required]);\r\n  line = new FormControl('', [Validators.required]);\r\n\r\n\r\n  constructor(\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.categories)\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.categories = data;\r\n      this.categories.push({\r\n        children: null,\r\n        id: 0,\r\n        line: \"\",\r\n        name: \"Родительская категория\",\r\n        parent_Id: null,\r\n        products: null\r\n      })\r\n    });\r\n    console.log(this.categories)\r\n  }\r\n  getErrorMessage() {\r\n    if (this.name.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n}\r\n","<div class=\"product-form\" >\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path</mat-label>\r\n        <input \r\n        matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\"\r\n        type=\"text\" [(ngModel)]=\"category.line\" \r\n        [formControl]=\"line\"\r\n        />\r\n        <mat-error *ngIf=\"line.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Горшки, шары...\" \r\n        type=\"text\" [(ngModel)]=\"category.name\" \r\n        [formControl]=\"name\"\r\n        />\r\n        <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Parent_id</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"category.parent_Id\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.css']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<Category>;\r\n  columnsToDisplay = [\r\n    'id', \r\n    'line', \r\n    'name',\r\n    'parent_Id', \r\n    'button'\r\n  ];\r\n  expandedElement: Category | null;\r\n  errorMsg: string;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => this.errorMsg = error);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.categoryService.deleteCategory(id).subscribe(data => { \r\n      if(data) {\r\n        console.log(`Category with ID \"${id}\" is Deleted!`);\r\n      }\r\n      else {\r\n        this.errorMsg =`Category with ID \"${id}\" is NOT Deleted!`;\r\n      }      \r\n      console.log(data)\r\n      this.load();\r\n    }, error => this.errorMsg = error);    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  } \r\n}\r\n","<button [routerLink]=\"['/admin-panel/categories', 'create']\" class=\"createButton\" mat-raised-button>Создать Категорию</button>\r\n\r\n<h1 *ngIf=\"errorMsg\" style=\"text-align: center; color: red;\">{{errorMsg}}</h1>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\r\n  </mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let category\">\r\n            <button \r\n            [routerLink]=\"['/admin-panel/categories/edit', category.line]\" \r\n            mat-raised-button \r\n            color=\"accent\">Изменить</button>\r\n            <button (click)=\"delete(category.id)\" mat-raised-button color=\"warn\" >Удалить</button>\r\n        </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\n\r\n@Component({\r\n  selector: 'panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class PanelComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<Product>;\r\n  columnsToDisplay = [ \r\n    'name', \r\n    'productLine', \r\n    'price', \r\n    'oldPrice', \r\n    'isFavourite',\r\n    'available',\r\n    'category',\r\n    'button'\r\n  ];\r\n  expandedElement: Product | null;\r\n  errorMsg: string;  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uploadService: UploadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.productService.getProducts().subscribe((data: Product[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => this.errorMsg = error);\r\n  }\r\n\r\n  delete(id: number, imageUrl: string) {\r\n    var imageName = imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            console.log(`File ${imageName} is Deleted!`);\r\n        }, error => this.errorMsg = error );\r\n    this.productService.deleteProduct(id).subscribe(data => { \r\n      console.log(`Product with id ${id} is Deleted!`);\r\n      this.load();\r\n    }, error => this.errorMsg = error);    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button [routerLink]=\"['/admin-panel/product', 'create']\" class=\"createButton\" mat-raised-button>Добавить товар</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Роза..\" #input>\r\n  </mat-form-field>\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let product\">\r\n            <button [routerLink]=\"['/admin-panel/product/edit', product.productLine]\" mat-raised-button\r\n                color=\"accent\">Изменить</button>\r\n            <button (click)=\"delete(product.id, product.imageUrl)\" mat-raised-button color=\"warn\">Удалить</button>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n            <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"example-element-diagram\">\r\n                    <div class=\"example-element-name\">\r\n                        <img [src]=\"element.imageUrl\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"example-element-description\">\r\n                    {{element.description}}\r\n                    <span class=\"example-element-description-attribution\"></span>\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n    </tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\n\r\n@Component({\r\n    templateUrl: './product-create.component.html',\r\n    styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent {\r\n\r\n    public errorMsg;\r\n    product: Product = new Product();    // добавляемый объект\r\n    constructor(\r\n        private productService: ProductService,\r\n         private router: Router) { }\r\n\r\n    save() {\r\n        console.log(this.product);\r\n        this.productService.createProduct(this.product).subscribe(() => {\r\n             this.router.navigateByUrl(\"/admin-panel/product\")\r\n            }, error => this.errorMsg = error);\r\n     }\r\n}\r\n\r\n\r\n// assets/img/products/product-1.jpg","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление нового товара</span></h1>\r\n    <h1>{{errorMsg}}</h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/product'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n    templateUrl: './product-edit.component.html',\r\n    styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n    productLine: string;\r\n    @Input() product: Product;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    errorMsg: string;\r\n    message: string;\r\n\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router, \r\n        private uploadService: UploadService,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.productLine)\r\n            this.productService.getProduct(this.productLine)\r\n                .subscribe((data: Product) => {\r\n                    this.product = data;\r\n                    console.log(this.product);\r\n                    if (this.product != null) this.loaded = true;\r\n                }, error => this.errorMsg = error);\r\n    }\r\n\r\n    save() {\r\n        console.log(this.product)\r\n        this.productService.updateProduct(this.product).subscribe(() => { \r\n            this.router.navigateByUrl(\"/admin-panel/product\")\r\n        }, error => this.errorMsg = error);\r\n    }\r\n    deleteFile() {\r\n        var imageName = this.product.imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            console.log(`File ${imageName} is Deleted!`);\r\n            this.product.imageUrl = '';\r\n        }, error => this.errorMsg = error );\r\n        \r\n    }\r\n}","<div *ngIf=\"loaded\">\r\n        <h1 class=\"h1-line\"><span>Изменение товара</span></h1>\r\n        <h1>{{errorMsg}}</h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/product'\" mat-raised-button color=\"warn\">Назад</button>\r\n        <button mat-raised-button color=\"warn\" (click)=\"deleteFile()\" *ngIf=\"product.imageUrl\">Удалить фото</button>\r\n    </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\nimport { Product } from '../../../shared/models/product.model';\r\nimport { Category } from '../../../shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\nimport { TreeService } from 'src/app/shared/services/tree.service';\r\n\r\n@Component({\r\n    selector: \"product-form\",\r\n    templateUrl: './product-form.component.html',\r\n    styleUrls: ['./product-form.component.scss'],\r\n})\r\nexport class ProductFormComponent {\r\n\r\n    @Input() response: { dbPath: '' };\r\n    categories: Category[];\r\n    @Input() product: Product;\r\n    public errorMsg;\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private catService: CategoryService,\r\n        private treeService: TreeService\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n        this.catService.getCategories().subscribe((categories: Category[]) => {\r\n            this.categories = this.treeService.list_to_tree(categories);\r\n            this.categories = this.treeService.last_level_of_tree(categories);\r\n            console.log(this.categories);\r\n            this.loaded = true;\r\n        }, error => this.errorMsg = error);\r\n        \r\n    }\r\n\r\n    uploadFinished = (event) => {\r\n        this.response = event; \r\n        this.product.imageUrl = this.response.dbPath;\r\n    }\r\n}","<div class=\"product-form\" *ngIf=\"loaded\">\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [(ngModel)]=\"product.productLine\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Розы, тюльпаны, божий одуванчик...\" type=\"text\" [(ngModel)]=\"product.name\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [style.fontSize]=\"16\" class=\"product-full-width\">\r\n        <mat-label>Описание товара</mat-label>\r\n        <textarea matInput\r\n                  [(ngModel)]=\"product.description\"\r\n                  cdkTextareaAutosize\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"1\"\r\n                  cdkAutosizeMaxRows=\"5\"></textarea>\r\n      </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Цена</mat-label>\r\n        <input matInput placeholder=\"5$\" type=\"number\" [(ngModel)]=\"product.price\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Старая цена, если нужна</mat-label>\r\n        <input matInput placeholder=\"4\" type=\"number\" [(ngModel)]=\"product.oldPrice\" />\r\n    </mat-form-field>\r\n\r\n    <app-upload (onUploadFinished)=\"uploadFinished($event)\"></app-upload> \r\n\r\n    <img style=\"width: 50%;\" src=\"{{product.imageUrl}}\" alt=\"\">\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Является ли он топом\" [(ngModel)]=\"product.isFavourite\" required>\r\n        <mat-label>Является ли он топом: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Есть ли в наличии\" [(ngModel)]=\"product.available\" >\r\n        <mat-label>Есть ли в наличии: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Категория товара</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.categoryId\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  formData = new FormData();\r\n  message: string;\r\n  progress: number;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private uploadService: UploadService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadFile = (files) => {\r\n    if(files.length === 0)\r\n      return;\r\n\r\n    let fileToUpload = <File>files[0];\r\n    \r\n    this.formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    console.log(this.formData);\r\n\r\n    this.uploadService.UploadFile(this.formData).subscribe(event => {\r\n        if(event.type === HttpEventType.UploadProgress) {\r\n            this.progress = Math.round(100 * event.loaded / event.total);\r\n        }\r\n        else if(event.type === HttpEventType.Response) {\r\n            this.message = 'Upload file success!';\r\n            this.onUploadFinished.emit(event.body);\r\n        }\r\n    }, error => this.message = error);\r\n}\r\n\r\n}\r\n","<div class=\"row\" style=\"margin-bottom:15px;\">\r\n        <div class=\"col-md-3\">\r\n            <input \r\n                type=\"file\"\r\n                #file placeholder=\"Choose file\"\r\n                (change)=\"uploadFile(file.files)\"\r\n                style=\"display:none;\"\r\n                >\r\n                <button mat-raised-button color=\"primary\" (click)=\"file.click()\">Загрузить фото</button>\r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport dataJson from '../../jsonFiles/dataJson.json';\r\n\r\n@Component({\r\n  selector: 'test-json',\r\n  templateUrl: './test-json.component.html',\r\n  styleUrls: ['./test-json.component.css']\r\n})\r\nexport class TestJsonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  public countryList: { id: number, name: string, parentId: number, children: [] }[] = dataJson;\r\n\r\n  ngOnInit(): void { \r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from 'src/app/shared/models/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'users-create',\n  templateUrl: './users-create.component.html',\n  styleUrls: ['./users-create.component.css']\n})\nexport class UsersCreateComponent {\n\n  public errorMsg;\n    @Input() user: User = new User();    // добавляемый объект\n    constructor(\n        private usersService: UsersService,\n        private router: Router) { }\n\n    save() {\n        console.log(this.user);\n        this.usersService.createUser(this.user).subscribe(() => {\n             this.router.navigateByUrl(\"/admin-panel/users\")\n            }, error => this.errorMsg = error);\n     }\n}\n","<div>\n    <h1 class=\"h1-line\"><span>Добавление нового пользователя</span></h1>\n    <h1>{{errorMsg}}</h1>\n    <users-form [(user)]=\"user\"></users-form>\n    <div class=\"form-group\">\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/users'\">Отмена</button>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'users-edit',\n  templateUrl: './users-edit.component.html',\n  styleUrls: ['./users-edit.component.css']\n})\nexport class UsersEditComponent implements OnInit {\n\n    email: string;\n    @Input() user: User;    // изменяемый объект\n    loaded: boolean = false;\n    errorMsg: string;\n    message: string;\n\n    constructor(\n        private userService: UsersService,\n        private router: Router,\n        activeRoute: ActivatedRoute\n        ) \n    {\n        this.email = activeRoute.snapshot.params[\"email\"];\n    }\n\n    ngOnInit() {\n        if (this.email)\n            this.userService.getUserByEmail(this.email)\n                .subscribe((data: User) => {\n                    this.user = data;\n                    console.log(this.user);\n                    if (this.user != null) this.loaded = true;\n                }, error => this.errorMsg = error);\n    }\n\n    save() {\n       console.log(this.user);\n        this.userService.updateUser(this.user).subscribe(() => { \n            this.router.navigateByUrl(\"/admin-panel/users\")\n        }, error => this.errorMsg = error);\n    }\n}\n","<div *ngIf=\"loaded\">\n    <h1 class=\"h1-line\"><span>Изменение пользователя</span></h1>\n    <h1>{{errorMsg}}</h1>\n<users-form [(user)]=\"user\"></users-form>\n<div class=\"form-group\">\n    <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\n    <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n</div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'users-form',\n  templateUrl: './users-form.component.html',\n  styleUrls: ['./users-form.component.css']\n})\nexport class UsersFormComponent implements OnInit {\n\n  @Input() user: User;\n  public errorMsg;\n  loaded: boolean = false;\n  hide = true;\n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.required, Validators.email]);\n  password = new FormControl('', [Validators.required, Validators.minLength(5)]);\n  role = new FormControl('', [Validators.required]);\n\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n  getErrorMessageName() {\n    if (this.name.hasError('required')) {\n      return 'You must enter a value';\n    }\n  }\n\n  getErrorMessageEmail() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n  getErrorMessagePassw() {\n    if (this.password.hasError('required')) {\n      return 'Не оставлять пустым!';\n    }\n    return this.password.hasError('minlength') ? 'Пароль должен быть больше 5 символов' : '';\n  }\n  getErrorMessageRole() {\n    if (this.role.hasError('required')) {\n      return 'You must enter a value';\n    }\n  }\n}\n","<div class=\"product-form\">\n    <mat-form-field class=\"product-full-width\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [formControl]=\"name\" [(ngModel)]=\"user.name\" />\n        <mat-error *ngIf=\"name.invalid\">{{getErrorMessageName()}}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"pat@example.com\" [(ngModel)]=\"user.email\" [formControl]=\"email\" required>\n        <mat-error *ngIf=\"email.invalid\">{{getErrorMessageEmail()}}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\n        <mat-label>Введите пароль</mat-label>\n        <input matInput [formControl]=\"password\" [(ngModel)]=\"user.password\" [type]=\"hide ? 'password' : 'text'\">\n        <mat-error *ngIf=\"password.invalid\">{{getErrorMessagePassw()}}</mat-error>\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? \"visibility_off\" : 'visibility'}}</mat-icon>\n        </button>\n    </mat-form-field>\n\n    <mat-form-field class=\"product-full-width\">\n        <mat-label>Role</mat-label>\n        <input matInput placeholder=\"5$\" type=\"text\" [formControl]=\"role\" [(ngModel)]=\"user.role\" />\n        <mat-error *ngIf=\"role.invalid\">{{getErrorMessageRole()}}</mat-error>\n    </mat-form-field>\n\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Category } from 'src/app/shared/models/category.model';\nimport { User } from 'src/app/shared/models/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'users-list',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  dataSource: MatTableDataSource<User>;\n  columnsToDisplay = [\n    'email', \n    'name', \n    'role',\n    'button'\n  ];\n  expandedElement: User | null;\n  errorMsg: string;\n  categories: Category;\n  \n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    private usersService: UsersService\n  ) { }\n\n  ngOnInit() {\n    this.load();\n  }\n\n  load() {\n    this.usersService.getUsers().subscribe((data: User[]) => {\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, error => this.errorMsg = error);\n  }\n\n  delete(id: number) {\n    this.usersService.deleteUser(id).subscribe(data => { \n      console.log(`User with ID \"${id}\" is Deleted!`);\n      this.load();\n    }, error => this.errorMsg = error);    \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<button [routerLink]=\"['/admin-panel/users', 'create']\" class=\"createButton\" mat-raised-button>Добавить Пользователя</button>\n\n<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\n  </mat-form-field>\n\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\n    <ng-container \n        matColumnDef=\"{{column}}\"\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\n    >\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\n        <td mat-cell\n            *matCellDef=\"let element\"\n            class=\"example-element-text\"\n            > {{element[column]}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"button\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let user\">\n            <button [routerLink]=\"['/admin-panel/users/edit', user.email]\" mat-raised-button\n                color=\"accent\">Изменить</button>\n            <button (click)=\"delete(user.id)\" mat-raised-button color=\"warn\" >Удалить</button>\n        </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    constructor(\r\n        public id?: number,\r\n        public line?: string,\r\n        public name?: string,\r\n        public parent_Id?: number,\r\n        public products?: Product[],\r\n        public children?: null\r\n        ){ }\r\n}","import { Category } from './category.model';\r\n\r\nexport class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public productLine?: string,\r\n        public description?: string,\r\n        public price?: number,\r\n        public oldPrice?: number,\r\n        public imageUrl?: string,\r\n        public isFavourite?: boolean,\r\n        public available?: boolean,\r\n        public categoryId?: number,\r\n        public Category?: Category\r\n        ) { }\r\n}\r\n\r\n","export class User {\r\n    constructor(\r\n        public name?: string,\r\n        public email?: string,\r\n        public password?: string,\r\n        public role?: string,\r\n        public id?: number) { }\r\n}"],"sourceRoot":"webpack:///"}