{"version":3,"sources":["./src/app/adminPanel/adminPanel-routing.module.ts","./src/app/adminPanel/adminPanel.component.ts","./src/app/adminPanel/adminPanel.component.html","./src/app/adminPanel/adminPanel.module.ts","./src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.ts","./src/app/adminPanel/categories/categories-form/categories-create/categories-create.component.html","./src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.ts","./src/app/adminPanel/categories/categories-form/categories-edit/categories-edit.component.html","./src/app/adminPanel/categories/categories-form/categories-form.component.ts","./src/app/adminPanel/categories/categories-form/categories-form.component.html","./src/app/adminPanel/categories/categories.component.ts","./src/app/adminPanel/categories/categories.component.html","./src/app/adminPanel/products/product-form/product-create/product-create.component.ts","./src/app/adminPanel/products/product-form/product-create/product-create.component.html","./src/app/adminPanel/products/product-form/product-edit/product-edit.component.ts","./src/app/adminPanel/products/product-form/product-edit/product-edit.component.html","./src/app/adminPanel/products/product-form/product-form.component.ts","./src/app/adminPanel/products/product-form/product-form.component.html","./src/app/adminPanel/products/product-form/upload/upload.component.ts","./src/app/adminPanel/products/product-form/upload/upload.component.html","./src/app/adminPanel/products/products.component.ts","./src/app/adminPanel/products/products.component.html","./src/app/adminPanel/test-json/test-json.component.ts","./src/app/adminPanel/users/users-form/user-resetpassword/user-resetpassword.component.ts","./src/app/adminPanel/users/users-form/user-resetpassword/user-resetpassword.component.html","./src/app/adminPanel/users/users-form/user-roles/user-roles/user-roles.component.ts","./src/app/adminPanel/users/users-form/user-roles/user-roles/user-roles.component.html","./src/app/adminPanel/users/users-form/users-create/users-create.component.ts","./src/app/adminPanel/users/users-form/users-create/users-create.component.html","./src/app/adminPanel/users/users-form/users-edit/users-edit.component.ts","./src/app/adminPanel/users/users-form/users-edit/users-edit.component.html","./src/app/adminPanel/users/users.component.ts","./src/app/adminPanel/users/users.component.html","./src/app/shared/models/category.model.ts","./src/app/shared/models/product.model.ts","./src/app/shared/models/user-role/user.model.ts","./src/app/shared/models/user-role/userRoles.model.ts","./src/app/shared/models/user-role/userWithRoles.model.ts"],"names":[],"mappings":"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","file":"adminPanel-adminPanel-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '../shared/services/guards/admin-guard.service';\r\nimport { AuthGuard } from '../shared/services/guards/auth-guard.service';\r\nimport { ManagerGuard } from '../shared/services/guards/manager-guard.service';\r\n\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { ProductsComponent } from \"./products/products.component\";\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { UserRolesComponent } from './users/users-form/user-roles/user-roles/user-roles.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserResetpasswordComponent } from './users/users-form/user-resetpassword/user-resetpassword.component';\r\n\r\nconst adminRoutes: Routes = [\r\n    \r\n    { path: '', component: AdminPanelComponent, children: [\r\n        { path: 'products', component: ProductsComponent },\r\n        { path: 'products/create', component: ProductCreateComponent, canActivate: [ManagerGuard] },\r\n        { path: 'products/edit/:productLine', component: ProductEditComponent, canActivate: [ManagerGuard] },\r\n        { path: 'users', component: UsersComponent, canActivate: [AdminGuard]  }, \r\n        { path: 'users/resetpassword/:email', component: UserResetpasswordComponent, canActivate: [AdminGuard] }, \r\n        { path: 'users/roles/:userId', component: UserRolesComponent, canActivate: [AdminGuard] }, \r\n        { path: 'users/create', component: UsersCreateComponent, canActivate: [AdminGuard] }, \r\n        { path: 'users/edit/:email', component: UsersEditComponent, canActivate: [AdminGuard] }, \r\n        { path: 'categories', component: CategoriesComponent },\r\n        { path: 'categories/create', component: CategoriesCreateComponent, canActivate: [ManagerGuard] },\r\n        { path: 'categories/edit/:categoryLine', component: CategoriesEditComponent, canActivate: [ManagerGuard] }\r\n    ] , canActivate: [AuthGuard]  }, \r\n    \r\n    { path: 'test', component: TestJsonComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(adminRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminPanelRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../shared/services/auth.service';\r\n\r\nimport { User } from '../shared/models/user-role/user.model';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './adminPanel.component.html',\r\n    styleUrls: ['./adminPanel.component.scss']\r\n})\r\nexport class AdminPanelComponent implements OnInit{\r\n\r\n    user: User;\r\n    isAdmin = false;\r\n    date: Date = new Date();\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n    ngOnInit(){\r\n        this.user = this.authService.getUser();\r\n        if (this.user == null) {\r\n            this.user = {\r\n                \"userName\": 'Guest',\r\n                \"email\": 'Example@example.com',\r\n                'roles': []\r\n            }\r\n        }\r\n        if (this.user.roles.includes('admin')){\r\n            this.isAdmin = true;\r\n        }\r\n    }\r\n    onLogout() {\r\n        this.authService.logout();\r\n        this.router.navigate(['/auth/login']);\r\n    }\r\n }","<div class=\"admin-container\">\r\n  <div class=\"admin-time\">\r\n    {{ date | date:'dd.MM.yyyy'}}\r\n  </div>\r\n  <div class=\"admin-nav\">\r\n    <button [routerLink]=\"['/admin-panel/products']\" class=\"createButton\" mat-raised-button>Товары</button>\r\n    <button [routerLink]=\"['/admin-panel/categories']\" class=\"createButton\" mat-raised-button>Категории</button>\r\n    <button [routerLink]=\"['/admin-panel/users']\"  class=\"createButton\" mat-raised-button>Пользователи</button>\r\n  </div> \r\n  <!-- *ngIf=\"isAdmin\" -->\r\n\r\n  <div class=\"admin-menu\">\r\n    <button mat-button [matMenuTriggerFor]=\"menu\">Hello, {{ user.userName }}</button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item>{{ user.email }}</button>\r\n      <button mat-menu-item (click)=\"onLogout()\">Выйти</button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AdminPanelRoutingModule } from './adminPanel-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { UploadComponent } from './products/product-form/upload/upload.component';\r\nimport { ProductCreateComponent } from './products/product-form/product-create/product-create.component';\r\nimport { ProductEditComponent } from './products/product-form/product-edit/product-edit.component';\r\nimport { ProductFormComponent } from './products/product-form/product-form.component';\r\nimport { TestJsonComponent } from './test-json/test-json.component';\r\nimport { AdminPanelComponent } from './adminPanel.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { UsersCreateComponent } from './users/users-form/users-create/users-create.component';\r\nimport { UsersEditComponent } from './users/users-form/users-edit/users-edit.component';\r\nimport { CategoriesFormComponent } from './categories/categories-form/categories-form.component';\r\nimport { CategoriesCreateComponent } from './categories/categories-form/categories-create/categories-create.component';\r\nimport { CategoriesEditComponent } from './categories/categories-form/categories-edit/categories-edit.component';\r\nimport { UserRolesComponent } from './users/users-form/user-roles/user-roles/user-roles.component';\nimport { UserResetpasswordComponent } from './users/users-form/user-resetpassword/user-resetpassword.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminPanelComponent,\r\n        ProductsComponent,\r\n        ProductFormComponent,\r\n        ProductCreateComponent,\r\n        ProductEditComponent,\r\n        UploadComponent,\r\n        TestJsonComponent,\r\n        UsersComponent,\r\n        CategoriesComponent,\r\n        UsersCreateComponent,\r\n        UsersEditComponent,\r\n        CategoriesFormComponent,\r\n        CategoriesCreateComponent,\r\n        CategoriesEditComponent,\r\n        UserRolesComponent,\r\n        UserResetpasswordComponent        \r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        AdminPanelRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AdminPanelModule {\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-create',\r\n  templateUrl: './categories-create.component.html',\r\n  styleUrls: ['./categories-create.component.css']\r\n})\r\nexport class CategoriesCreateComponent {\r\n\r\n    @Input() category: Category = new Category;    // добавляемый объект\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        private toastrService: ToastrService) { }\r\n\r\n    save() {\r\n        console.log(this.category);\r\n        this.categoryService.createCategory(this.category).subscribe(() => {\r\n          this.toastrService.success(`Category ${this.category.name} is Created`);\r\n          this.router.navigateByUrl(\"/admin-panel/categories\")\r\n        });\r\n     }\r\n\r\n}\r\n","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление новой категори</span></h1>\r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/categories'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-edit',\r\n  templateUrl: './categories-edit.component.html',\r\n  styleUrls: ['./categories-edit.component.css']\r\n})\r\nexport class CategoriesEditComponent implements OnInit {\r\n\r\n  categoryLine: string;\r\n    @Input() category: Category;    // изменяемый объект\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        private toastrService: ToastrService,\r\n        activeRoute: ActivatedRoute\r\n        ) \r\n    {\r\n        this.categoryLine = activeRoute.snapshot.params[\"categoryLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.categoryLine)\r\n            this.categoryService.getCategory(this.categoryLine)\r\n                .subscribe((data: Category) => {\r\n                    this.category = data;\r\n                    if (this.category != null) this.loaded = true;\r\n                });\r\n    }\r\n\r\n    save() {\r\n       console.log(this.category);\r\n        this.categoryService.updateCategory(this.category).subscribe(() => { \r\n            this.toastrService.success(`Category changed`);\r\n            this.router.navigateByUrl(\"/admin-panel/categories\")\r\n        });\r\n    }\r\n}\r\n","<h1 class=\"h1-line\"><span>Изменение категории</span></h1>\r\n<div *ngIf=\"loaded\">\r\n    <categories-form [(category)]=\"category\"></categories-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/categories'\" mat-raised-button color=\"warn\">Назад</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories-form',\r\n  templateUrl: './categories-form.component.html',\r\n  styleUrls: ['./categories-form.component.css']\r\n})\r\nexport class CategoriesFormComponent implements OnInit {\r\n\r\n  @Input() category: Category;\r\n  @Input() categories: Category[];\r\n  loaded: boolean = false;\r\n  hide = true;\r\n  name = new FormControl('', [Validators.required]);\r\n  line = new FormControl('', [Validators.required]);\r\n\r\n\r\n  constructor(\r\n    private categoryService: CategoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.categories)\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.categories = data;\r\n      this.categories.push({\r\n        children: null,\r\n        id: 0,\r\n        line: \"\",\r\n        name: \"Родительская категория\",\r\n        parent_Id: null,\r\n        products: null\r\n      })\r\n    });\r\n  }\r\n  getErrorMessage() {\r\n    if (this.name.hasError('required')) {\r\n      return 'You must enter a value';\r\n    }\r\n  }\r\n}\r\n","<div class=\"product-form\" >\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path</mat-label>\r\n        <input \r\n        matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\"\r\n        type=\"text\" [(ngModel)]=\"category.line\" \r\n        [formControl]=\"line\"\r\n        />\r\n        <mat-error *ngIf=\"line.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Горшки, шары...\" \r\n        type=\"text\" [(ngModel)]=\"category.name\" \r\n        [formControl]=\"name\"\r\n        />\r\n        <mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Parent_id</mat-label>\r\n        <mat-select [(ngModel)]=\"category.parent_Id\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.css']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  accessRights = false;\r\n  user: User;\r\n  dataSource: MatTableDataSource<Category>;\r\n  columnsToDisplay = [\r\n    'id', \r\n    'line', \r\n    'name',\r\n    'parent_Id', \r\n    'button'\r\n  ];\r\n  expandedElement: Category | null;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private toastrService: ToastrService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.getUser();\r\n    if(this.user.roles.includes('admin') || this.user.roles.includes('manager')){\r\n      this.accessRights = true;\r\n    }\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.categoryService.getCategories().subscribe((data: Category[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.categoryService.deleteCategory(id).subscribe(res => { \r\n      this.toastrService.success(`Category with ID \"${id}\" is Deleted!`);\r\n      this.load();\r\n    });    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  } \r\n}\r\n","<button \r\n    [routerLink]=\"['/admin-panel/categories', 'create']\" \r\n    class=\"createButton\" \r\n    mat-raised-button\r\n    *ngIf=\"accessRights\"\r\n    >Создать Категорию\r\n</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\r\n  </mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let category\">\r\n            <button \r\n                [routerLink]=\"['/admin-panel/categories/edit', category.line]\" \r\n                mat-raised-button \r\n                color=\"accent\"\r\n                *ngIf=\"accessRights\"\r\n                >Изменить\r\n            </button>\r\n            <button \r\n                (click)=\"delete(category.id)\" \r\n                mat-raised-button color=\"warn\"\r\n                *ngIf=\"accessRights\" \r\n                >Удалить\r\n            </button>\r\n        </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    templateUrl: './product-create.component.html',\r\n    styleUrls: ['./product-create.component.scss']\r\n})\r\nexport class ProductCreateComponent {\r\n\r\n    product: Product = new Product();    // добавляемый объект\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router,\r\n        private toastrService: ToastrService\r\n        ) { }\r\n\r\n    save() {\r\n        console.log(this.product);\r\n        this.productService.createProduct(this.product).subscribe(() => {\r\n            this.toastrService.success(`Product ${this.product.name} Created`)\r\n             this.router.navigateByUrl(\"/admin-panel/products\")\r\n            });\r\n     }\r\n}\r\n","<div>\r\n    <h1 class=\"h1-line\"><span>Добавление нового товара</span></h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button  mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/products'\">Отмена</button>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProductService } from '../../../../shared/services/product.service';\r\nimport { Product } from '../../../../shared/models/product.model';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    templateUrl: './product-edit.component.html',\r\n    styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n    productLine: string;\r\n    @Input() product: Product;    // изменяемый объект\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private productService: ProductService,\r\n        private router: Router, \r\n        private uploadService: UploadService,\r\n        private activeRoute: ActivatedRoute,\r\n        private toastrService: ToastrService\r\n        ) \r\n    {\r\n        this.productLine = activeRoute.snapshot.params[\"productLine\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.productLine)\r\n            this.productService.getProduct(this.productLine)\r\n                .subscribe((data: Product) => {\r\n                    this.product = data;\r\n                    if (this.product != null) this.loaded = true;\r\n                });\r\n    }\r\n\r\n    save() {\r\n        this.productService.updateProduct(this.product).subscribe(() => {\r\n            this.toastrService.success(`Product changed`)\r\n            this.router.navigateByUrl(\"/admin-panel/products\")\r\n        });\r\n    }\r\n    deleteFile() {\r\n        var imageName = this.product.imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n            this.toastrService.success(`File ${imageName} is Deleted!`);\r\n            this.product.imageUrl = '';\r\n        });\r\n        \r\n    }\r\n}","<div *ngIf=\"loaded\">\r\n        <h1 class=\"h1-line\"><span>Изменение товара</span></h1>\r\n    <product-form [(product)]=\"product\"></product-form>\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\r\n        <button [routerLink]=\"'/admin-panel/products'\" mat-raised-button color=\"warn\">Назад</button>\r\n        <button mat-raised-button color=\"warn\" (click)=\"deleteFile()\" *ngIf=\"product.imageUrl\">Удалить фото</button>\r\n    </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\nimport { Product } from '../../../shared/models/product.model';\r\nimport { Category } from '../../../shared/models/category.model';\r\nimport { CategoryService } from 'src/app/shared/services/category.service';\r\nimport { TreeService } from 'src/app/shared/services/tree.service';\r\n\r\n@Component({\r\n    selector: \"product-form\",\r\n    templateUrl: './product-form.component.html',\r\n    styleUrls: ['./product-form.component.scss'],\r\n})\r\nexport class ProductFormComponent {\r\n\r\n    @Input() response: { dbPath: '' };\r\n    categories: Category[];\r\n    @Input() product: Product;\r\n    public errorMsg;\r\n    loaded: boolean = false;\r\n\r\n    constructor(\r\n        private catService: CategoryService,\r\n        private treeService: TreeService\r\n        ) { }\r\n\r\n    ngOnInit() {\r\n        this.catService.getCategories().subscribe((categories: Category[]) => {\r\n            this.categories = this.treeService.list_to_tree(categories);\r\n            this.categories = this.treeService.last_level_of_tree(categories);\r\n            this.loaded = true;\r\n        }, error => this.errorMsg = error);\r\n        \r\n    }\r\n\r\n    uploadFinished = (event) => {\r\n        this.response = event; \r\n        this.product.imageUrl = this.response.dbPath;\r\n    }\r\n}","<div class=\"product-form\" *ngIf=\"loaded\">\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Path name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" [(ngModel)]=\"product.productLine\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput placeholder=\"Розы, тюльпаны, божий одуванчик...\" type=\"text\" [(ngModel)]=\"product.name\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [style.fontSize]=\"16\" class=\"product-full-width\">\r\n        <mat-label>Описание товара</mat-label>\r\n        <textarea matInput\r\n                  [(ngModel)]=\"product.description\"\r\n                  cdkTextareaAutosize\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"1\"\r\n                  cdkAutosizeMaxRows=\"5\"></textarea>\r\n      </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Цена</mat-label>\r\n        <input matInput placeholder=\"5$\" type=\"number\" [(ngModel)]=\"product.price\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Старая цена, если нужна</mat-label>\r\n        <input matInput placeholder=\"4\" type=\"number\" [(ngModel)]=\"product.oldPrice\" />\r\n    </mat-form-field>\r\n\r\n    <app-upload (onUploadFinished)=\"uploadFinished($event)\"></app-upload> \r\n\r\n    <img style=\"width: 50%;\" src=\"{{product.imageUrl}}\" alt=\"\">\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Является ли он топом\" [(ngModel)]=\"product.isFavourite\" required>\r\n        <mat-label>Является ли он топом: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n\r\n    <mat-radio-group class=\"product-full-width\" aria-label=\"Есть ли в наличии\" [(ngModel)]=\"product.available\" >\r\n        <mat-label>Есть ли в наличии: </mat-label>\r\n        <mat-radio-button value=\"true\" color=\"primary\">Да</mat-radio-button>\r\n        <mat-radio-button value=\"false\">Нет</mat-radio-button>\r\n    </mat-radio-group>\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Категория товара</mat-label>\r\n        <h1>{{errorMsg}}</h1>\r\n        <mat-select [(ngModel)]=\"product.categoryId\" >\r\n            <mat-option \r\n            value=\"{{category.id}}\"\r\n            *ngFor=\"let category of categories; let i = index\"\r\n            >\r\n                {{ category.name }}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  formData = new FormData();\r\n  message: string;\r\n  progress: number;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private uploadService: UploadService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadFile = (files) => {\r\n    if(files.length === 0)\r\n      return;\r\n\r\n    let fileToUpload = <File>files[0];\r\n    \r\n    this.formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    console.log(this.formData);\r\n\r\n    this.uploadService.UploadFile(this.formData).subscribe(event => {\r\n        if(event.type === HttpEventType.UploadProgress) {\r\n            this.progress = Math.round(100 * event.loaded / event.total);\r\n        }\r\n        else if(event.type === HttpEventType.Response) {\r\n            this.message = 'Upload file success!';\r\n            this.onUploadFinished.emit(event.body);\r\n        }\r\n    }, error => this.message = error);\r\n}\r\n\r\n}\r\n","<div class=\"row\" style=\"margin-bottom:15px;\">\r\n        <div class=\"col-md-3\">\r\n            <input \r\n                type=\"file\"\r\n                #file placeholder=\"Choose file\"\r\n                (change)=\"uploadFile(file.files)\"\r\n                style=\"display:none;\"\r\n                >\r\n                <button mat-raised-button color=\"primary\" (click)=\"file.click()\">Загрузить фото</button>\r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { Product } from 'src/app/shared/models/product.model';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { UploadService } from 'src/app/shared/services/upload.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\n\r\n@Component({\r\n  selector: 'products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  accessRights = false;\r\n  user: User;\r\n  dataSource: MatTableDataSource<Product>;\r\n  columnsToDisplay = [ \r\n    'name', \r\n    'price', \r\n    'oldPrice', \r\n    'isFavourite',\r\n    'available',\r\n    'category',\r\n    'button'\r\n  ];\r\n  expandedElement: Product | null;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private productService: ProductService,\r\n    private uploadService: UploadService,\r\n    private toastrService: ToastrService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.authService.getUser();\r\n    if(this.user.roles.includes('admin') || this.user.roles.includes('manager')){\r\n      this.accessRights = true;\r\n    }\r\n    this.load();\r\n  }\r\n\r\n  load() {    \r\n    this.productService.getProducts().subscribe((data: Product[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number, imageUrl: string) {\r\n    var imageName = imageUrl.split(\"\\\\\").pop();\r\n        this.uploadService.DeleteFile(imageName).subscribe(event => {\r\n          this.toastrService.success(`Removal image ${imageName} successful`)\r\n        });\r\n    this.productService.deleteProduct(id).subscribe(data => { \r\n      this.toastrService.success(`Removal product with id ${id} successful`)\r\n      this.load();\r\n    });    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button \r\n    [routerLink]=\"['/admin-panel/products/', 'create']\" \r\n    *ngIf=\"accessRights\" \r\n    class=\"createButton\" \r\n    mat-raised-button\r\n    >Добавить товар\r\n</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Роза..\" #input>\r\n  </mat-form-field>\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container \r\n        matColumnDef=\"{{column}}\"\r\n        *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\"\r\n    >\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"example-element-text\"\r\n            > {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let product\">\r\n            <button\r\n                *ngIf=\"accessRights\"\r\n                [routerLink]=\"['/admin-panel/products/edit', product.productLine]\" \r\n                mat-raised-button\r\n                color=\"accent\"\r\n                >Изменить\r\n            </button>\r\n            <button \r\n                (click)=\"delete(product.id, product.imageUrl)\"\r\n                *ngIf=\"accessRights\"\r\n                mat-raised-button color=\"warn\"\r\n                >Удалить\r\n            </button>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n    <ng-container matColumnDef=\"expandedDetail\">\r\n        <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n            <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"example-element-diagram\">\r\n                    <div class=\"example-element-name\">\r\n                        <img [src]=\"element.imageUrl\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"example-element-description\">\r\n                    <p>\r\n                        Строка в Url: \r\n                        <span class=\"example-element-description-attribution\">\r\n                            {{ element.productLine}}.\r\n                       </span>\r\n                    </p>\r\n                    <p>\r\n                    Описание :\r\n                        <span class=\"example-element-description-attribution\">\r\n                             {{element.description}}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n        [class.example-expanded-row]=\"expandedElement === element\"\r\n        (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n    </tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Component, OnInit } from '@angular/core';\r\nimport dataJson from '../../jsonFiles/dataJson.json';\r\n\r\n@Component({\r\n  selector: 'test-json',\r\n  templateUrl: './test-json.component.html',\r\n  styleUrls: ['./test-json.component.css']\r\n})\r\nexport class TestJsonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  public countryList: { id: number, name: string, parentId: number, children: [] }[] = dataJson;\r\n\r\n  ngOnInit(): void { \r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/shared/models/user-role/user.model';\nimport { UsersService } from 'src/app/shared/services/users.service';\nimport { UserValidateService } from 'src/app/shared/services/userValidate.service';\n\n@Component({\n  selector: 'user-resetpassword',\n  templateUrl: './user-resetpassword.component.html',\n  styleUrls: ['./user-resetpassword.component.css']\n})\nexport class UserResetpasswordComponent implements OnInit {\n\n  emailLine: string;\n  loaded: boolean = false;\n  user: User;\n  form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private toastrService: ToastrService,\n    private userValidate: UserValidateService,\n    private activeRoute: ActivatedRoute,\n    private userService: UsersService\n  ) {\n    this.emailLine = activeRoute.snapshot.params[\"email\"];\n  }\n\n  ngOnInit(): void {\n    if (this.emailLine) {\n      this.userService.getUserByEmail(this.emailLine)\n        .subscribe((data: User) => {\n          this.user = data;\n          if (this.user != null) {\n            this.form = new FormGroup({\n              'newPassword': new FormControl('', [Validators.required, Validators.minLength(6)])\n            });\n            this.loaded = true;\n          }\n        });\n    }\n  }\n\n  onSubmit() {\n    let userWithNewPassword = {\n      id: this.user.id,\n      email: this.user.email,\n      newpassword: this.form.get('newPassword').value\n    };\n    this.userService.changePassword(userWithNewPassword).subscribe(data => {\n      this.toastrService.success(`Пароль изменен`);\n      this.router.navigate(['/admin-panel/users']);\n    });\n  }\n\n  getErrorMessagePassw() {\n    return this.userValidate.getErrorMessagePassw(this.form.get('newPassword'));\n  }\n\n}\n","<h1 class=\"h1-line\"><span>Сброс пароля</span></h1>\n<div *ngIf=\"loaded\">\n  <div class=\"form\">\n    <form class=\"product-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <h3>Email: {{ user.email}}</h3>\n      <div class=\"example-container\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Введите пароль</mat-label>\n          <input matInput formControlName=\"newPassword\" type=\"password\" required />\n          <mat-error *ngIf=\"form.get('newPassword').invalid\n                                && form.get('newPassword').touched\">{{getErrorMessagePassw()}}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Сохранить</button>\n      <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n    </form>\n  </div>\n</div>\n<div class=\"form-group_notFound\" *ngIf=\"!loaded\">\n  <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserRoles } from 'src/app/shared/models/user-role/userRoles.model';\nimport { UserWithRoles } from 'src/app/shared/models/user-role/userWithRoles.model';\nimport { RolesService } from 'src/app/shared/services/roles.service';\n\n@Component({\n  selector: 'user-roles',\n  templateUrl: './user-roles.component.html',\n  styleUrls: ['./user-roles.component.css']\n})\nexport class UserRolesComponent implements OnInit {\n\n  userId: string;\n  userWithRoles: UserWithRoles = new UserWithRoles();\n  userRoles: UserRoles = new UserRoles();   \n  loaded: boolean = false;\n  \n  constructor(\n      private router: Router,\n      private toastrService: ToastrService,\n      private rolesService: RolesService,\n      private activeRoute: ActivatedRoute\n      ) {\n        this.userId = activeRoute.snapshot.params[\"userId\"];\n       }\n\n  ngOnInit() {\n    if (this.userId) {\n      this.rolesService.GetUserWithRoles(this.userId)\n          .subscribe( res => {\n              this.userWithRoles = res;\n              if (this.userWithRoles != null) {\n                  this.loaded = true;\n                  this.userRoles = {\n                    userId: res.userId,\n                    roles: res.userRoles\n                  }\n              }              \n          });\n  }    \n}\n\nonToggle(event) {\n  if (event.checked) {\n    this.userRoles.roles.push(event.value)\n  }\n  else {\n    let index = this.userRoles.roles.indexOf(event.value);\n    if(index > -1) {\n      this.userRoles.roles.splice(index, 1);\n    }    \n  }\n}\n\nsave() {\n  this.rolesService.EditUserRoles(this.userRoles).subscribe(res => {\n    this.toastrService.success(`Roles for ${this.userWithRoles.userEmail} changed successfully!`);\n    this.router.navigate([\"/admin-panel/users\"]);\n  })\n}\n}\n","<h1 class=\"h1-line\"><span>Изменение ролей для пользователя</span></h1>\n<div *ngIf=\"loaded\">\n    <div class=\"form\">\n        <div class=\"product-form\">\n            <h3>Email: {{ userWithRoles.userEmail}}</h3>\n            <div class=\"form-group\">\n                <section class=\"example-section\" *ngFor=\"let role of userWithRoles.allRoles\">\n                    <mat-checkbox class=\"example-margin\" #roleCheck\n                        checked=\"{{userRoles.roles.includes(role.name)? 'checked': ''}}\" (change)=\"onToggle(roleCheck)\"\n                        value=\"{{role.name}}\">{{ role.name }}\n                    </mat-checkbox>\n                </section>\n            </div>\n            <button mat-raised-button color=\"primary\" (click)=\"save()\">Сохранить</button>\n            <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n        </div>\n    </div>\n</div>\n<div class=\"form-group_notFound\" *ngIf=\"!loaded\">\n    <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { UserValidateService } from '../../../../shared/services/userValidate.service';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\nimport { UserRoles } from 'src/app/shared/models/user-role/userRoles.model';\r\nimport { RolesService } from 'src/app/shared/services/roles.service';\r\n\r\n@Component({\r\n  selector: 'users-create',\r\n  templateUrl: './users-create.component.html',\r\n  styleUrls: ['./users-create.component.css']\r\n})\r\nexport class UsersCreateComponent implements OnInit {\r\n\r\n  @Input() user: User = new User();  \r\n  loaded: boolean = false;\r\n  hide = true;\r\n  form: FormGroup;\r\n  userRoles: Array<string> = [];\r\n  allRoles: Array<string> = [];\r\n  \r\n  constructor(\r\n      private usersService: UsersService,\r\n      private router: Router,\r\n      private toastrService: ToastrService,\r\n      private userValidate: UserValidateService,\r\n      private rolesService: RolesService\r\n      ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rolesService.GetAllRoles().subscribe(res => {\r\n      this.allRoles = res;\r\n    })\r\n    this.form = new FormGroup({\r\n      'userName': new FormControl('', [Validators.required]),\r\n      'email': new FormControl('', [Validators.required, Validators.email]),\r\n      'password': new FormControl('', [Validators.required, Validators.minLength(5)])\r\n    })\r\n  }\r\n\r\n  onToggle(event) {\r\n    if (event.checked) {\r\n      this.userRoles.push(event.value)\r\n    }\r\n    else {\r\n      let index = this.userRoles.indexOf(event.value);\r\n      if(index > -1) {\r\n        this.userRoles.splice(index, 1);\r\n      }    \r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.user.roles = this.userRoles;\r\n    console.log(this.user)\r\n    this.usersService.createUser(this.user).subscribe(() => {\r\n      this.toastrService.success(`User ${this.user.userName} is Created`);\r\n      this.router.navigateByUrl(\"/admin-panel/users\")\r\n      \r\n    });\r\n  }\r\n\r\n  getErrorMessageName() {\r\n    return this.userValidate.getErrorMessageName(this.form.get('userName'));\r\n  }\r\n\r\n  getErrorMessageEmail() {\r\n    return this.userValidate.getErrorMessageEmail(this.form.get('email'));\r\n  }\r\n\r\n  getErrorMessagePassw() {\r\n    return this.userValidate.getErrorMessagePassw(this.form.get('password'));\r\n  }\r\n}\r\n","<h1 class=\"h1-line\"><span>Добавление нового пользователя</span></h1>\r\n<form class=\"product-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <mat-form-field class=\"product-full-width\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" formControlName=\"userName\"\r\n            [(ngModel)]=\"user.userName\" />\r\n        <mat-error *ngIf=\"form.get('userName').invalid\">{{getErrorMessageName()}}</mat-error>\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"pat@example.com\" [(ngModel)]=\"user.email\" formControlName=\"email\" required>\r\n        <mat-error *ngIf=\"form.get('email').invalid\">{{getErrorMessageEmail()}}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" class=\"product-full-width\">\r\n        <mat-label>Введите пароль</mat-label>\r\n        <input matInput formControlName=\"password\" [(ngModel)]=\"user.password\" [type]=\"hide ? 'password' : 'text'\">\r\n        <mat-error *ngIf=\"form.get('password').invalid\">{{getErrorMessagePassw()}}</mat-error>\r\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>{{hide ? \"visibility_off\" : 'visibility'}}</mat-icon>\r\n        </button>\r\n    </mat-form-field>\r\n\r\n    <div class=\"form-group\" >\r\n        <section class=\"example-section\" *ngFor=\"let role of allRoles\">\r\n            <mat-checkbox                   \r\n                class=\"example-margin\"\r\n                #roleCheck\r\n                checked=\"{{userRoles.includes(role.name)? 'checked': ''}}\"\r\n                (change)=\"onToggle(roleCheck)\"\r\n                value=\"{{role.name}}\"\r\n                >{{ role.name }}\r\n            </mat-checkbox>\r\n        </section>        \r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Сохранить</button>\r\n        <button mat-raised-button color=\"warn\" [routerLink]=\"'/admin-panel/users'\">Отмена</button>\r\n    </div>\r\n</form>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\nimport { UserValidateService } from '../../../../shared/services/userValidate.service';\r\n\r\n@Component({\r\n    selector: 'users-edit',\r\n    templateUrl: './users-edit.component.html',\r\n    styleUrls: ['./users-edit.component.css']\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n\r\n    emailLine: string;\r\n    @Input() user: User;    // изменяемый объект\r\n    loaded: boolean = false;\r\n    form: FormGroup;\r\n\r\n    constructor(\r\n        private userService: UsersService,\r\n        private router: Router,\r\n        private toastrService: ToastrService,\r\n        private userValidate: UserValidateService,\r\n        activeRoute: ActivatedRoute\r\n    ) {\r\n        this.emailLine = activeRoute.snapshot.params[\"email\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.emailLine) {\r\n            this.userService.getUserByEmail(this.emailLine)\r\n                .subscribe((data: User) => {\r\n                    this.user = data;\r\n                    if (this.user != null) {\r\n                        this.form = new FormGroup({\r\n                            'userName': new FormControl('', [Validators.required]),\r\n                            'email': new FormControl('', [Validators.required, Validators.email])\r\n                        });\r\n                        this.loaded = true;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.userService.updateUser(this.user).subscribe(() => {\r\n            this.toastrService.success(`User changed`);\r\n            this.router.navigateByUrl(\"/admin-panel/users\");\r\n        });\r\n    }\r\n\r\n    getErrorMessageName() {\r\n        return this.userValidate.getErrorMessageName(this.form.get('userName'));\r\n    }\r\n\r\n    getErrorMessageEmail() {\r\n        return this.userValidate.getErrorMessageEmail(this.form.get('email'));\r\n    }\r\n}\r\n","<div *ngIf=\"loaded\">\r\n    <h1 class=\"h1-line\"><span>Изменение пользователя</span></h1>\r\n    <form class=\"product-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field class=\"product-full-width\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput placeholder=\"rozi,tulpani, bojiy_oduvanchik...\" type=\"text\" formControlName=\"userName\"\r\n                [(ngModel)]=\"user.userName\" />\r\n            <mat-error *ngIf=\"form.get('userName').invalid\">{{getErrorMessageName()}}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"product-full-width\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput placeholder=\"pat@example.com\" [(ngModel)]=\"user.email\" formControlName=\"email\" required>\r\n            <mat-error *ngIf=\"form.get('email').invalid\">{{getErrorMessageEmail()}}</mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"form-group\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Сохранить</button>\r\n            <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"form-group_notFound\" *ngIf=\"!loaded\">\r\n    <button [routerLink]=\"'/admin-panel/users'\" mat-raised-button color=\"warn\">Назад</button>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Category } from 'src/app/shared/models/category.model';\r\nimport { User } from 'src/app/shared/models/user-role/user.model';\r\nimport { UsersService } from 'src/app/shared/services/users.service';\r\n\r\n@Component({\r\n  selector: 'users-list',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<User>;\r\n  columnsToDisplay = [\r\n    'email', \r\n    'userName',\r\n    'button'\r\n  ];\r\n  expandedElement: User | null;\r\n  categories: Category;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private toastrSrvice: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    this.usersService.getUsers().subscribe((data: User[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.usersService.deleteUser(id).subscribe(res => { \r\n      this.toastrSrvice.success(`User with ID \"${id}\" is Deleted!`);\r\n      this.load();\r\n    });    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<button [routerLink]=\"['/admin-panel/users', 'create']\" class=\"createButton\" mat-raised-button>Добавить\r\n    Пользователя</button>\r\n\r\n<mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Some name..\" #input>\r\n</mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\r\n    <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay.slice(0, columnsToDisplay.length-1)\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"example-element-text\"> {{element[column]}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"button\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let user\">\r\n            <button mat-raised-button color=\"accent\" [matMenuTriggerFor]=\"menu\">Управление пользователем</button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button [routerLink]=\"['/admin-panel/users/edit', user.email]\"\r\n                    mat-menu-item \r\n                    >Изменить\r\n                </button>\r\n                <button [routerLink]=\"['/admin-panel/users/roles', user.id]\"\r\n                    mat-menu-item \r\n                    >Права доступа\r\n                </button>\r\n                <button [routerLink]=\"['/admin-panel/users/resetpassword', user.email]\"\r\n                    mat-menu-item \r\n                    >Сменить пароль\r\n                </button>\r\n                <button (click)=\"delete(user.id)\" \r\n                    mat-menu-item\r\n                    >Удалить\r\n                </button>\r\n            </mat-menu>            \r\n        </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" class=\"mat-elevation-z8\"></mat-paginator>","import { Product } from './product.model';\r\n\r\nexport class Category {\r\n    constructor(\r\n        public id?: number,\r\n        public line?: string,\r\n        public name?: string,\r\n        public parent_Id?: number,\r\n        public products?: Product[],\r\n        public children?: null\r\n        ){ }\r\n}","import { Category } from './category.model';\r\n\r\nexport class Product {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public productLine?: string,\r\n        public description?: string,\r\n        public price?: number,\r\n        public oldPrice?: number,\r\n        public imageUrl?: string,\r\n        public isFavourite?: boolean,\r\n        public available?: boolean,\r\n        public categoryId?: number,\r\n        public Category?: Category\r\n        ) { }\r\n}\r\n\r\n","export class User {\r\n    constructor(\r\n        public userName?: string,\r\n        public email?: string,\r\n        public password?: string,\r\n        public roles?: Array<string>,\r\n        public id?: string) { }\r\n}","export class UserRoles {\r\n    constructor(\r\n        public userId?: string,\r\n        public roles?: Array<string>\r\n    ){ }\r\n}","import { Role } from './role.model';\r\n\r\nexport class UserWithRoles {\r\n    constructor(\r\n        public userId?: string,\r\n        public userEmail?: string,\r\n        public allRoles?: Array<Role>,\r\n        public userRoles?: Array<string>\r\n    ){ }\r\n}"],"sourceRoot":"webpack:///"}